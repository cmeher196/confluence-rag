id,type,status,tiny_link,title,content,is_internal
167576345,page,current,/x/GQP9CQ,"Order Management, Transactions","Operations: Daily Stand-Up Call Weekly Updates Management Incident Analysis - Reduction TFS Defects, Stories << Last Release Backlog/ Future Releases Upcoming Release >> Deployments - Lessons Learned SNOW Dashboard Recurring Issues RT Meeting: Minutes Data Security & Compliance: Global Privacy and Compliance Program (GPC) OMEGA Optics Script for Update Testing - PWC Order Processing: ORM - Error Codes & Description Resources: Team Contacts New Hire - Welcome Document Weekend Rota Sample OOO Setup Materials Interfaces Architecture Functional Documents (Sharepoint) Code Snippets (Sharepoint) Welcome! This is the home page for your knowledge base space within Confluence. You can use your knowledge base to capture best practices and address common problems. Next, you might want to: 1 complete Create your first knowledge base article - Click ""Create"" and select a ""How-to"" or ""Troubleshooting"" article. 2 incomplete Customise the home page - Click ""Edit"" to get started. Include useful information like what users can expect to find in this knowledge base, frequently asked questions and links to other resources. Frequently asked questions Add links to popular how-to and troubleshooting articles. Highlight important documentation. Need more help? Link to resources such as your service desk, questions & answers or a forum. List contacts for getting additional help. Other resources Include links to relevant external sites and services. Add other helpful information. Browse by topic kb-how-to-article,kb-troubleshooting-article Recently updated articles page,blogpost true",False
167576397,page,current,/x/TQP9CQ,Platform,,False
167576400,page,current,/x/UAP9CQ,Astra,,False
167577015,page,current,/x/twX9CQ,Abacus,,False
167577017,page,current,/x/uQX9CQ,Order Store,,False
167577021,page,current,/x/vQX9CQ,Platform Services,,False
172261573,page,current,/x/xYBECg,Common AR,,False
172261575,page,current,/x/x4BECg,Veritas,"Veritas is a PO Match Order and AR, Application to streamline Dell Invoicing process. This solution should improve the practice in customer ERP system. Hence the final invoice send from Dell system should have sufficient information for their 3 way match; PO, Invoice, Receiving document validation. This solution should meet the expectation of channel partners and distributors who expects invoice with purchase order match and item match (With custom PO information from customer ERP) details from Dell system and transfer automated invoice in partner system.",False
172261577,page,current,/x/yYBECg,Global Invoice Visibility,,False
172261584,page,current,/x/0IBECg,Flexbilling,,False
172261586,page,current,/x/0oBECg,Flex Ordering,,False
172721286,page,current,/x/hoRLCg,Flex billing Knowledge base,,False
172721350,page,current,/x/xoRLCg,Flex Ordering Wiki,,False
172721356,page,current,/x/zIRLCg,Price Quote API : How it works? (A high level overview),"The latest updates are present in the below location: (Updated on : 02/22/2022) Price Quote API gives complete data of the customer that is stored in the Oracle BRM database. This is being used by Dell.com and DSA to render their quote page. Just to give some back ground, Dell.com and DSA were calling the BRM data base initially, which used to take around 20 seconds to get the response.  The SLA for the response is < 2 seconds. In order to resolve this issue, a new architecture has been introduced. Instead of taking data directly from BRM DB, Below process has been followed. Every update to the purchased product and bill plan (billinfo) a trigger (BILLPLAN_TRIGGER), Payment information in BRM will be called. The trigger, retrieves the customer ID (DCN), BIll_info_id (Bill plan id) and the account poid En queues the payload (as per Point #2) in BRMSTORE_EVENT_Q Below process explains the event driven data sync up between Oracle Database (Billing database) and Elastic Store through Astra engine and subscriber. The Astra Engine De queues the messages that are in BRMSTOR_EVENT_Q Using the Payload  the FB Store Subscriber module brings the required information from BRM DB  and stores them in the FB  Store. When Dell.com and DSA  needs  to get the quote, instead of calling BRM DB, they reach out to FB Gateway. FB Gateway calls the FB Susbscription Quote API which brings the data quickly from FB Store. The current SLA to bring the data with this approach  is <800 milli seconds.",False
182389386,page,current,/x/igrfCg,OMEGA Country List,,False
182780869,page,current,/x/xQPlCg,AR Architecture Slides,250 250,False
182780871,page,current,/x/xwPlCg,ARStore Non Prod MDC Servers,,False
182977997,page,current,/x/zQXoCg,Arstore Important URLs (Non prod),"ARSTORE UI url’s for Non-Prod instances ENV URL DIT1 https://arstoreui-dit1.ausvtc01.pcf.dell.com/ GE1 https://arstoreui-ge1.ausvtc01.pcf.dell.com/ GE2 https://arstoreui-ge2.ausvtc01.pcf.dell.com/ GE3 https://arstoreui-ge3.ausvtc01.pcf.dell.com/ GE4 https://arstoreui-ge4.ausvtc01.pcf.dell.com Steps to Repush from ARStore UI Event Name: dell.apps.xxg.arstore.transaction.complete dell.apps.xxg.ar.trx.gl .posted Application Name : ARstore/Choose the corresponding downstream BU Name: Choose the corresponding BU Transaction Numbers: Provide comma separated list of transaction numbers Note: Old AR Store config UI has been decommissioned. Refer below document for more details on AR store UI. 250 Kibana DEV https://ausilarui01.us.dell.com:8081/kibana Kibana SIT https://onear-nonprod.us.dell.com/kibana RabbitMQ DEV Console https://ausilarui01.us.dell.com:8081/rabbitmq-dev RabbitMQ DEV ausilarui01.us.dell.com :9042 RabbitMQ SIT Console https://onear-nonprod.us.dell.com/rabbitmq-sit/ RabbitMQ SIT ausularui01.us.dell.com :9042 ausslarui01.us.dell.com :9042 OneAR LoggerStore - DIT https://ausilarui01.us.dell.com:8081/es-ar/ OneAR Logger Store – SIT/PERF https://ausslarlescln01.us.dell.com:9201 https://ausslarlescln02.us.dell.com:9201 OneAR DataSTORE - DIT https://ausilarui01.us.dell.com:8081/arstore-es/ OneAR DataSTORE – SIT/PERF https://ausularescln01.us.dell.com:9205 https://ausularescln02.us.dell.com:9205 Omega CFO Weblogic Consoles GE2 https://u4vmotcdevap14.us.dell.com:8556/console/login/LoginForm.jsp GE4 http://ausulge4qtc01.us.dell.com:7550/console/login/LoginForm.jsp ConsDB TNS Entries: User Name : XXSQL_USER Password: SQL_USER    ( Read only User ) AR_SERVICE_GE2_TLS = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCPS)(HOST = arsv2si1db-cname.us.dell.com )(PORT = 1523)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = arsv2s_rw.sit.amer.dell.com ) ) (SECURITY=(SSL_SERVER_CERT_DN=""CN= arservicenp.us.dell.com ,OU=IEO,O=Dell Technologies"")) ) AR_SERVICE_GE4_TLS = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCPS)(HOST = arsv4si1db-cname.us.dell.com )(PORT = 1523)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = arsv4s_rw.sit.amer.dell.com ) ) (SECURITY=(SSL_SERVER_CERT_DN=""CN= arservicenp.us.dell.com ,OU=IEO,O=Dell Technologies"")) ) AR_SERVICE_GE2 = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = arsv2si1db-cname.us.dell.com )(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = arsv2s_rw.sit.amer.dell.com ) ) ) AR_SERVICE_GE4 = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = arsv4si1db-cname.us.dell.com )(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = arsv4s_rw.sit.amer.dell.com ) ) ) AR_SERVICE_GE3_TLS = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCPS)(HOST = arsv3si1db-cname.us.dell.com )(PORT = 1523)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = arsv3s_rw.sit.amer.dell.com ) ) (SECURITY=(SSL_SERVER_CERT_DN=""CN= arservicenp.us.dell.com ,OU=IEO,O=Dell Technologies"")) ) AR_SERVICE_GE3 = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = arsv3si1db-cname.us.dell.com )(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = arsv3s_rw.sit.amer.dell.com ) ) ) PROD: arsrvp_rw_oud = (DESCRIPTION = (CONNECT_TIMEOUT=90)(RETRY_COUNT=20)(RETRY_DELAY=3)(TRANSPORT_CONNECT_TIMEOUT=3 sec) (ADDRESS_LIST = (LOAD_BALANCE=on) (ADDRESS = (PROTOCOL = TCP)(HOST = arsrvpr3db-cname.us.dell.com )(PORT = 1521)) ) (ADDRESS_LIST = (LOAD_BALANCE=on) (ADDRESS = (PROTOCOL = TCP)(HOST = arsrvpr4db-cname.us.dell.com )(PORT = 1521)) ) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = arsrvp_rw.prd.amer.dell.com ) ) ) arsrvp_ro_oud = (DESCRIPTION = (CONNECT_TIMEOUT=90)(RETRY_COUNT=20)(RETRY_DELAY=3)(TRANSPORT_CONNECT_TIMEOUT=3 sec) (ADDRESS_LIST = (LOAD_BALANCE=on) (ADDRESS = (PROTOCOL = TCP)(HOST = arsrvpr3db-cname.us.dell.com )(PORT = 1521)) ) (ADDRESS_LIST = (LOAD_BALANCE=on) (ADDRESS = (PROTOCOL = TCP)(HOST = arsrvpr4db-cname.us.dell.com )(PORT = 1521)) ) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = arsrvp_ro.prd.amer.dell.com ) ) ) arsrvp_rw_oud_tls = (DESCRIPTION = (CONNECT_TIMEOUT=90)(RETRY_COUNT=20)(RETRY_DELAY=3)(TRANSPORT_CONNECT_TIMEOUT=3 sec) (ADDRESS_LIST = (LOAD_BALANCE=on) (ADDRESS = (PROTOCOL = TCPS)(HOST = arsrvpr3db-cname.us.dell.com )(PORT = 1523)) ) (ADDRESS_LIST = (LOAD_BALANCE=on) (ADDRESS = (PROTOCOL = TCPS)(HOST = arsrvpr4db-cname.us.dell.com )(PORT = 1523)) ) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = arsrvp_rw.prd.amer.dell.com ) ) (SECURITY=(SSL_SERVER_CERT_DN=""CN= arserviceprod.us.dell.com ,OU=IEO,O=Dell Technologies"")) ) arsrvp_ro_oud_tls = (DESCRIPTION = (CONNECT_TIMEOUT=90)(RETRY_COUNT=20)(RETRY_DELAY=3)(TRANSPORT_CONNECT_TIMEOUT=3 sec) (ADDRESS_LIST = (LOAD_BALANCE=on) (ADDRESS = (PROTOCOL = TCPS)(HOST = arsrvpr3db-cname.us.dell.com )(PORT = 1523)) ) (ADDRESS_LIST = (LOAD_BALANCE=on) (ADDRESS = (PROTOCOL = TCPS)(HOST = arsrvpr4db-cname.us.dell.com )(PORT = 1523)) ) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = arsrvp_ro.prd.amer.dell.com ) ) (SECURITY=(SSL_SERVER_CERT_DN=""CN= arserviceprod.us.dell.com ,OU=IEO,O=Dell Technologies"")) ) GE4  Engine http://10.175.131.138:4002/pending/count (NONUS) http://10.175.131.138:4001/pending/count (US)",False
182978188,page,current,/x/jAboCg,AR Useful Links,,False
186155052,page,current,/x/LIAYCw,AR Gateway UpStream Integrations,Please find details  of New  interfaces re written on Common AR /Digital AR future state architecture  ( AR Gateway and AR MicroServices)  under below sections Upstream applications for AR ( e.g  as below) 1)  BRM  US/EMEA/APJ 2)  Mexico Invoicing ( DOMS ) 3) Digital OM 4)  PAM Details as Below : Type Project Description App Name Source Rabbit MQ Git Path UpStream BRM US Invoicing flow for BRM US Region brm-us-ar-request-producer abacus.NSAR_BRM_FBGATE_MQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/brm/us/brm-us-ar-request-producer brm-us-ar-request-consumer abacus.NSAR_INV_REQUEST_MQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/brm/us/brm-us-ar-request-consumer brm-us-ultimate-consumer abacus.BRM_INVOICE_CREATIONMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/brm/us/brm-us-ultimate-consumer UpStream BRM EMEA/APJ Invoicing flow for BRM EMEA and APJ Regions brm-emea-ar-request-producer abacus.BRM_FBGATE_EMEA_MQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/brm-emea-ar-request-producer BRM-AR-REQUEST-CONSUMER-EMEA abacus.BRM_INV_REQUEST_EMEA_MQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/BRM-AR-REQUEST-CONSUMER-EMEA brm-apj-ar-request-producer abacus.BRM_FBGATE_APJ_MQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/brm-apj-ar-request-producer UpStream MX Customer and Invoice Creation events from DOMS/AXIS Only for MX BU ( CA and PERU still in OCI batch file process) CreateInvoiceRequestProducer abacus.ASTRA_INVOICE_EVENT_Q https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/CreateInvoiceRequestProducer CreateConsInvoiceReqProducer abacus.CE_EVENT_Q https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/CreateConsInvoiceReqProducer CreateConsInvoiceReqConsumer abacus.ConsInvRequestQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/CreateConsInvoiceReqConsumer AR-InvoiceRequestConsumer abacus.InvoiceRequestMQ0 https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/AR-InvoiceRequestConsumer AR-InvoiceRequestConsumer-1 abacus.InvoiceRequestMQ1 https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/AR-InvoiceRequestConsumer-1 AR-InvoiceRequestConsumer-2 abacus.InvoiceRequestMQ2 https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/AR-InvoiceRequestConsumer-2 AR-InvoiceRequestConsumer-3 abacus.InvoiceRequestMQ3 https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/AR-InvoiceRequestConsumer-3 AR-InvoiceRequestConsumer-4 abacus.InvoiceRequestMQ4 https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/AR-InvoiceRequestConsumer-1 ARCustomerEnrichment NA https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ARCustomerEnrichment AR-DOMS-CUSTOMER-CONSUMER abacus.ASTRA_CUSTOMER_EVENT_Q https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/AR-DOMS-CUSTOMER-CONSUMER ARINVOICE-CEORDERSTATUS-PROVIDER abacus.ORDER_STATUSMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ARINVOICE-CEORDERSTATUS-PROVIDER UpStream DigitalOM Invoicing flow for DigitalOM orders ( Invoice Event triggered by DIT i.e Digital invoice trigger  GCMP team) arinvoice-digitalom-producer abacus.NSAR_INV_OM_GATE_MQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ARInvoice-DIGITALOM-PRODUCER UpStream PAM Affinity ID updates of Customers ar-pamcustomereventproducer abacus.PAMCustomerEventMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/AR-PAMCustomerEventProducer ar-pamcustomer-consumer abacus.PAMSyncCustomerRequestMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/AR-PAMCustomer-Consumer abacus.PAMSyncCustomerRequestMQ_DM,False
186155054,page,current,/x/LoAYCw,BRM Invoicing (US ),,False
186155056,page,current,/x/MIAYCw,Account Receivables ( AR ),I mportant SubModules in AR Invoicing Tax   ( EBTax and Sabrix Integration) Customers Collections Credit Management Cash Apps  ( Receipts) Payments  ( Credit Card/paypal / integrations) Accounting Omega MD050's  Link http://intranet.dell.com/it/OrderToCash/MD50s/Forms/AllItems.aspx,False
186155064,page,current,/x/OIAYCw,Invoicing,,False
186156563,page,current,/x/E4YYCw,FY21 - Release Information,Useful Links: GITLAB | Release Information | Enterprise Release Management | FlexDeploy | AR DevOps Portal | AR Release View Dashboard | CheckMarx | SonarQube | Release FY21FW49-0102 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY21_0102_DIT DIT2 FY21_0102_SIT GE4 03-Nov-20 08-Dec-20 09-Dec-20 04-Jan-2021 to 10-Jan-2021 Link Link Link Release FY21FW40-1101 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY21_1101_DIT DIT2 FY21_1101_SIT GE4 22-Sep-20 20-Oct-20 21-Oct-20 4-Nov-20 Link Link Link Release FY21FW37-1003 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY21_1003_DIT DIT2 FY21_1003_SIT GE2 1-Sep-20 29-Sep-20 30-Sep-20 17-Oct-20 Link Link Link Release FY21FW32-0902 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY21_0902_DIT DIT1 FY21_0902_SIT GE1 28-Jul-20 31-Aug-20 1-Sep-20 12-Sep-20 Link Link Link Release FY21FW29-0803 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY21_0803_DIT DIT1 FY21_0803_SIT GE4 7-Jul-20 4-Aug-20 5-Aug-20 23-Aug-20 Link Link Link Release FY21FW23-0702 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY21_0702_DIT DIT2 FY21_0702_SIT GE2 26-May-20 23-Jun-20 24-Jun-20 12-Jul-20 Link Link Link Release FY21FW19-0602 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY21_0602_DIT DIT2 FY21_0602_SIT GE2 28-Apr-20 26-May-20 27-May-20 12-Jun-20 Link Link Link Release FY21FW15-0502 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY21_0502_DIT DIT1 FY21_0502_SIT GE4 31-Mar-20 28-Apr-20 29-Apr-20 15-May-20 Link Link Link Release FY21FW11-0403 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY21_0403_DIT DIT2 FY21_0403_SIT GE2 3-Mar-20 31-Mar-20 1-Apr-20 18-Apr-20 Link Link Link Release FY21FW06-0302 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY21_0303_DIT DIT2 FY21_0303_SIT GE2 28-Jan-20 24-Feb-20 25-Feb-20 15-Mar-20 Link Link Link Release FY21FW02-0202 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY21_0202_DIT DIT1 FY21_0202_SIT GE4 17-Dec-19 28-Jan-20 29-Jan-20 16-Feb-20 Link Link Link,False
186156565,page,current,/x/FYYYCw,FY22 - Release Information,Useful Links: GITLAB | Release Information | Enterprise Release Management | FlexDeploy | AR DevOps Portal | AR Release View Dashboard | CheckMarx | SonarQube | Release FY22FW02-0202/FY22FW03-0203 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY22_0202_DIT DIT1 FY22_0202_SIT GE2 15-Dec-20 26-Jan-21 27-Jan-21 20-Feb-21/ 21-Feb-21 Link Link / 0203 Link Link / 0203 Link Release FY22FW06-0302 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY22_0302_DIT DIT2 FY22_0302_SIT GE4 15-Jan-21 2-Mar-21 8-Mar-21 10-Mar-21 Link Link Release FY22FW10-0402 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY22_0402_DIT DIT2 FY22_0402_SIT GE4 16-Mar-21 30-Mar-21 31-Mar-21 7-Apr-21/8-Apr-21 Link Link Release FY22FW15-0502 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY22_0502_DIT DIT1 FY22_0502_SIT GE2 23-Mar-21 27-Apr-21 28-Apr-21 15-May-21/16-May-21 Link Link Release FY22FW19-0602 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY22_0602_DIT DIT2 FY22_0602_SIT GE4 26-April 1-Jun 8-Jun 10-Jun/11-Jun Link Link Release FY22FW23-0702 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY22_0702_DIT DIT2 FY22_0702_SIT GE4 8-Jun 29-Jun 6-Jul Link Link Release FY22FW29-0803 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY22_0803_DIT DIT1 FY22_0803_SIT GE2 22-Jun 3-Aug 10-Aug Link Link Release 0902 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY22_DIT DIT FY22_0902_SIT GE4 Link Link Release FY22-FW36-1002 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY22_1002_DIT DIT2 FY22_1002_SIT GE4 17-Aug 21-Sep 28-Sep Link Link Release FY22-FW41-1102 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY22_1102_DIT DIT2 FY22_1102_SIT GE2 28-Sep 3-Nov 9-Nov Link Link Release FY22-FW50-0103 Gitlab Branch Target Environment Scope Lock Code Lock Regression PROD Deployment Scope Query SIT Promotion Query SCM Query FY22_0103_DIT DIT2 FY22_0103_SIT GE2 26-OCT 7-DEC 14-DEC Link Link,False
186581584,page,current,/x/UAIfCw,AR Gateway Downstream Integrations,"Note: Rabbit MQ Consumers RMQ1: abacus.AR_INVOICE_EVENT_MQ Application1: Abacus-arinvoiceeventproducer RMQ2: abacus.ADVANCEINVOICEMQ Application2: Advance-arinvoiceeventproducer Astra Engine consumes ar invoice event from OMEGA AQ Based on AR invoice event call omega enriches invoice data from OMEGA. Load enriched data into ARSTORE Publish Invoice event into Q1: abacus.AR_INVOICE_EVENT_MQ Abacus-ARInvoiceEventProducer publish the same event into all the destinations mentioned with Q2: abacus.ADVANCEINVOICEMQ Message flow will be split into A) Normal Flow and B) Batch Flow Destination systems that don’t need any line-level info can follow this path (call GISS service and invoke destination system api). Advance- ARInvoiceEventProducer consume message from Q2, get endpoint flag value, split the event into sub-events, and publish each subevent into destination queues. Each destination-specific provider application consumes every sub-event from there source queue Call GISS Service with line range to enrich invoice information from ARSTORE, and do the final transformation Invoke Destination System service with the final payload. Below document for AR Invoice response flow in batches 150 Below are the list of all DownStream integrations from AR gateway Type Application ( Flow) Description App Name Source Rabbit MQ Git Path Remarks DownStream Start point of Downstream Flow for Omega AR All Omega AR Invoice Events come to this Queue ( Start point of Downstream flow) abacus-arinvoiceeventproducer abacus.AR_INVOICE_EVENT_MQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/Abacus-ARInvoiceEventProducer DownStream ADVANCEINVOICE All Omega AR Invoice Events come to this Queue advance-arinvoiceeventproducer abacus.ADVANCEINVOICEMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/advance-arinvoiceeventproducer DownStream CCE Argateway -> CCE InvoiceCCEProvider_pc1 (Java) abacus.CCEMQ https://gitlab.dell.com/gcbs/accountreceivables/arstore/onear-pcf-layer/schedulers/invoicecceprovider Java CCE → AR Gateway CCEAckResponseService_pc1 (Java) (RESTFul Service which CCE triggers to pass ACK for CFO generation or delivery to Omega) NA https://gitlab.dell.com/gcbs/accountreceivables/arstore/onear-pcf-layer/schedulers/cceackresponseconsumer Java CCE-> Argateway -> Omega CCEAckResponseConsumer_pc1 (Java) -Consumes the message from RabbitMQ -Invokes CCEAckOneARService abacus.CCE_ACKMSG_REQUEST_MQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/AR-CCEAckResponse-Consumer Java CCE-> Argateway -> ArStore ( For GIV Purpose) CCEARStoreConsumer_pc1 (Java) abacus.CCE_ACKMSG_ARSTORE_MQ https://gitlab.dell.com/gcbs/accountreceivables/arstore/onear-pcf-layer/schedulers/cceackarstoreupdateconsumer Java CCEAckOneARService (ARService Layer - wrapper to omega) Invokes xxg_1ar_cce_ack_util_pkg https://gitlab.dell.com/gcbs/accountreceivables/arstore/onearservicelayer/invoiceservices/cceackonearservice Java DownStream DFS ( Banzai ) ARGateway -> DFS ar-dfs-provider abacus.DFSMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/AR-DFS-PROVIDER DFS-> ARGateway-> Omega ar-dfs-response-consumer abacus.AR_DFS_INV_RESPMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/AR-DFS-RESPONSE-CONSUMER DownStream Settlement App Inv Completion events to SA app for captures/refunds etc as part of FIRSTDATA impl arinvoice-settlement-provider abacus.SETTLEMENTMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ARInvoice-Settlement-Provider DownStream SODS SODS downstream flow arinvoice-sods-provider abacus.SODSMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ARInvoice-SODS-PROVIDER DownStream Veritas Veritas downstream flow arinvoice-veritas-provider abacus.VERITASMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ARInvoice-VERITAS-PROVIDER DownStream DIReCT Direct Flow from ARGateway ARDS transactions contain Arrangements & Events BRM/DOMS(MX/PE/CA) transactions contain Events with Event_Control. arinvoice-revrec-provider abacus.REVRECMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ARInvoice-REVREC-PROVIDER Invoke XXRR1580_PKGA.direct_api DownStream REVSTAR RevstarWrapper1580 This application will get the feed from AR and extract, transform the request and send to REVSTAR For DB mapping part created a new project to interact with REVSTAR DB arinvoice-revstar-provider RevstarWrapper1580 abacus.REVSTARMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/arinvoice-revstar-provider/ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ar-components/abacus-adapters/ revstarwrapper1580 SCALA DownStream COT Will be distributed to below three region Specific Queues ARInvoice-COT-Provider abacus.COTMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ARInvoice-COT-Provider Will Be consumed directly by OM-Astra NA abacus.ARGW_COT_RESP_APJ_MQ Will Be consumed directly by OM-Astra NA abacus.ARGW_COT_RESP_EMEA_MQ Will Be consumed directly by OM-Astra NA abacus.ARGW_COT_RESP_US_MQ DownStream GOV GOV downstream flow ARInvoice-GOV-PROVIDER abacus.GOVMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ARInvoice-GOV-PROVIDER DownStream Sabrix to Update Trx Number in Sabrix Audit DBfor every trx created in Omega AR arinvoice-sabrix-provider abacus.SABRIXMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ARInvoice-Sabrix-PROVIDER DownStream Nexus Nexus Downstream flow arinvoice-nexus-provider abacus.NEXUSMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ARInvoice-NEXUS-PROVIDER DownStream Changepoint ChangePoint Downstream flow arinvoice-changepoint-provider abacus.CHANGEPOINTMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ARInvoice-CHANGEPOINT-PROVIDER DownStream Novora IGST AP Invoice Automation flow - novora apinv-odinovora-provider abacus.ODI_NOVORAMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/APINV-ODINOVORA-PROVIDER DownStream BRM BRM ACK Flow . Need to updated ARInvoice-BRMAckRelayer abacus.BRMAckResponseMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ARInvoice-BRMAckRelayer abacus.FB_NOTIFY_AR_EVENT_MQ abacus.FB_NOTIFY_BRM_APJ_EVENT_MQ abacus.FB_NOTIFY_BRM_EMEA_EVENT_MQ DownStream DOMS MX Invoice acknlowdgement to DOMS AR-DOMS-INV-RESPONSE-CONSUMER abacus.DOMSMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/AR-DOMS-INV-RESPONSE-CONSUMER DownStream CE DB Consolidation Engine DB ( Internal to AR) ARInvoice-MXCIUPDATE-PROVIDER abacus.MXCIUPDATEMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ARInvoice-MXCIUPDATE-PROVIDER DownStream Digital OM - GCMP Digital OM and OCM Integration OCM -> AR Gateway -> Digitial OM arcf-gcmp-provider abacus.CF_GCM_REQUESTMQ https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/ARCF-GCMP-Provider DownStream DOMS Not Deployed on Abacus. Running on AR Server MX Customer Backflow  to DOMS Omega2CMDMUpdate (Cust Backflow pollor) NA https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/Omega2CMDMUpdate DownStream OFS BTS invoice creation, NA https://arapigateway-prod.argw.pcf.dell.com/indiabtshubtohubtransfer/createBTSInvoice",False
186584690,page,current,/x/cg4fCw,TFS access Steps for Omega,"Access ( Team Backlog and Defects) In order to get access to eDellPrograms project, your account should be part of DCSGTFSUSERS AD group. All TFS access requests are automated in Service now. Please go to My IT Portal link . In the homepage, Click on ‘Service Catalog’ or in the ‘Search’ bar, type “TFS Access Request [AUTO]” and select the form that comes up. Submit the TFS Access Request Form for access to respective team project by selecting the desired role. Project Collection: eDell Team Project: eDellPrograms Role: Work Item Contributor role AD group: DCSGTFSUSERS AD group Owner: Priyanka_Jethva",False
186876327,page,current,/x/p4EjCw,OM Demand Transform <Test Page>,PMO Process Documents Team Updates,False
190220803,page,current,/x/A4pWCw,AR Services Repository,,False
190814245,page,current,/x/JZhfCw,Digital OM Producer Flow,"250 Projects are on GIT lab: Digital OM Producer and Abacus Components. (Scala code) http://abacus-gitlab.us.dell.com/abacus/ar-gateway/ARInvoice-DIGITALOM-PRODUCER.git http://abacus-gitlab.us.dell.com/abacus/abacus-common-components/AbacusComponents.git The Flow from Digital OM to Invoicing Services is as below:- 1) Digital OM Producer will listen to the OM Gate MQ: Q.DIT_OM_INV_TRIGGER.ARGW When you publish a message to above RabbitMQ the Digital Om project gets triggered. Message Format: {""orderNumber"":125405877, ""buid"": ""11""} In Digital Om application, the first actor OEMEnrichmentActor makes a POST request to the Order Store service to get the order details, passing the orderNumber and bu-id :- http://ausslabaap08.us.dell.com:7575/CommonAR/GetOrderDetails Order store will return the order details along with attribute19(ship from) information. Digital OM then parses the order Store Service Response. Enabled_flag is picked from DB into lookupSql. Enabled flag's value is considered to proceed further. orderDetail response is transformed into trxObject using ftl: OrderDetailsToTrxObj.ftl. OEMEnrichmentActor puts the trxObject in bind variables and calls the next Actor. 2) SecondActor- CustomerActor It forms a Customer Request xml with Customer Number from the trxObject obtained from previous actor. It uses XformGetCustomerServiceInput.xqy to transform the customer request. It calls the Customer Service. 3) ThirdActor- XqueryTransformActor: It validates the Customer service response. Two Validations done by ARGateway:- 1) CustomerReasonCodeValidationException 2) CamLocationIdException 4) FourthActor- CreateInvoiceActor : - Calls Primary Invoice Service Control passes from DigitalOm to PrimaryInvoice service for Invoice creation. ================================================================================= Order Store Service Request: {""orderNumber"":""125405877"",""buid"":""11""} ================================================================================= Order Store Response with sku_mcid_ship_from. (Mimicking the response) { ""order_header"": { ""order_number"": ""125405877"", ""buid"": ""11"", ""currency"": ""USD"", ""dpid"": ""2003209275520"", ""quote_number"": ""3000000664238"", ""po_number"": """", ""dps_number"": """", ""original_order_number"": """", ""sales_channel"": ""US_04"", ""order_category"": """", ""price_list_id"": ""340082"", ""product_pricing_style"": ""S/N"", ""logistic_edd"": """", ""payment_term_name"": ""30 Days Inv."", ""bill_to_cust_number"": ""US520000002884"", ""ship_to_cust_number"": ""US520000002884"", ""sold_to_cust_number"": ""US520000002884"", ""bill_to_camlocationid"": ""DU200000012183408"", ""ship_to_camlocationid"": ""DU200000012023351"", ""sold_to_camlocationid"": ""DU200000010815033"", ""bill_to_addressid"": ""DU231848718711152701"", ""ship_to_addressid"": ""DU304143430747962401"", ""sold_to_addressid"": ""DU231848718711152701"", ""order_date"": ""2019-06-08T23:10:29"", ""tax_exempt_flag"": """", ""region"": ""AMER"", ""order_source"": ""GCM_DP"", ""selling_entity"": ""D"", ""reason_code"": """", ""order_type"": ""US 3rd Party order"", ""shipping_method_code"": ""000001_FOSC_P_GND"", ""way_bill_numbers"": [{ ""waybill_number"": ""000001_FOSC_P_GND"", ""freight_carrier"": ""000001_FOSC_P_GND"" }], ""salesreps"": [{ ""salesrep_phone"": ""0000000"", ""salesrep_id"": ""798336"", ""salesrep_email"": ""donotuse@ dell.com "", ""sales_rep_full_name"": """", ""sales_rep_name"": ""SNEHA JULY15"", ""salesrep_number"": ""999"", ""sales_rep_type"": ""primary"" }], ""payment_terms"": [{ ""amount"": ""110.4"", ""paycode"": ""O"", ""payment_term_type"": ""1"", ""payment_term_name"": ""30 Days Inv."", ""payterm_group"": ""Net Terms"", ""payment_term_id"": """" }] }, ""order_items"": { ""items"": [{ ""actual_ship_date"": """", ""pod_date"": """", ""option_number"": """", ""sku_number"": ""A7843262"", ""sku_mcid_ship_from"": ""NC"", ""line_type"": ""LINE"", ""line_id"": ""2211866873"", ""orig_sys_line_ref"": ""1-1"", ""serial_number"": ""1"", ""tie_number"": ""1"", ""ordered_quantity"": ""1"", ""sku_description"": """", ""quantity"": ""1"", ""unit_selling_price"": ""94.99"", ""unit_list_price"": ""104.99"", ""unit_of_measure"": ""EA"", ""tax_exempt"": """", ""price_roll_up_flag"": ""N"", ""ship_way_bill"": """", ""servictags"": [] }, { ""actual_ship_date"": """", ""pod_date"": """", ""option_number"": """", ""sku_number"": ""465-7758"", ""sku_mcid_ship_from"": ""NL"", ""line_type"": ""LINE"", ""line_id"": ""2211866874"", ""orig_sys_line_ref"": ""2-1"", ""serial_number"": ""2"", ""tie_number"": ""2"", ""ordered_quantity"": ""1"", ""sku_description"": """", ""quantity"": ""1"", ""unit_selling_price"": ""6.99"", ""unit_list_price"": ""6.99"", ""unit_of_measure"": ""EA"", ""tax_exempt"": """", ""price_roll_up_flag"": """", ""ship_way_bill"": """", ""servictags"": [] }] } } =================================================================================",False
196084656,page,current,/x/sAOwCw,D I Y A,,False
205890375,page,current,/x/R6NFD,Direct Application Flow for Omega AR and OM Events,"AR Gateway : Incident and Deployment Support : Support Queue Name :    ESE-OMRELIABILITY-TRX DL :   ese.omreliability.trx@ dell.com Deployment Instructions : All AR gateway interfaces related to Direct  running in Abacus So , for every deployment need CTASK as below: 1) CTask for AR Gateway Team -  Assign to task group  ESE-OMRELIABILITY-TRX Implementation doc attached below : 250 Events Supported : Scope of AR Transactions Product Team POC Remarks BRM Transactions Created in Omega AR Abacus ARGateway ARGateway < ARGateway@Dell.com > Chief PO :   Cannizzaro, Antonio < Antonio_Cannizzaro@Dell.com > DOMS Transactions Created in Omega AR (MX/CA/Peru) Abacus ARGateway ARGateway < ARGateway@Dell.com > Chief PO :   Cannizzaro, Antonio < Antonio_Cannizzaro@Dell.com > As part of 1002 Release, this flow is moved to Abacus from OCI. ARDS Transactions ( Claims) Created in Omega AR Abacus ARGateway ARGateway < ARGateway@Dell.com > Chief PO :   Cannizzaro, Antonio < Antonio_Cannizzaro@Dell.com > Runs through ARGateway from 19 FEB 2019 FROM FY21_0803: AR gateway moves complete direct flow from OCI to Abacus. ARInvoice-REVREC-Provider consumer message from the queue: abacus.REVRECMQ Call GISS service with Range in case of BRM/CA/MX/PE to enrich invoice information from ARSTORE. Example: https://arapigateway-prod.ausmpc.pcf.dell.com/giss/getInvoiceData?customer_trx_id=237063523&line_start_range=1&line_end_range=1 Create AR Event payload for direct with Control table which contains Batch information and Invokes direct API. Package: XXRR1580_PKGA directPkg.directApi(Arrangements, Events, ArrContTbl, EventContTbl); OM Gateway : Incident and Deployment Support : Support Queue Name :    ESE-OMRELIABILITY-TRX DL :   ese.omreliability.trx@ dell.com Deployment Instructions : As of now , OM gateway team has interfaces running only in Abacus So , for every deployment need one CTASKs as below: CTask for OMGateway Team -  Assign to task group  ESE-OMRELIABILITY-TRX Implementation doc attached below : 250 Events Supported : Order Flow Product Team POC Remarks Order flowing down streams from OMEGA OM to DIRECT Abacus OMGateway Gayathri ( Gayathri_Kambhampati@Dell.com ) Laxmi_Rathore@Dell.com/Falguni_Chitkara@Dell.com/ashish_sharma12@dell.com Chief PO: Janson, Glenn <Glenn_Janson@ Dell.com > Global Scope Order flowing from FED to DIRECT Abacus OMGateway Gayathri ( Gayathri_Kambhampati@Dell.com ) Laxmi_Rathore@Dell.com/Falguni_Chitkara@Dell.com/ashish_sharma12@dell.com Chief PO: Janson, Glenn <Glenn_Janson@ Dell.com > Financial Attributes flowing from PIM to DIRECT Abacus OMGateway Gayathri ( Gayathri_Kambhampati@Dell.com ) Laxmi_Rathore@Dell.com/Falguni_Chitkara@Dell.com/ashish_sharma12@dell.com Chief PO: Janson, Glenn <Glenn_Janson@ Dell.com > DFS to DIRECT and Vice versa Abacus OMGateway Gayathri ( Gayathri_Kambhampati@Dell.com ) Laxmi_Rathore@Dell.com/Falguni_Chitkara@Dell.com/ashish_sharma12@dell.com Chief PO: Janson, Glenn <Glenn_Janson@ Dell.com > Transactions created in Omega through OM Orders (Invoice and Consolidation Invoice Events) Abacus OMGateway Gayathri ( Gayathri_Kambhampati@Dell.com ) Laxmi_Rathore@Dell.com/Falguni_Chitkara@Dell.com/ashish_sharma12@dell.com Chief PO: Janson, Glenn <Glenn_Janson@ Dell.com > Even though , these are invoice Events, this is supported by OM gateway for all Down-streams. Will update if there is change in plan in future. FB Gateway : Incident and Deployment Support: Support Queue Name : ESE-OMRELIABILITY-BRM DL :   ESE_OMReliability_BRM@ Dell.com Deployment Instructions : As of now , FB gateway team has interfaces running only in Abacus So , for every deployment need one CTASK as below: CTask for FBGateway Team -  Assign to task group ESE-OMRELIABILITY-BRM  ( Bobbala, Sravani <Sravani_Bobbala@ Dell.com > owns BRM reliability Team , and she is in process of creating support Queue for FB Gateway .  Will update the sheet , once new queue is created ) Implementation doc attached below : 250 Events Supported : Flow Product Team POC Remarks Transactions Flowing from BRM to DIRECT Abacus FBGateway Vishwesh ( VISHWESH_SHIVAPOOJA@Dell.com ) PO: KIRTI_KAKKAR@Dell.com Technical Component Details: ARINVOICE-REVREC-PROVIDER CLAIMS US Runs through ARGateway from 19 FEB 2019 ABACUS SyncCreditMemoList Invoice ARGateway ARINVOICE-REVREC-PROVIDER DOMS CA, US, MX Runs from 1002 through ARGateway. Currently in OCI ABACUS CreateInvoiceResponse Invoice ARGateway https://gitlab.dell.com/gcbs/ordermanagement/om-gateway/direct/AOI-REVREC-PROVIDER 100,200, INV etc. Global scope Order flowing down streams from OMEGA to DIRECT ABACUS Order OMGateway https://gitlab.dell.com/gcbs/ordermanagement/om-gateway/direct/AOI-REVREC-PROVIDER Order flowing from FED to DIRECT ABACUS Order NA Financial Attributes flowing from PIM to DIRECT NA Order NA DFS to DIRECT and Vice versa NA Order NA FBGateway -> DIRECT Transactions Flowing from BRM to DIRECT ABACUS Flex Billing NA REVREC_AR -> ProviderABCS -> InvoiceResponseDIReCTProvABCS BRM Invoice Response back from OMEGA AR to DIRECT OCI ---------------------------- Invoice ARGateway",False
206377355,page,current,/x/ixFND,Order Management,,False
206377361,page,current,/x/kRFND,OM Gateway Applications,"OM Gateway Applications are mainly divided into 5 categories 1) OM Downstream Applications -  Sending order info and status updates to multiple applications. 2) OM Response apps - Updating data back to OMEGA from multiple applications. 3) Order Import Applications - All the applications related to Import order into OMEGA. 4) Miscellaneous Applications - All the application , integration between different systems , not related to order management(e.g credit, eol , product). 5) Logging Applications - All applications , services related to logging. 1) OMEGA Downstream -ABACUS Architec ture",False
206377379,page,current,/x/oxFND,Order Cancellation,,False
206381208,page,current,/x/mCBND,Common AR - Product Manager's space,"Team Vision IT professionals digitally transforming OMEGA AR to Dell's Common AR, to overcome business challenges while assuring Platform stability and performances. Who We Are FY20 - Transition from Feature Teams to Balanced Teams FY22 - Transition from Balanced team to Product Teams. Products are Grouped into Product Lines. CPM - Collections And Payment Management ICM - Invoice and collections Management Product teams are assigned a functional area and plan their work prioritizing items with High Business benefit and Ease to implement. Doing more with Less is our motto. Product Team / TFS Iteration path eDellPrograms\LC_OTDTC\Order Mgmt_Order Mgmt - Accounts Receivable\AR Product TaxonomyServices Cross Product Lead Anchor Functional Product Designer Modern UI ownership (PLA - Nikos Tsakiropoulos, leader for UI COP) CPM-Collections_Management Yi Peng Ong MalikArjun Suguri Srinivasa Kemburu Collections UI CPM-Customer_Communication_Management Yi Peng Ong Sitanshu Swim Loon Chiam CPM-Cash_Management_and_Credit_Card_Integration Singh, Amit Neetashree Ang, Danny Settlements UI CPM-Self_Service_Review_and_Pay_Invoice Ganchas, Filipa Mohammad Rafey Siew Heoh Thow GIV, Veritas, My Financials Modern ICM-Tax_and_Reporting Hee Pong Ooi Mario / Gunjan Chee Yee Chan ICM-Billing_Systems_Integration Mallick, Rhea Prasanna Mokashi Jagadeesh Reddy ICM-Customer_Integration_and_Credit Mariano Santiago G, Ravindra B Jagjit Khokhar ICM-AR_Gateway_Services Anubhav Kumar ICM-OMEGA_Invoicing_and_Accounting Ay Luen Soo Hoo PritiRanjan Paikray Manish Jena Billing UI The OMEGA AR IT Teams work in close synergy with many other teams - here are out main interlock and POCs: Team Responsibilities POCs UCD Seeding of UAT Data to FSS UAT Team. Spring Canfield, Kunal Mehta QE Team in charge of E2E testing Vinu Nair FSS UAT Perform UAT for each omega AR release Nina Xiong OMCS Digital Transormation of the OMEGA OM system Glenn Janson How We operate Product teams are organized by functional area. Cross Product Leads are POCs for Projects touching multiple teams, so to rationalize time invested in calls. Work is planned during quarterly PI Planning events: the outcome of each planning event is a Miro board with work organized in features and assigned to Sprints. CPL lead by program AR CPL Cloud (DCTP/DTOD/StaaS) Rhea CCP Soo Hoo DFS / RevStar integration/ Soo Hoo First Data / Consumer Strategy/ Few more Seller and Buyer Programs like grey market, Ecommerce experience etc Amit GOP APJ/Data Privacy Mariano GOP Canada Soo Hoo GOP Data Migration (mainly Co20/77) Debra GOP EMEA Mariano GOP LATAM Rhea ISG Soo Hoo ISG FED Soo Hoo LE Rationalization Yi Peng RTB Antonio / Debra Corp ( Legal/ finance Tax) Hee Pong Collections Strategies and UI Nikos MFM Filipa CRE (ARDS transitioning to AR team from 0502) Hee Pong Debra , in her role of PLA, supports across multiple teams, especially those that have stakeholders in US time Zone (mainly Invoicing and CFO). Nikos , is OM / AR Experience Architect for New UIs: Main objective: improve user experience by maturing existing products / interlock with other teams (CCP? GPG? DSA) to identify overlaps. Main deliverables: define Epics under main programs / growth board for FY23. Work with OM AR IT leadership on prioritization during PI Planning events. Presentation to forums, newsletters to share to wider audience progress made in this highly innovative space Part of the yearly Budget is assigned to teams, for maintenance and modernization of the areas (AKA product capacity): MBI / EPICs to be created under following Capability 10058112 : FY22 - PC - GSCM - Order Management & Accounts Receivable Product Teams are also responsible for resolution of production incidents. for this reason, part of Reliability team engineers are assigned to them.  For correct cost attribution, Stories to be created under following: Capability 10058549 : FY22 - PC - GSCM - Order Management & Accounts Receivable (Support) Scope for this page This Page was created to present the Omega Common AR approach, vision and Teams. All subpages under it will be used to facilitate hand over of the Features from the common backlog to the Product Managers. it's highly recommended that the product Managers updates the article (polishing the requirements section and adding detailed acceptance criteria and any other design material like diagrams or mind maps or project plans. etc) so that little by little this can become a fully fledged knowledge base to use to complete analysis for future projects.",False
206381216,page,current,/x/oCBND,Unique Customer Record,"Target release FY20-0502 Epic 7248721 Document status DRAFT Document owner PD functional Lead designer Anchor Lead developer PM @ks, arul Goals make changes into OMEGA that allow correct management of customer records to the new model, having site roles not tracked anymore at site contact level. Background and strategic fit Reduces duplication caused by address type stored at lead recordsites based on site purpose. Reduces duplication caused by multiple contacts associated with an address. Captures all the relationship types from the order level, to enable revenue and install base attribution by relationship type for 360 customer reviews Assumptions Canada integration between OMEGA and CMDM will be deployed before, US migration will follow. this Article only refers to US retrofit part Analysis notes Today two CamLocationIDs are generated for the same Identical contact i.e. one for BillTo Role and another for ShipTo Role. In 0802 release although CIL would do the backward compatibility, starting with CA, one important difference you would notice is that only one CamLocationID (instead of multiple) be created to enable reusability in future. A sample example shown below. Current State Customer_Num Customer_Name Contact Name Contact Address Phone Role(s) CamLocationID ContactID AddressID 12345 Acme Inc Bob Smith 11 Main Street, Santa Clara, CA, 92128, US 8589421234 [Mob] ShipTo 88881 201 100001 12345 Acme Inc Bob Smith 11 Main Street, Santa Clara, CA, 92128, US 8589421234 [Mob] BillTo 99990 201 100001 TO BE Release: Customer_Num Customer_Name Contact Name Contact Address Phone Role(s) CamLocationID ContactID AddressID 56565 Breaking Systems Terry Parker 101 South Ave., Round Rock, TX, 78661, US 9919421235 [Mob] BillTo, ShipTo 77776 331 210002 Customer_Num Customer_Name Contact Name Contact Address Phone Role(s) CamLocationID ContactID AddressID 56565 Breaking Systems Terry Parker 101 South Ave., Round Rock, TX, 78661, US 9919421235 [Mob] BillTo, ShipTo 77776 331 210002 CAM will send the camlocation_id at contact level - not assign a distinct cam location id at role/responsibility level On omega side, we will change the code that receives camlocation_ids and store them into omega >>> In omega we will have the following situation Contact Role Cam location id Terry Parker Bill to 77776 Terry Parker Ship to 77776 Terry Parker Deliver to 77776 When import program for an order will run,  the same should not look just by Camlocation id (because otherwise the program will fail with too many rows). The code will be changed to look for cam location_id and Role so that Duplication is resolved. The new code will work also for legacy camlocation_ids (because cam location id + role will continue identifying a unique record into Omega). What will be happening for existing contacts with different cam location id by role? If a user is updating one of the existing contacts, will omega receive old cam location ids? Bob smith as a contact. If they have different phones (one for bill to and one for ship to). The update will come at the cam location id level. For a new net contact instead, update will come for one unique cam location id. What will happen when deduplication will be resolved by the business? Should omega update existing records with new cam location ids? In future certain roles can be added to one existing contact: bob is bill to before 0202 and after 0202 is also ship to. No new cam location will be created, existing one will continue to be used. Camlocation id is used in order import / transaction import to derive the address reference and the contact reference. Order import will be using the camlocation_id only as it's unique and it's searched at role_responsibility level. Once a contact_id is passed to order import as bill to, standard integration checks that the contact has a bill to role. For each record in role_responsibility table, i can only have one responsibility type. For 1002 - Canada: only changes to order import are made. There are more downstrams to be modified and those will be in scope for 0202. Canada: from day 1 will be generic contact. 99% of contacts will be from DOMS. They can give some CIL contacts for Canada with the generic contact. Json microservices will always have the generic role. US: roles contact level but will be come contact level. There is no expectation to move to Json on the Omega side anytime soon for CIL integration. XML with generic contact is the baselines. If we need to go for US to Json, will be additional effort. Can dev be completed for US in 0202 so that we start testing with deployment in the subsequent release? With json and without json. US retrofit is priority over microservices adoption. There is no microservices, without new model… so new model is really the priority. EMEA will be in Json only.",False
206539550,page,current,/x/HotPD,Abbreviations,,False
211191513,page,current,/x/2YaWD,North Star Project - AR Product Charters,"North Star AR Architecture Following diagram represents end state vision for the OMEGA AR System once the north Star Project will be completed. In this we can identify all the new products that the AR system can be broken into and for which a charter is defined in the second part of this article. AR Gateway OCI (order to cash integration) solution, is going to be replaced with a domain specific solution called AR Gateway. This is based on a blend of two products, Astra and ABACUS. Astra engine : event engine which consume events from source systems and delivers to destitation systems with 0 message lost. Note: we talk about events and not messages, cause a message can be a big payload which this architecture requires light messages to be exchanged among systems. This is an homegrown product, based on open source tech. Eg: once a Credit memo is created, ASTRA will tell ABACUS/AR Gateway to send a payload to other systems. Astra subscribers : gets the message from the engine and delivers to the destination system. The subscriber can possibly run one enrichment processes to connect to other systems. Abacus (platform) / AR Gateway (Application) : this is in charge for communication (send / receive) among systems. The product is also able to run enrichment processes. Service Layer an entry to omega database should happen through a service, whereas before OCI was invoking AR APIs, rather than updating tables directly on the DB. Any service which talks to omega database cannot be hosted in PCF due to OMEGA being behind the Firewall and it's hosted on a VM. AR query service instead needs to talk to the AR Store, so this one could exceptionally be build into PCF. AR store / elastich search Data replication of AR Data (this is based on a non sql database). An astra subscriber will populate invoice or payment data in the AR Store. And AR gateway, upon a request from an external system, will pull data out of it by using the AR query service. Omega AR Product Lines / Products Product Line Product PL_ID Assignee Bill Revenue, Manage Invoicing, Issue Credit and Debit Memos Invoicing as a Service (includes Customers interface) PT001766 250 Bill Revenue, Manage Invoicing, Issue Credit and Debit Memos PO Match Invoicing PT001767 250 PO Match AR_VERITAS.pptx Manage Chargebacks Accounts Receivable Dispute Mgmt PT001779 --- OM team should own ARDS Manage Collections Collection as a Service (includes customer model part) PT001780 250 250 Perform Receivables Close Shadow GL and AR Service PT001781 250 Process Receipts Settlement and Cash PT001782 250 250 Self Service - Review and Pay Invoice Finance self service PT001784 Siew Heoh 250 Global Invoice Visibility.pptx MyFinancials Modernization Introduction and Key Benefits.pptx Customer Communications CFO PT749427 Debra/Kiat Seong 250 Manage Customer Credit Exposure Credit As a Service (includes customer model part) PT001787 Antonio 250",False
211847335,page,current,/x/p4igD,Application Transformation and Modernization,,False
212143839,page,current,/x/3w6lD,Useful Debugging KB Pages,,False
212145977,page,current,/x/ORelD,AR OCI Interfaces Migration to AR Gateway,,False
212147343,page,current,/x/jxylD,Deployments,,False
216960205,page,current,/x/zYzuD,Process related information in AR teams,,False
216960282,page,current,/x/Go3uD,AR Gateway Platform,,False
218170876,page,current,/x/-AUBDQ,Knowledge Recorded sessions in AR,,False
218170892,page,current,/x/DAYBDQ,Working together with Scrum and XP,"The presentation is about to get familiarity with Scrum and XP practices in general a bit in detail. But in case you need something very quick, see below notes: What is Scrum Model in Agile Software Development? What is Scrum Model? Scrum is an iterative and Incremental model for application or product development. The improvement of the venture is accomplished through an iterative cycle called sprints. Toward the beginning of each sprint, a cross-functional group chooses things from Product Backlog and resolves to finish the things before the finish of that specific sprints. Ordinary the group assembles for a shorter gathering to review its progress. Toward the finish of the Sprint, the group reviews the work item with partners and exhibits what has been developed. The feedback is then Incorporated in consequent sprints. Toward the finish of each sprint, scrum underscores that the working programming is completely tested and conceivably made shippable. The sprints are firmly time-boxed (Time Box is authored as a fixed time is assigned for action. Certain expectations are committed to get finished in this time.) and happen successively. The end it of a sprint doesn’t get expanded. Independent of the planned work at the first meeting. Scrum roles Scrum consists of three primary roles. Product owner Team Scrum master Other contributors are- Managers SMEs(subject matter experts) Architects Customers Vendors Product Owner Product Owner is in charge of the followings:- Giving the situation of the project(Vision) to the group. Amplifying the estimation of the project and craft the tasks for the scrum group. Dealing with Product Backlog. Obviously and clearly communicating item build-up things on the Product backlog. Organizing the things in the Product Backlog to best accomplish objectives and Mission of the project. Guaranteeing that the Product Backlog is unmistakable, straightforward and clear to about what the group will chip away at straightaway. On the off chance that colleague is prescribing a few changes to an item accumulation things need, it must be talked about with the Product Owner. The Scrum Team The group transforms product Backlog into augmentations of conceivably shippable working programming at each sprint. The group is organized, self sorted out and deals with its own work. The group has the accompanying qualities- Group size preferably ought to associate with 7 people. The group is prescribed to be cross-functional with abilities in the investigation, development, testing, interface structure, database plan, engineering, documentation. It is self sorted out and chooses what to submit and how best to achieve that commitment dedicatedly. The responsibility of the work product belongs to the group in general. The Scrum Master The scrum master is in charge of guaranteeing that the scrum group adheres to scrum esteems, practices and standards. Duties of the Scrum Master- Helps the scrum group to adopt Scrum. Helps the group to learn and apply scrum to accomplish the ideal goal of the project. Does not guide individuals on dole out errands, yet encourages the procedure by supporting the group to sort out and oversee yourself. Serves the group, shield them from outside impedance, teach and guide Product Owner and group being used of the scrum. Facilitate scrum occasions and coaches the group to be cross-functional. Removes hindrances for the groups progress. Strikingly, a Scrum Master can’t be Product owner, director of the group or the task manager. Scrum Events Scrum Being time-boxed occasion, scrum occasions guarantees that there is no wastage of time in the execution of the project. The events are- Release planning meeting Sprint planning Daily scrum Sprint review Sprint retrospective Release Planning Meeting The goal of the release planning meeting is to set up an arrangement and objectives which the scrum group and the remainder of the association can comprehend, communicate and deal with. The procedures of Release Planning Meeting are: Turn the vision into a fruitful project in the most ideal manner. Meet or surpass the ideal consumer satisfaction and return on Investment. The release plan builds up the objective of the release, high priority product backlog, and real dangers and overall highlights and functionalities that the release will contain. The plausible delivery date is settled upon. The stakeholders can check the progress and make changes to the release plan on a sprint by sprint manner. Sprint Planning Sprint planning keeps a track the work to be performed in a sprint. This arrangement is made by collaborative work of the whole scrum group. The sprint planning is having two sections however both are time-boxed. Section 1-group plans what will be delivered as a feature of the sprint. Section 2-group designs how to manufacture or code this functionality. Daily scrum The everyday scrum meeting is a time-boxed 15 minutes meeting for the group to synchronize with the updates. During the gathering each colleague clarifies the followings: What the individual has achieved since the last gathering? What the individual will do before the next gathering? What are the issues on the way? It is generally known as the status update of the project towards accomplishing the objective or goals. The daily scrum meeting encourages the following: Improve collaboration and communication. Identify and remove the obstructions to development. Highlighting and advancing quick decision making. Improving the scrum groups level of project knowledge. Sprint Review A Sprint Review meeting is held toward the end of a Sprint. During the sprint review, the scrum group demos what was created in the sprint to the partners and shareholders. The primary goal of this gathering is to get input on the progress made up until now and choose next activity things. The sprint review meeting incorporates the followings: The product owner distinguishes what has been done and what should be finished. The team exhibits the work has been done and settle all inquiries. Product Owner talks about the product backlog, the way things are aka status of the backlog items. The whole team talks about what to do next. The Sprint Review meeting gives important contributions to consequent sprint planning meetings. Sprint Retrospective Sprint Retrospective happens after the sprint review and Prior to the next sprint planning meeting. The targets of the sprint retrospective meeting are as per the following- Inspect the last sprint as for individuals, relationship procedure and instruments or tools. Discuss what went well during the sprint, what issues were confronted and how they were settled. Identify and organize the significant items that went well and those could have been done another way. These incorporate the scrum group piece, their incorporation, meeting game plans, devices, the meaning of Done and strategies for Communications. Make a plan for actualizing the upgrades to the manner in which the scrum group works. Scrum Artifacts Scrum artifacts speak to work or value in different manners that are valuable in giving straightforwardness, transparency, and chances to review and selection. Product backlog The product owner explains product vision toward the beginning of the project. This advances into a refined and organized rundown of features or requirements, which is known as Product Backlog. The Product Backlog is constantly refreshed by the product owner to reflect changes in the requirements of the end client, new thoughts, issues and risks that may show up. Release burndown chart The release burndown outline mirrors the rest of the product backlog item over the release. The Product Owner keeps up and refreshed product backlog list that mimics release burndown and it is accessible to all partners of the project. Sprint backlog The sprint backlog is profoundly unmistakable, highly visible, the continuous image of the work that the group intends to achieve during the Sprint. It is the subset of Product backlog tasks and related errands that the group performs in a specific Sprint. It involves every one of the assignments that the group distinguishes as important to meet the Sprint objective. Sprint Burndown Chart This diagram is a graphical portrayal mirroring the rest of the exertion for all tasks that were submitted during the Sprint, versus time(number of days staying in the Sprint). What is Extreme Programming(XP) Practice? What is Extreme Programming Practice? Extreme programming is another kind of Agile strategy. It is utilized alongside the scrum structure to make a mix of both engineering and the management rehearses in Agile Projects. The XP as a term conceptualized from the execution of conventional programming designing practices at the extraordinary (extreme) level. Extreme Programming is known for its specialized technical practices that cause designers to construct excellent programming all the more productively. For small – to – medium-sized teams developing software with vague or rapidly changing requirements coding is the key activity throughout a software project. So Extreme programming recommends shorter sprints(1-4 weeks) inclusive of having project artifacts (like- story cards, code, Unit testing etc). The activities of XP are Communication among teammates is done with code. Life cycle and behavior of complex objects defined in test cases – again in code. XP consists of various best practices like test-driven development. code review Pair programming Refactoring etc XP (Extreme Programming) component XP consists of four basic components. They are: Fine-scale feedback. Continuous process improvement Shared Understanding of the project or product Programmer welfare Core XP Practices Fine Scale Feedback Fine Scale feedback is divided into – Planning Game Pair Programming Test-driven Development Whole Team Customer Planning Game Planning game determines the scope of the next release by combining business priorities and technical estimates. It is the main planning process for Extreme Programming. It suggests that the work or tasks are planned incrementally well ahead. Planning Game can be further divided into two parts: Release Planning Iteration or Sprint Planning Release Planning Release Planning is an arranged and planned meeting to shortlist necessities in the form of requirements to be incorporated into the release planned and course of events of each release. Iteration or Sprint Planning Sprint planning is the planning meeting by the group to settle on the assignments (popularly known as tasks) and exercises(popularly known as different activities) to achieve necessities (requirements)got ready for the cycle(iteration). Activities-> Meeting Exploration Commitment Steering Release Planning User story creation The group commits the date The group commits the functionality Adjust plan Adjust requirement changes Sprint Planning Task card creation Task Estimation Task Allocation Perform the task Generate the desired outcome Pair Programming All production code is written with two programmers at one machine. Pair programming is where coding is done trailed by a survey or review. In an extraordinary case, coding and review can occur in parallel. It prompts that two coders should code all the while. While one will code concentrating on the code and program level subtleties, the other coder will ceaselessly survey(review) the code remembering the master plan. The set of coders are not fixed and continually changing with the goal that everyone can mindful about the whole framework, project, product, system. Test-driven Development In Test-Driven Development, designers and developers compose the automated test cases before real application code. Automated test cases(unit) ought to definitely fizzle(fail) for the first time of execution. On the off chance that it doesn’t fail, it demonstrates the component as of now exists or there are a few issues with the Automated test case. At that point, the real application code is composed and the Automated suit is run once more. In light of the outcome, the genuine application code is altered or refactored further. The units are normally kept littler and the code is refactored as and when required. Whole Team In extreme programming, the entire group works overall as a unit and as a whole. Group members are urged to be more summed up or generalized than particular or specialized. Customer Customer is defined as a user of the team and available full – time to answer questions. Customers are made available to respond to the queries during the whole XP process. Continuous process improvement Continuous process improvement can be divided into – Continuous Integration Refactoring Small release Continuous Integration integrate and build the system many times a day – – every time a task is completed. In Continuous Integration, the code base is incorporated consistently from the beginning of the development process. It is an automatic procedure where builds are made from the source code repository. Nonstop Continuous Integration helps in recognizing integration issues much ahead in the development cycle and thus lessens a great part of the system cost. There are several tools available to encourage the CI procedure by tolerating the checked-in most recent code, prepare to build, build duration and build issues. Refactoring programmers continuously restructure the system without changing its behavior to remove duplication and simplify. Refactoring improves the current design, current plan, and code without influencing the usefulness. Agile way of developing gets improved from regular and frequent release over a range of time while group presents structure flaw, duplicate code or different issues. Refactoring improves the quality of the code. Small Release Small releases put a simple system into production, then release new versions in a very short cycle. Continuous and small releases is a typical and compelling routine with regards to XP. The general programming of whole software doesn’t occur in one single go. littler releases are arranged which gives the client the certainty of the general advancement and progress towards the overall goal. It additionally encourages the client to give recommendations to any progressions and meets the general objective of the project or product. Shared Understanding of the project or product Shared understanding can be further divided into Coding standard Collective ownership Simple design Metaphore Coding Standard Programmers write all code in accordance with rules emphasizing communication through the code. So as to stay away from imperfections or decrease defects in coding, conventions comprising of style and format for the source code are settled upon by the group. Guidelines should be according to the standard characterized by language sellers as well as tweaked by the group. Collective ownership Anyone can change any code anywhere in the system at any time. Since the group is cross-functional and the whole group works two by two(pair programming mode) which continue changing, all pieces of the code are known to everyone. If there should be an occurrence of the defect, any software engineer is permitted to change the code. It might likewise present a mistake as a result of unanticipated conditions. To deal with such issues, there should be comprehensive very much characterized unit tests available. Simple design The system is designed as simply as possible (extra complexity removed as soon as found). Extreme programming prescribes the basic and most ideal approach to actualize code. Refactoring likewise encourages this procedure of accomplishing the basic plan and simple design. Metaphor All development is guided by a simple shared story of how the whole system works. Metaphor representation is generally a naming convention, which makes every one of the partners(project stakeholders) comprehend what the usefulness is about in subtleties in details. Programmer welfare 40 – hour week – work no more than 40 hours a week as a rule. So it provides a sustainable pace to meet the project deadline. Otherwise, this may create noise in repeatable, predictable and consistent delivery. The reason why XP  is “extreme” Commonsense practices taken to extreme levels like- If code reviews are good, review code all the time (pair programming). If testing is good, everybody will test all the time. If simplicity is good, keep the system in the simplest design that supports its current functionality. (the simplest thing that works). If the design is good, everybody will design daily (refactoring). If architecture is important, everybody will work at defining and refining the architecture. (metaphor) If integration testing is important, build and integrate test several times a day.(continuous integration). If short iterations are good, make iterations really, really short (hours rather than weeks) XP Roles Extreme programming advocates the below roles- Customer Programmer Coach Tracker Customer- Who needs the software? Roles of a customer are given as: Create customer story/stories for each release. Create the priorities for the stories for each release. Alternation(addition,deletion,modification) of the userstory for each release. Programmer- Who develop the Software? Roles of a developer are given as: Estimate the effort details of the story given by the customer along with the whole development team. Build the user story to a workable software. The software should abide by the standards. Coach – Who facilitate the developers? Roles of a coach are given as: Mentor the team members. Do not directly involve in the project. Mentor XP processes. Help in issue resolution. Tracker- Who checks the milestone of the deliverables? Roles of a tracker are given as: Mentor the team towards the goal. Alert the stakeholders.",False
218170941,page,current,/x/PQYBDQ,Omega Security Process,,False
218170998,page,current,/x/dgYBDQ,Defects strategy for AR Product Teams,,
224657478,page,current,/x/RgBkDQ,Team Chart - roles and responsibilities,"From FY22, the team structure is different as per new product taxonomy guidelines. On a high level see below two images below to get a view of team structure and roles/responsibilities. Reach out to your engineering manager for more details. The information provided below was valid for/till FY21 and before. Keeping this for historical reasons. Team details: https://it.one.dell.com/sites/ETS_OM/_layouts/15/WopiFrame2.aspx?sourcedoc=%2Fsites%2FETS%5FOM%2FShared%20Documents%2FBalance%20Team%20Transformation%2FOM%20and%20AR%20Balanced%20teams%2Exlsx&action=view&activeCell=%27AR%27!A1 Balanced Teams Feature Teams Role AR Product Team 1 AR Product Team 2 AR Product Team 3 AR Product Team 4 AR Product Team 5 E2E CFO FT Chief Product manager Antonio Cannizzaro/ Debra Lee Antonio Cannizzaro/ Debra Lee Antonio Cannizzaro/ Debra Lee Antonio Cannizzaro/ Debra Lee Antonio Cannizzaro/ Debra Lee Lee Debra Distribution List cbs.ar.pt.1@dell.com cbs.ar.pt.2@dell.com cbs.ar.pt.3@dell.com cbs.ar.pt.4@dell.com CBS_AR_PT_5@Dell.com OMEGA_CFO_OM_FT@Dell.com Dev Manager Amit Kumar Singh Raval Tejas Bs Muguran Bs, Murugan Raval Tejas Kiat Seong NG Chief Anchor Chaitha Sagar Chaitha Sagar Chaitha Sagar Chaitha Sagar Chaitha Sagar Product Manager Nikos Tsakiropoulos Sarah Watchman Rhea Mallick Singh, Amit Ganchas Filipa Debra Product Designer (Functional) Soo Hoo, Ay Luen Chan, Chee Yee (to UIP from sprint 12) Santiago, Mariano Ang, Danny Thow, Siew Heoh Ong, Yi Peng Product Designer  (Technical) / Anchor Jabin, Akkamma Paikray, PritiRanjan Rathinam, Ezhil Mokashi, Prasanna Kumar, Anubhav Mohapatra, Sitansu AR DEV1 / 1 Joydeep Mishra G, Ravindra Burusu, Surendra Mathad, Adarsh Das, Tapanand (CW) Kochakanti, Harinath AR DEV1 / 2 Suguri, Mallikarjun Rajput, Rohan Kusumamchi, Ramji Nisha Sharma Bhaoi, Sauryaranjan B Sudarshan(c) AR DEV2 / 1 Rajagopal, Gobinath(C) Vinay BM (SOW - TechChef) Kiran Sajja (SOW TECH CHEF) Mahesh S (SOW EY) Talukder, Sasanka Patkuri, MahipalReddy ( C ) AR DEV2 / 2 Prasad, Raghavendra Jagatha_Sai_Siva_Sur Javed MD (SOW EY) Ramesh Kannan Rafey, Mohammad Baddam, Jhansi Reddy ( C ) Dev3 / 1 Sachin HR (SOW) Bhat, Vinayak Keshav (SOW TECH CHEF) Yadav, Shiv Jyothsna, Siva Dev3 / 2 Sirisha Ranhdi Sondakar, Shivanand (SOW) V, Madhuri ( C ) Dev4 / 1 Abhay Limye (UI) Palagani, Prasad (SOW EY) Dev4 / 2 Uma Dev 5/1 Sanidhya AR Gateway Rugi, Sid (SOW) Singh, Sandeep Harsha, Sri Ramachandra (SOW TECH CHEF) Functional Kemburu Srinivasa Jasleen Kaur Ooi, Hee Pong Pandith, Laxmish Chiam, Swin Loon Functional G, Ashwini S, Ramasai Venkata Krishna Kishore Chandu (SOW EY) Tan, Yong Ping Functional Reddy, Jagadeesh Functional Venkata Ratnam (SOW EY) SDET Abu Basha(c) Joshi Chandrasekhar B Narendra (SOW EnY) TVVS, Pratap Padmanabha, Gowtham Deepak, Sushant SDET 2 Jagannathan, Deepika (SOW) Manoah Purmi (CW) Sambeet Nayak (SOW) Reliability Team (L2/L3) Kunati, Kiran Kumar Franco, Jude Lothugedda, SivaKrishna Satyananda Jagadev Chitha Harsha Chandra VN UCD TEAM Venkata_krishna_Raja/M, Shivapriya/ Madala_hema_Naga_jyo Venkata_krishna_Raja/M, Shivapriya/ Madala_hema_Naga_jyo Venkata_krishna_Raja/M, Shivapriya/ Madala_hema_Naga_jyo Venkata_krishna_Raja/M, Shivapriya/ Madala_hema_Naga_jyo Harshini_Veeramachan/M, Shivapriya Harshini_Veeramachan/M, Shivapriya Product(s) owned PL: Customer Handling Credit and Collection Management Product1 > Collections UI Product2 > AR Store Product3 > Omega PL: Billing Invoicing Management Product 1> Omega Product2> Veritas Product3> AR Store PL: Billing Invoicing Management Product 1> LATAM PL: Customer Payments Management (settlement App not registered in Troux) PL: Self Service Review and Pay Invoice. Product1 > Myfinancials Product2 > AR Store Product3 > Ereceivables PL: Customer Communication Management. Product1 > OMEGA Product 2 > GIV Product3> Veritas",False
225249962,page,current,/x/qgptDQ,Settlement,,False
225258450,page,current,/x/0ittDQ,Legacy Architecture - EMC,Downloading orders from EMC (SupplyNet) to OMEGA for order booking 198px,
225549375,page,current,/x/P5xxDQ,Abacus Architecture Diagram,,False
225549557,page,current,/x/9ZxxDQ,Instrumentation,Instrumentation involves the following components – Message Tracking System/Application Visibility Error and Audit logging capabilities Resubmission mechanism Alerting/Self-Correcting capabilities Archival Mechanism The attributes of a message/metadata related to the event is passed along with the payload when communication happens between services/system without any overhead to the actual processing.,
225551641,page,current,/x/GaVxDQ,GIV Endpoints URL Details,,False
225551646,page,current,/x/HqVxDQ,My Financials,,
230363421,page,current,/x/HRG7DQ,Omega AR Sub Modules ( EBS ),,False
230367309,page,current,/x/TSC7DQ,Order Import,,
230367319,page,current,/x/VyC7DQ,Legacy Architecture,,False
230374207,page,current,/x/Pzu7DQ,Uploading OR Adding a New file  on Gitlab,250,
230374237,page,current,/x/XTu7DQ,Installing GIT,,False
230374911,page,current,/x/-z27DQ,Credit Services,"Service Description Environment Swagger URL Financial Attributes Service (INT9W)  -     ( CAM  Customer Model ) Service to expose financial attributes information of customer like Credit Limit, AR balances , collector ,payment terms etc As of now , US and Canada . GE4 https://arcreditservices-ge4.ausvdc02.pcf.dell.com/pcfint9wgateway/swagger-ui.html#/ GE1 https://arcreditservices-ge1.ausvdc02.pcf.dell.com/pcfint9wgateway/swagger-ui.html#/ GE2 https://arcreditservices-ge2.ausvdc02.pcf.dell.com/pcfint9wgateway/swagger-ui.html#/ GE3 https://arcreditservices-ge3.ausvdc02.pcf.dell.com/pcfint9wgateway/swagger-ui.html#/ PERF https://arcreditservices-perf.ausvdc02.pcf.dell.com/pcfint9wgateway/swagger-ui.html#/ PROD https://arcreditservices- prod.ausmpc.pcf.dell.com /pcfint9wgateway/swagger-ui.html#/ Financial Attributes Service (INT9W)  -     ( GII  Customer Model ) Service to expose financial attributes information of customer like Credit Limit, AR balances , collector ,payment terms etc As of now ,APJ and EMEA GE4 https://arcreditservices-ge4.ausvdc02.pcf.dell.com/arcreditlimitchecker/swagger-ui.html#/ GE3 https://arcreditservices-ge3.ausvdc02.pcf.dell.com/arcreditlimitchecker/swagger-ui.html#/ GE2 https://arcreditservices-ge2.ausvdc02.pcf.dell.com/arcreditlimitchecker/swagger-ui.html#/ GE1 https://arcreditservices-ge1.ausvdc02.pcf.dell.com/arcreditlimitchecker/swagger-ui.html#/ PERF https://arcreditservices-perf.ausvdc02.pcf.dell.com/arcreditlimitchecker/swagger-ui.html#/ PROD https://arcreditservices- prod.ausmpc.pcf.dell.com / arcreditlimitchecker /swagger-ui.html#/ Credit Request Services Services to create/update/query Credit requests in OCM module of Omega. GE4 https://arcreditservices-ge4.ausvdc02.pcf.dell.com/ocmservice/swagger-ui.html Create: https://arcreditservices- ge4.ausvdc02.pcf.dell.com/ocmservice/dsa/creditrequest/create Query: https://arcreditservices-ge4.ausvdc02.pcf.dell.com/ocmservice/dsa/creditrequest/query Update : https://arcreditservices-ge4.ausvdc02.pcf.dell.com/ocmservice/dsa/creditrequest/update GE1 https://arcreditservices-ge1.ausvdc02.pcf.dell.com/ocmservice/swagger-ui.html GE2 https://arcreditservices-ge2.ausvdc02.pcf.dell.com/ocmservice/swagger-ui.html Create: https://arcreditservices- ge2.ausvdc02.pcf.dell.com/ocmservice/dsa/creditrequest/create Query: https://arcreditservices-ge2.ausvdc02.pcf.dell.com/ocmservice/dsa/creditrequest/query Update : https://arcreditservices-ge2.ausvdc02.pcf.dell.com/ocmservice/dsa/creditrequest/update GE3 https://arcreditservices-ge3.ausvdc02.pcf.dell.com/ocmservice/swagger-ui.html PERF https://arcreditservices-perf.ausvdc02.pcf.dell.com/ocmservice/swagger-ui.html PROD https://arcreditservices-prod.au s mpc.pcf.dell.com /ocmservice/swagger-ui.html Create: https://arcreditservices-prod.au s mpc.pcf.dell.com /ocmservice /dsa/creditrequest/create Query: https://arcreditservices-prod.au s mpc.pcf.dell.com /ocmservice /dsa/creditrequest/query Update : https://arcreditservices-prod.au s mpc.pcf.dell.com /ocmservice /dsa/creditrequest/update PIR Service Service to provide Primary Invoice Receipent  details of Customer . GE4 https://arcreditservices-ge4.ausvdc02.pcf.dell.com/pirservice/swagger-ui.html#/ GE1 https://arcreditservices-ge1.ausvdc02.pcf.dell.com/ pirservice /swagger-ui.html#/ GE2 https://arcreditservices-ge2.ausvdc02.pcf.dell.com/ pirservice /swagger-ui.html#/ GE3 https://arcreditservices-ge3.ausvdc02.pcf.dell.com/ pirservice /swagger-ui.html#/ PERF https://arcreditservices-perf.ausvdc02.pcf.dell.com/ pirservice /swagger-ui.html#/ PROD https://arcreditservices- prod.ausmpc.pcf.dell.com / pirservice /swagger-ui.html#/ GE4 Endpoints: FInancial Attributes Service / INT9w: https://arcreditlimitservice-ge4.ausvdc02.pcf.dell.com/pcfint9wgateway/int9w/customer/520000147720/11/04/DSA Credit Request Services Create: https://arcreditservices-ge4.ausvdc02.pcf.dell.com/ocmservice/dsa/creditrequest/create Query: https://arcreditservices-ge4.ausvdc02.pcf.dell.com/ocmservice/dsa/creditrequest/query Update : https://arcreditservices-ge4.ausvdc02.pcf.dell.com/ocmservice/dsa/creditrequest/update",False
230375675,page,current,/x/_0C7DQ,Vault Implementation,"WHAT IS VAULT ? Hashicorp Vault is a tool for securely accessing secrets . A secret is anything that you want to tightly control access to, such as API keys, passwords, or certificates. Some key features of Vault are: Secure Secret Storage Leasing and Renewal Identity Based Access Revocation CHALLENGES IN DISTRIBUTED APPLICATIONS Managing Service Account credentials, DB passwords. Managing connection details for external systems (e.g. Databases, RabbitMQ etc.). Having a single centralized reference for all the secrets for a distributed system like ABACUS. ABACUS - VAULT INTEGRATION BENEFITS No more config files/app re-deployment when there is any configuration update. Version System availability in Vault for quick rollback or fetch old values. Single point of change in case of – Ø Any change in service account password. Ø Any change in external system connection details. COMPARISON WITH ENTERPRISE VAULT Enterprise Vault is HA over PC1, S3B and Durham using cluster replication , hence tokens created at a particular Vault cluster will not replicate to the other. In our approach, Vault is HA over PC1 and S3B using node replication in single cluster, thus token replication is not required as any token created will be valid for the entire cluster. BEST PRACTICES FOR DEVELOPERS Do not expose the RoleID and Vault URL to the outside. Always keep them hidden or share securely. Below is an example of using Marathon secrets to store Vault details. Bad Practice - Good Practice - BEST PRACTICES FOR OPS/ ADMIN TEAM Controlling access to Vault secrets through a set of defined policies. Make strict policy to have short-lived token to reduce attack-plane in case of security breach.",
230376964,page,current,/x/BEa7DQ,Logging Store,Elastic-Search Cluster: ES Version Environment URL(s) Cluster Name Event Logging Schema(s) Audit Logging Schema(s) 5.5.0 Non-Prod http://ausslabnosql01.us.dell.com:5800/ abacus-sit GE1: order_gateway_event_ge1 GE2: order_gateway_event_ge2 GE3: order_gateway_event_ge3 GE4: order_gateway_event GE1: order_gateway_audit_ge1 GE2: order_gateway_audit_ge2 GE3: order_gateway_audit_ge3 GE4: order_gateway_audit Prod https://abacus-services.us.dell.com/es-abacus / abacus-logevents order_gateway_event order_gateway_audit 7.6.2 Non-Prod https://abacus-services-ge3.us.dell.com/abacus-es / abacus-logevents-np GE1: order_gateway_event_ge1 GE2: order_gateway_event_ge2 GE3: order_gateway_event_ge3 GE4: order_gateway_event_ge4 GE1: order_gateway_audit_ge1 GE2: order_gateway_audit_ge2 GE3: order_gateway_audit_ge3 GE4: order_gateway_audit_ge4 Prod https://abacus-services.us.dell.com/es-logevents/ abacus-logevents order_gateway_event order_gateway_audit,False
230377041,page,current,/x/UUa7DQ,RDD,,False
230380433,page,current,/x/kVO7DQ,Oracle Service Bus (OCI) : Customer Flow from CMDM to OMEGA (PubSub),"Gitlab Repository PubSub Consumer [VM] - https://gitlab.dell.com/gcbs/accountreceivables/arstore/onearservicelayer/customerservices/osbpubsubcustomerflow/customerpubsubmqconsumer/-/tree/FY22_0803_SIT PubSub Producer (From IBM MQ) [PCF] - https://gitlab.dell.com/gcbs/accountreceivables/arstore/onearservicelayer/customerservices/osbpubsubcustomerflow/customerpubsubmqproducer/-/tree/FY22_0803_SIT Omega XREF / INT12 / CIL Call [VM]- https://gitlab.dell.com/gcbs/accountreceivables/arstore/onearservicelayer/customerservices/osbpubsubcustomerflow/cmdmomegaservice/-/tree/FY22_0803_SIT OCI DVM Table to Elastic Search Table Migration [LOCAL]- (NOT REQUIRED IN PROD) https://gitlab.dell.com/gcbs/accountreceivables/arstore/onearservicelayer/customerservices/osbpubsubcustomerflow/ocidbtoelasticsearch_dvm/-/tree/FY22_0502_SIT Customer Rejection Producer (from Oracle AQ) [VM] - https://gitlab.dell.com/gcbs/accountreceivables/arstore/onearservicelayer/customerservices/osbpubsubcustomerflow/mdmrejectionmanagmentaqproducer/-/tree/FY22_0803_SIT Customer Rejection Producer (from Staging Table) [VM] - (NOT REQUIRED IN PROD) https://gitlab.dell.com/gcbs/accountreceivables/arstore/onearservicelayer/customerservices/osbpubsubcustomerflow/mdmrejectionmanagmentomegaproducer/-/tree/FY22_0803_SIT Customer Rejection Producer (from CSV File) [VM] - (NOT REQUIRED IN PROD) https://gitlab.dell.com/gcbs/accountreceivables/arstore/onearservicelayer/customerservices/osbpubsubcustomerflow/mdmrejectionmanagmentfileproducer/-/tree/FY22_0803_SIT Steps: Log on to . In the proxy-service, put this XML → MockedCustomer-CA.xml . Trace the request through logs in OCI GE2 logging database . PROD OCI DB TNS: oci.datasource.url=jdbc:oracle:thin:@(DESCRIPTION =(CONNECT_TIMEOUT=90)(RETRY_COUNT=20)(RETRY_DELAY=3)(TRANSPORT_CONNECT_TIMEOUT=15 sec)(ADDRESS_LIST =(LOAD_BALANCE=on)(ADDRESS = (PROTOCOL = TCP) (HOST = salpr1db-cname.us.dell.com ) (PORT=1521)))(ADDRESS_LIST =(LOAD_BALANCE=on)(ADDRESS = (PROTOCOL = TCP) (HOST = salpr2db-cname.us.dell.com ) (PORT=1521)))(CONNECT_DATA=(SERVICE_NAME = salp_rw.prd.amer.dell.com ))) oci.datasource.username=SERVICE_DFPR11_APP Flowchart (Oracle Service Bus View) IBM MQ → CustomerPubsubMQConsumer → CustomerMDMRequestAQProducer (Business Service) → CustomerMDMRequestAQConsumer → SyncCustomerMDMRequestorABCS → SyncCustomerPartyList → OMEGACustomerProviderAQProducer (Business Service) →  OMEGACustomerProviderAQConsumer → SyncCustomerPartyListOMARProvABCSImpl_1 → OMEGA I. CustomerPubsubMQConsumer Functions: Consumes from CL.CMDM.CUSTOMER_FEED.OMEGA (IBM MQ). Logs message_header as follows - let $msg_id := fn-bea:uuid() <MSG_HEADER> <IMPL_NAME>FSBO</IMPL_NAME> <IMPL_VERSION>1.0</IMPL_VERSION> <SRC_MSG_ID>{$msg_id}</SRC_MSG_ID> <DERIVED_MSG_ID>{$msg_id}</DERIVED_MSG_ID> <PARENT_MSG_ID>{$msg_id}</PARENT_MSG_ID> <MSG_TYPE>PubsubUpdate</MSG_TYPE> <BUSINESS_OBJ_TYPE>Customer</BUSINESS_OBJ_TYPE> <ORIGINATOR_SYSTEM>CMDM</ORIGINATOR_SYSTEM> <DESTINATION_SYSTEM>OMEGA</DESTINATION_SYSTEM> <MSG_FLOW_TYPE>ASYNC</MSG_FLOW_TYPE> <MSG_TIMESTAMP>{fn:current-dateTime()}</MSG_TIMESTAMP> <IDENTIFIER1>{data($body//Contract/AdminNativeKey/AdminNativeKey[1]/adminContractId)}</IDENTIFIER1> <IDENTIFIER2>{data($body//Contract/BusinessUnit)}</IDENTIFIER2> <IDENTIFIER3></IDENTIFIER3> <IDENTIFIER4>PUBSUB</IDENTIFIER4> <IDENTIFIER5></IDENTIFIER5> <IDENTIFIER6></IDENTIFIER6> <IDENTIFIER7></IDENTIFIER7> <IDENTIFIER8></IDENTIFIER8> <IDENTIFIER9>MDM_Customer/OutboundAdapterServices/CustomerMDMRequestAQProducer</IDENTIFIER9> <IDENTIFIER10></IDENTIFIER10> </MSG_HEADER> 2. Assign [ data($body/CILPubSubObject/Contract/ContractExtension/SalesChannel) ] to [ SalesChannel ] 3. Assign data(data($body/CILPubSubObject/Contract/ContractExtension/PaymentTermValue)) to PaymentTermValue 4. Assign fn:upper-case(data($body//Header/PublishDetails/ControlExtensionProperty[@name=""IS_TERM_CUSTOMER""])) to TermCustomer 5.Assign data($body//Header/PublishDetails/ControlExtensionProperty[@name=""CAMEvent_CUSTOMERACCOUNT_MODIFYBY""]) to ModifyBy 6. Get SELECT TARGET_VALUE FROM DVM_DATA WHERE DVM_CODE ='PUBSUB_SCOPE' AND SOURCE_SYSTEM = 'CMDM' AND TARGET_SYSTEM = 'OMAR' AND SOURCE_VALUE ='"",$SalesChannel,""'"" and assign to PubsubSalesChannelUpdScope . 7.  Get SELECT TARGET_VALUE FROM DVM_DATA WHERE DVM_CODE ='CUSTNUM_SCOPE' AND SOURCE_SYSTEM = 'CMDM' AND TARGET_SYSTEM = 'OMAR' AND SOURCE_VALUE ='"",data($body//Contract/AdminNativeKey/AdminNativeKey[1]/adminContractId),""'"") and assign to CustNumScope . 8. Only if  - data($PubsubSalesChannelUpdScope) = 'ENABLED' or data($CustNumScope) = 'ENABLED' , Then, Publish to [ CustomerMDMRequestAQProducer ] invoking [ Enqueue ] , (Buffer queue - SERVICE_EFS.AIA_MDM_CUST_REQ_Q) XQuery Resource: DFPServices1.1/Messaging/xq/ Variable Names And Bindings: PAYLOAD_TYPE - 'REQUESTOR_ABM' MSG_BODY - $body/*[1] MSG_HEADER - $MessageHeader Publish to [ DFPLoggingService ] XQuery Resource: DFPServices1.1/Instrumentation/xq/ Variable Names And Bindings: Destinations - <destns:Destinations/> EventCode - 'MESSAGE_SAVED' MessageBody - $body/*[1] PayloadType - 'REQUESTOR_ABM' mSG_HEADER1 - $MessageHeader Transport Headers : MessageHeader Set Header to [ $MessageHeader ] ATTRIBUTE3 Set Header to [fn:concat('SalesChannel: ',$SalesChannel)] ATTRIBUTE4 Set Header to [fn:concat('PaymentTermValue: ',$PaymentTermValue) ] ATTRIBUTE5 Set Header to [fn:concat('TermCustomer: ',$TermCustomer) ] ATTRIBUTE6 Set Header to [fn:concat('LastModifyBy: ',$ModifyBy) ] II. CustomerMDMRequestAQConsumer Assign response formed to [ MessageHeader ] XQuery Resource: DFPServices1.1/Messaging/xq/ Variable Names And Bindings: DFP_MESSAGE_TYPE - $body/*[1] Replace [ entire node ] of [ * ] in [ body ] with [fn-bea:inlinedXML($body//MSG_BODY[1])] Log an event with EventCode - 'MESSAGE_DEQUEUED_FROM_(AIA_MDM_CUST_REQ_Q)' Extract the body and publish the same to [ SyncCustomerMDMRequestorABCS ] III. SyncCustomerMDMRequestorABCS Retrieve Message Headers from previous flow & assign to $MessageHeader. Assign fn-bea:inlinedXML(fn:string($inbound/ctx:transport/ctx:request/tp:headers/tp:user-header[@name='MessageHeader']/@value)) to [ MessageHeader ] STAGE-1: Check for Pubsub Message and Process IF data($MessageHeader/ORIGINATOR_SYSTEM) = 'CMDM' and data($MessageHeader/IDENTIFIER4) = 'PUBSUB' then Assign [ $body/*[1] ] to [ PubSubReq ] Assign [ data($body/CILPubSubObject/Contract/ContractExtension/SalesChannel) ] to [ SalesChannel ] Execute ""SELECT TARGET_VALUE FROM DVM_DATA WHERE DVM_CODE ='SALESCHANNEL_UPD_SCOPE' AND SOURCE_SYSTEM = 'CMDM' AND TARGET_SYSTEM = 'OMAR' AND SOURCE_VALUE ='"",$SalesChannel,""'""))) and get SalesChannelUpdScope. IF the SalesChannelUpdScope = ENABLED, then Replace [ //IDENTIFIER5 ] in [ MessageHeader ] with [ 'UPDATE_ENABLED' ] where, IDENTIFIER5 is $TERM_CUSTOMER IF (fn:upper-case(data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[@name=""IS_TERM_CUSTOMER""]))='TRUE'
and data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_ADD_CONTRACT_"")])!=''
and
$body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[fn:contains(fn:upper-case(RoleValue),'BILL')]!=''), then Replace [ entire node ] of [ * ] in [ body ] with Assign [ 'CREATE' ] to [ UpdateType ] - ATTRIBUTE1 Assign 'CAMEvent_ADD_CONTRACT' to [ UpdateValue ] - ATTRIBUTE2 //This is a Customer Create Event Log an event with EventCode - (Along with Message Header, ATTRIBUTE1, ATTRIBUTE2 )  'VALIDATION_SUCCESS(PROCESS_PUBSUB_MESSAGE)' Else , this is an update event. Service Callout to [ ExtractPUBSUBCustomerCrossReferenceOMEGAService ] invoking [ ExtractPUBSUBCustomerCrossReferenceOMEGAService ] Assign below created payload to [ XREFApiReq ] XQuery Resource: MDM_Customer/OutboundAdapterServices/xq/PUBSUBABMtoOMEGACrossRefAPIInput Variable Names And Bindings: PubSub - $body/*[1] Using Xquery "" PUBSUBABMtoOMEGACrossRefAPIInput.xqy "", transform the request and make a call to <<PROCEDURE-1>> XXG_XREF_CMDM_VALIDATE_PKG XXG_CMDM_XREF_API of OMEGA. Log an event with event code INVOKED_XREF_API , PayloadType - 'XREFAPI_REQUEST_ABM', MessageBody - $XREFApiReq Response received → Log an event with event code INVOKED_XREF_API_SUCCESS ,MessageBody - $XREFApiResp PayloadType - 'XREFAPI_RESPONSE_ABM' IF data($XREFApiResp//ns0:P_XREF_OBJ/ns0:P_XREF_OBJ_ITEM/ns0:P_CUSTS_ACCT_REC/ns0:P_CUSTS_ACCT_REC_ITEM/ns0:ACCOUNT_NO_VAL)='Y', then Form a payload using : <get:CustomerList xmlns:get="" http://www.dell.com/GetCustService ""> <get:Customer> <get:CustomerNum>{data($body//Contract/AdminNativeKey/AdminNativeKey[1]/adminContractId)}</get:CustomerNum> <get:Buid>{data($body//Contract/BusinessUnit)}</get:Buid> <get:Address> <get:AddressItem> { if(data($body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[RoleValue != 'Owner']/ContractRoleLocation/ContractRoleLocation[fn:contains(fn:upper-case(ContractRoleLocationPurpose/ContractRoleLocationPurpose/PurposeValue/text()),'BILLING') and fn:exists(PartyAddress/AddressId)]/ContractRoleLocationExtension/CAMLocationId)!='') then <get:AddressId>{data($body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[RoleValue != 'Owner']/ContractRoleLocation/ContractRoleLocation[fn:contains(fn:upper-case(ContractRoleLocationPurpose/ContractRoleLocationPurpose/PurposeValue/text()),'BILLING') and fn:exists(PartyAddress/AddressId)]/ContractRoleLocationExtension/CAMLocationId)}</get:AddressId> else <get:AddressId></get:AddressId> } <get:AddressType>Billing</get:AddressType> </get:AddressItem> </get:Address> </get:Customer> </get:CustomerList> b. Log an event with EventCode - 'VALIDATION_SUCCESS(PROCESS_PUBSUB_MESSAGE)' MessageBody - $body/*[1] ATTRIBUTE1 Set Header to ['UPDATE'] ATTRIBUTE2 Set Header to ['DOMS_UPDATE'] Else , Assign [ 'FALSE' ] to [ PubSubProcessFlag ] DISCARD the event  with EventCode - 'XREF_VALIDATION_FAILED(PUBSUB_MESSAGE_DISCARD)' MessageBody - $body/*[1] ATTRIBUTE1 Set Header to [ 'DISCARD' ] ATTRIBUTE2 Set Header to [ 'XREF_VALIDATION_FAILED' ] Else if fn:upper-case(data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[@name=""IS_TERM_CUSTOMER""]))='FALSE' and data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_ADD_CONTRACT_"")])!='' Assign [ 'FALSE' ] to [ PubSubProcessFlag ] Discard the event with EventCode - 'VALIDATION_FAILED(PUBSUB_MESSAGE_DISCARD)' MessageBody - $body/*[1] PayloadType - 'PROVIDER_ABM' ATTRIBUTE1 Set Header to [ 'DISCARD' ] ATTRIBUTE2 Set Header to ['PUBSUB_VALIDATION_FAILED' ] Else if (fn:upper-case(data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[@name=""IS_TERM_CUSTOMER""]))='TRUE'  and ((data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_ADD_CONTRACT_"")])!='')  or (fn:contains(data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[@name=""CAMEvent_CUSTOMERACCOUNT_MODIFYBY""]),'DNBMATCH')))) then if (data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_ADD_CONTRACT_"")])!='' and fn:not($body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[fn:contains(fn:upper-case(RoleValue),'BILL')]!='')) then Assign ['SHIPPING CONTRACT ADD - NOT ALLOWED' ] to [ UpdateType ] Assign [ 'FALSE' ] to [ PubSubProcessFlag ] DISCARD the event with EventCode - 'VALIDATION_FAILED(PUBSUB_MESSAGE_DISCARD)' MessageBody - $body/*[1] PayloadType - 'PROVIDER_ABM' ATTRIBUTE1 Set Header to [ 'DISCARD' ] ATTRIBUTE2 Set Header to [ 'PUBSUB_VALIDATION_FAILED'] else Assign to  [ UpdateType ] – if(data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_ADD_CONTRACT_"")])!='') then 'CREATE' else if(data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_DNBMatchActive_"")])!='') then 'DNBMatch' else 'UPDATE' Assign to [ UpdateValue ] - if(data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_ADD_CONTRACT_"")])!='') then 'CAMEvent_ADD_CONTRACT' else if(data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_DNBMatchActive_"")])!='') then 'CAMEvent_DNBMatchActive' else 'DNBMatch_UPDATE' Replace [ entire node ] of [ * ] in [ body ] with Log an event with EventCode - 'VALIDATION_SUCCESS(PROCESS_PUBSUB_MESSAGE)' MessageBody - $body/*[1] ATTRIBUTE1 Set Header to [ $UpdateType ] ATTRIBUTE2 Set Header to [ $UpdateValue ] else if data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_ADD_CONTRACTPARTYROLE_"")])!='' or data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_ADD_CONTACTMETHOD_"")])!='' or data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_UPDATE_CONTRACTRELATIONSHIP"")])!='' or data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_UPDATE_CONTACTMETHOD"")])!='' or data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_UPDATE_CONTRACT"")])!='' or (fn:upper-case(data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[@name=""IS_TERM_CUSTOMER""]))='FALSE') 1. Assign created payload to [ XREFApiReq ] XQuery Resource: MDM_Customer/OutboundAdapterServices/xq/ Variable Names And Bindings: PubSub - $body/*[1] Service Callout to [ ExtractPUBSUBCustomerCrossReferenceOMEGAService ] invoking [ ExtractPUBSUBCustomerCrossReferenceOMEGAService ]. Refer <<PROCEDURE-1>> Log an event with EventCode - 'INVOKED_XREF_API_SUCCESS' MessageBody - $XREFApiResp PayloadType - 'XREFAPI_RESPONSE_ABM' From the response, IF (fn:upper-case(data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[@name=""IS_TERM_CUSTOMER""]))='TRUE' and data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_ADD_CONTRACTPARTYROLE_"")])!='' and $body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[fn:contains(fn:upper-case(RoleValue),'BILL') and fn:not(fn:contains(fn:upper-case(RoleValue),'SHIP'))]!='') or (fn:upper-case(data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[@name=""IS_TERM_CUSTOMER""]))='FALSE' and data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_ADD_CONTRACTPARTYROLE_"")])!='' and data($XREFApiResp//ns0:P_XREF_OBJ/ns0:P_XREF_OBJ_ITEM/ns0:P_CUSTS_ACCT_REC/ns0:P_CUSTS_ACCT_REC_ITEM/ns0:P_CUST_SITE_REC/ns0:P_CUST_SITE_REC_ITEM/ns0:SITE_OSR_VAL)='Y' and $body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[fn:contains(fn:upper-case(RoleValue),'BILL') and fn:not(fn:contains(fn:upper-case(RoleValue),'SHIP'))]!='') then Replace [ entire node ] of [ * ] in [ body ] with [ ]]> ] Mark the UpdateType as CREATE and Mark the UpdateValue as 'CAMEvent_ADD_CONTRACTPARTYROLE_BILL' Log the event with  EventCode - 'VALIDATION_SUCCESS(PROCESS_PUBSUB_MESSAGE)' MessageBody - $body/*[1] ATTRIBUTE1 Set Header to [ $UpdateType ] ATTRIBUTE2 Set Header to [ $UpdateValue ] From the response, else if (fn:upper-case(data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[@name=""IS_TERM_CUSTOMER""]))='FALSE' and data($XREFApiResp//ns0:P_XREF_OBJ/ns0:P_XREF_OBJ_ITEM/ns0:P_CUSTS_ACCT_REC/ns0:P_CUSTS_ACCT_REC_ITEM/ns0:ACCOUNT_NO_VAL)='Y' and data($XREFApiResp//ns0:P_XREF_OBJ/ns0:P_XREF_OBJ_ITEM/ns0:P_CUSTS_ACCT_REC/ns0:P_CUSTS_ACCT_REC_ITEM/ns0:PAYMENT_TERM_VAL)='N'),  then Replace [ entire node ] of [ * ] in [ body ] with Mark the UpdateType ass UPDATE and Mark the UpdateValue as 'PAYMENT_TERM_UPDATE'. Log the event with EventCode - 'VALIDATION_SUCCESS(PROCESS_PUBSUB_MESSAGE)' MessageBody - $body/*[1] ATTRIBUTE1 Set Header to [ $UpdateType ] ATTRIBUTE2 Set Header to [ $UpdateValue ] From the response, else if (fn:upper-case(data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[@name=""IS_TERM_CUSTOMER""]))='TRUE' and data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_ADD_CONTRACTPARTYROLE_"")])!='' and $body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[fn:contains(fn:upper-case(RoleValue),'SHIP')]!='') then form payload as <get:CustomerList xmlns:get="" http://www.dell.com/GetCustService ""> <get:Customer> <get:CustomerNum>{data($body//Contract/AdminNativeKey/AdminNativeKey[1]/adminContractId)}</get:CustomerNum> <get:Buid>11</get:Buid> <get:Address> <get:AddressItem> <get:AddressId>{data($body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[RoleValue != 'Owner']/ContractRoleLocation/ContractRoleLocation[fn:contains(fn:upper-case(ContractRoleLocationPurpose/ContractRoleLocationPurpose/PurposeValue/text()),'SHIPPING') and fn:exists(PartyAddress/AddressId)]/ContractRoleLocationExtension/CAMLocationId)}</get:AddressId> <get:AddressType>Shipping</get:AddressType> </get:AddressItem> </get:Address> </get:Customer> </get:CustomerList> Mark the UpdateType ass CREATE and Mark the UpdateValue as 'CAMEvent_ADD_CONTRACTPARTYROLE_SHIP' Log the event as VALIDATION_SUCCESS(PROCESS_PUBSUB_MESSAGE) From the response, else if data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_ADD_CONTACTMETHOD_"")])!='' and (data($XREFApiResp//ns0:P_XREF_OBJ/ns0:P_XREF_OBJ_ITEM/ns0:P_CUSTS_ACCT_REC/ns0:P_CUSTS_ACCT_REC_ITEM/ns0:P_CUST_SITE_REC/ns0:P_CUST_SITE_REC_ITEM/ns0:P_CUSTS_ACCT_ROLE_REC/ns0:P_CUSTS_ACCT_ROLE_REC_ITEM/ns0:ACCT_ROLE_OSR)='Y' or data($XREFApiResp//ns0:P_XREF_OBJ/ns0:P_XREF_OBJ_ITEM/ns0:P_CUSTS_ACCT_REC/ns0:P_CUSTS_ACCT_REC_ITEM/ns0:P_CUST_SITE_REC/ns0:P_CUST_SITE_REC_ITEM/ns0:P_CUSTS_ACCT_ROLE_REC/ns0:P_CUSTS_ACCT_ROLE_REC_ITEM/ns0:P_CUSTS_ROLE_RESP_REC/ns0:P_CUSTS_ROLE_RESP_REC_ITEM/ns0:CAM_LOC_ID_VAL)='Y') then, form a payload as <get:CustomerList xmlns:get="" http://www.dell.com/GetCustService ""> { if(data($body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[RoleValue != 'Owner' and fn:contains(fn:upper-case(RoleValue),'BILL')]/ContractRoleLocation/ContractRoleLocation[fn:exists(PartyAddress/AddressId)]/ContractRoleLocationExtension/CAMLocationId)!='')then <get:Customer> <get:CustomerNum>{data($body//Contract/AdminNativeKey/AdminNativeKey[1]/adminContractId)}</get:CustomerNum> <get:Buid>11</get:Buid> <get:Address> <get:AddressItem> <get:AddressId>{data($body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[RoleValue != 'Owner' and fn:contains(fn:upper-case(RoleValue),'BILL')]/ContractRoleLocation/ContractRoleLocation[fn:exists(PartyAddress/AddressId)]/ContractRoleLocationExtension/CAMLocationId)}</get:AddressId> <get:AddressType>Billing</get:AddressType> </get:AddressItem> </get:Address> </get:Customer> else() } { if(data($body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[RoleValue != 'Owner' and fn:contains(fn:upper-case(RoleValue),'SHIP')]/ContractRoleLocation/ContractRoleLocation[ fn:exists(PartyAddress/AddressId)]/ContractRoleLocationExtension/CAMLocationId)!='')then <get:Customer> <get:CustomerNum>{data($body//Contract/AdminNativeKey/AdminNativeKey[1]/adminContractId)}</get:CustomerNum> <get:Buid>11</get:Buid> <get:Address> <get:AddressItem> <get:AddressId>{data($body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[RoleValue != 'Owner' and fn:contains(fn:upper-case(RoleValue),'SHIP')]/ContractRoleLocation/ContractRoleLocation[fn:exists(PartyAddress/AddressId)]/ContractRoleLocationExtension/CAMLocationId)}</get:AddressId> <get:AddressType>Shipping</get:AddressType> </get:AddressItem> </get:Address> </get:Customer> else() } </get:CustomerList> Mark UpdateType as CREATE Mark UpdateValue as'CAMEvent_ADD_CONTACTMETHOD'. Log the event as VALIDATION_SUCCESS(PROCESS_PUBSUB_MESSAGE) From the response, else if data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_UPDATE_CONTACTMETHOD"")])!='' and data($XREFApiResp//ns0:P_XREF_OBJ/ns0:P_XREF_OBJ_ITEM/ns0:P_CUSTS_ACCT_REC/ns0:P_CUSTS_ACCT_REC_ITEM/ns0:P_CUST_SITE_REC/ns0:P_CUST_SITE_REC_ITEM/ns0:P_CUSTS_CONTACT_POINT/ns0:P_CUSTS_CONTACT_POINT_ITEM[ns0:CONTACT_POINT_OSR_VAL='Y'] !='') then form a payload as <get:CustomerList xmlns:get="" http://www.dell.com/GetCustService ""> { if(data($body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[RoleValue != 'Owner' and fn:contains(fn:upper-case(RoleValue),'BILL')]/ContractRoleLocation/ContractRoleLocation[fn:exists(PartyAddress/AddressId)]/ContractRoleLocationExtension/CAMLocationId)!='')then <get:Customer> <get:CustomerNum>{data($body//Contract/AdminNativeKey/AdminNativeKey[1]/adminContractId)}</get:CustomerNum> <get:Buid>11</get:Buid> <get:Address> <get:AddressItem> <get:AddressId>{data($body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[RoleValue != 'Owner' and fn:contains(fn:upper-case(RoleValue),'BILL')]/ContractRoleLocation/ContractRoleLocation[fn:exists(PartyAddress/AddressId)]/ContractRoleLocationExtension/CAMLocationId)}</get:AddressId> <get:AddressType>Billing</get:AddressType> </get:AddressItem> </get:Address> </get:Customer> else() } { if(data($body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[RoleValue != 'Owner' and fn:contains(fn:upper-case(RoleValue),'SHIP')]/ContractRoleLocation/ContractRoleLocation[ fn:exists(PartyAddress/AddressId)]/ContractRoleLocationExtension/CAMLocationId)!='')then <get:Customer> <get:CustomerNum>{data($body//Contract/AdminNativeKey/AdminNativeKey[1]/adminContractId)}</get:CustomerNum> <get:Buid>11</get:Buid> <get:Address> <get:AddressItem> <get:AddressId>{data($body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[RoleValue != 'Owner' and fn:contains(fn:upper-case(RoleValue),'SHIP')]/ContractRoleLocation/ContractRoleLocation[fn:exists(PartyAddress/AddressId)]/ContractRoleLocationExtension/CAMLocationId)}</get:AddressId> <get:AddressType>Shipping</get:AddressType> </get:AddressItem> </get:Address> </get:Customer> else() } </get:CustomerList> Mark the UpdateType as Update Mark the UpdateValue as 'CAMEvent_UPDATE_CONTACTMETHOD' Log the event as VALIDATION_SUCCESS(PROCESS_PUBSUB_MESSAGE) From the response, else if data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_UPDATE_CONTRACTRELATIONSHIP"")])!='' and data($XREFApiResp//ns0:P_XREF_OBJ/ns0:P_XREF_OBJ_ITEM/ns0:P_CUSTS_ACCT_REC/ns0:P_CUSTS_ACCT_REC_ITEM/ns0:FUNDER_RLN_EXISTS)='Y' then Form a payload as <get:CustomerList xmlns:get="" http://www.dell.com/GetCustService ""> <get:Customer> <get:CustomerNum>{data($body//Contract/AdminNativeKey/AdminNativeKey[1]/adminContractId)}</get:CustomerNum> <get:Buid>11</get:Buid> <get:Address> <get:AddressItem> <get:AddressId>{data($body//Contract/ContractComponent/ContractComponent/ContractPartyRoleList/ContractPartyRole[RoleValue != 'Owner' and fn:contains(fn:upper-case(RoleValue),'BILL')]/ContractRoleLocation/ContractRoleLocation[fn:exists(PartyAddress/AddressId)]/ContractRoleLocationExtension/CAMLocationId)}</get:AddressId> <get:AddressType>Billing</get:AddressType> </get:AddressItem> </get:Address> </get:Customer> </get:CustomerList> Mark an [ ./IDENTIFIER10 ] saying 'UPDATE_CONTRACTRELATIONSHIP'   (//This identifier was declared in message header but unused since pubsub flow) Mark the updateType as Update Mark the UpdateValue as  'CAMEvent_UPDATE_CONTRACTRELATIONSHIP' Log the event as VALIDATION_SUCCESS(PROCESS_PUBSUB_MESSAGE) From the response, else if data($body/CILPubSubObject/Header/PublishDetails/ControlExtensionProperty[fn:contains(@name,""CAMEvent_UPDATE_CONTRACT"")])!='' and data($XREFApiResp//ns0:P_XREF_OBJ/ns0:P_XREF_OBJ_ITEM/ns0:P_CUSTS_ACCT_REC/ns0:P_CUSTS_ACCT_REC_ITEM/ns0:ACCOUNT_NO_VAL)='Y' and (data($XREFApiResp//ns0:P_XREF_OBJ/ns0:P_XREF_OBJ_ITEM/ns0:P_CUSTS_ACCT_REC/ns0:P_CUSTS_ACCT_REC_ITEM/ns0:ACCOUNT_CATEGORY_VAL)='N' or data($XREFApiResp//ns0:P_XREF_OBJ/ns0:P_XREF_OBJ_ITEM/ns0:P_CUSTS_ACCT_REC/ns0:P_CUSTS_ACCT_REC_ITEM/ns0:SALES_CHANNEL_VAL)='N') Form a payload as <get:CustomerList xmlns:get="" http://www.dell.com/GetCustService ""> <get:Customer> <get:CustomerNum>{data($body//Contract/AdminNativeKey/AdminNativeKey[1]/adminContractId)}</get:CustomerNum> <get:Buid>11</get:Buid> <get:Address> <get:AddressItem> <get:AddressId>{fn:substring-after(data($XREFApiResp//ns0:P_XREF_OBJ[1]/ns0:P_XREF_OBJ_ITEM[1]/ns0:P_CUSTS_ACCT_REC[1]/ns0:P_CUSTS_ACCT_REC_ITEM[1]/ns0:ACTIVE_CAM_LOC),'DU')}</get:AddressId> { if (data($XREFApiResp//ns0:P_XREF_OBJ[1]/ns0:P_XREF_OBJ_ITEM[1]/ns0:P_CUSTS_ACCT_REC[1]/ns0:P_CUSTS_ACCT_REC_ITEM[1]/ns0:ACTIVE_ADD_TYPE) = 'BILL_TO')then <get:AddressType>Billing</get:AddressType> elseif(data($XREFApiResp//ns0:P_XREF_OBJ[1]/ns0:P_XREF_OBJ_ITEM[1]/ns0:P_CUSTS_ACCT_REC[1]/ns0:P_CUSTS_ACCT_REC_ITEM[1]/ns0:ACTIVE_ADD_TYPE) = 'SHIP_TO')then <get:AddressType>Shipping</get:AddressType> else() } </get:AddressItem> </get:Address> </get:Customer> </get:CustomerList> Mark the UpdateType as Update Mark the UpdateValue as 'CAMEvent_UPDATE_CONTRACT' Log the event as VALIDATION_SUCCESS(PROCESS_PUBSUB_MESSAGE) From the response, else DISCARD the message stating 'XREF_VALIDATION_FAILED' else DISCARD the message stating with EventCode - 'VALIDATION_FAILED(PUBSUB_MESSAGE_DISCARD)' MessageBody - $body/*[1] PayloadType - 'PROVIDER_ABM' mSG_HEADER1 - $MessageHeader STAGE 2: ServiceCalloutToGetCustomerService and Transform IF data($MessageHeader/ORIGINATOR_SYSTEM) = 'CMDM' and data($MessageHeader/IDENTIFIER4) = 'PUBSUB' and data($PubSubProcessFlag) = 'FALSE' then do nothing Else , Make a call to CIL ( GetCustomerService) invoking GetCustomer. IF , the response [$ Response ] contains a faultCode,<$Response/faultcode != ''> , then IF fn:contains($body/soap-env:Fault/faultcode/text(),'CACHE _ERR') , then Assign $body/soap-env:Fault/faultcode/text() = CACHEFaultCode, Raise error CACHE_ERR with Message : Request failed in Cache Lookup Get Customer Call ELSE , Assign fn:concat($body/soap-env:Fault/faultcode/text(),' ',$body/soap-env:Fault/faultstring/text(),' ',$body/soap-env:Fault/detail/mdm0:Result/mdm0:ErrorList/mdm:Error/mdm:ErrorMessage/text()) = CustomerFaultCode, Raise error CMDM_ERR with Message : Request failed in CMDM Get Customer Call ELSE , Log an event with code as GET_CUSTOMER_RESPONSE. IF data($MessageHeader/ORIGINATOR_SYSTEM) = 'CMDM' and data($MessageHeader/IDENTIFIER4) = 'PUBSUB', then, using make a response & store in Resp. BillToCustmerNumber - '' SoldToCustmerNumber - '' CILPubSubObject - $PubSubReq getCustomerResponse1 - $Response ELSE IF, data($MessageHeader/IDENTIFIER6)!='' , then using make a response & store in Resp BillToCustmerNumber - data($MessageHeader/IDENTIFIER6) SoldToCustmerNumber - data($MessageHeader/IDENTIFIER1) getCustomerResponse1 - $Response INSERT <v21:AlternateObjectKey> <v21:ID schemeID=""REQUEST_NUM"">{data($MessageHeader/IDENTIFIER7)}</v21:ID> </v21:AlternateObjectKey>   AS first child of ./v2:DataArea/v2:SyncCustomerPartyList/v21:Identification in Resp Mark an [ ./IDENTIFIER10 ] saying 'UPDATE_CONTRACTRELATIONSHIP' ELSE, using make a response & store in Resp BillToCustmerNumber - '' SoldToCustmerNumber - '' getCustomerResponse1 - $Response IF data($MessageHeader/IDENTIFIER7)!='', then INSERT <v21:AlternateObjectKey> <v21:ID schemeID=""REQUEST_NUM"">{data($MessageHeader/IDENTIFIER7)}</v21:ID> </v21:AlternateObjectKey> AS first child of ./v2:DataArea/v2:SyncCustomerPartyList/v21:Identification in Resp Mark an [ ./IDENTIFIER10 ] saying 'UPDATE_CONTRACTRELATIONSHIP' ELSE , Nothing STAGE 3: DBEventPublish IF, data($MessageHeader/ORIGINATOR_SYSTEM) = 'CMDM' and data($MessageHeader/IDENTIFIER4) = 'PUBSUB' and data($PubSubProcessFlag) = 'FALSE' Then, Do Nothing ELSE Log an event with EventCode - 'MESSAGE_INVOKED_EBS(SyncCustomerPartyEBS)' STAGE 4: PublishToSyncCustomerPartyEBS IF data($MessageHeader/ORIGINATOR_SYSTEM) = 'CMDM' and data($MessageHeader/IDENTIFIER4) = 'PUBSUB' and data($PubSubProcessFlag) = 'FALSE' Then, Do Nothing ELSE Publish to <ctx:route> <ctx:service isProxy=""true"">CustomerEBS/CustomerPartyEBS</ctx:service> <ctx:operation> SyncCustomerPartyList </ctx:operation> </ctx:route> With $Resp IV. OMEGACustomerProviderAQConsumer : STAGE-1: Retrieve Message Transport Headers and Message Payload Assign [XQuery Resource: DFPServices1.1/Messaging/xq/ ] to [MessageHeader ] Replace [ entire node ] of [ * ] in [ body ] with [ fn-bea:inlinedXML($body/sch:DFP_MESSAGE_TYPE/MSG_BODY) ] STAGE-2: DB: Event Audit [MESSAGE_DEQUEUED_FROM_BUFFER(AIA_OMAR_CUST_PROV_Q)] Log an event with EventCode - 'MESSAGE_DEQUEUED_FROM_(AIA_OMAR_CUST_PROV_Q)' STAGE-3: PublishTo SYNC CUSTOMEROMAR PROVIDERABCS If ([ $MessageHeader/IDENTIFIER2 = ('11','707') and ($MessageHeader/IMPL_NAME)!='GEARS'] Where, IDENTIFIER2 is $body//Contract/BusinessUnit) then Publish to [ SyncCustomerPartyListOMARProvABCSImpl_1 ] invoking [ SyncCustomerPartyList ] Else if ([ $MessageHeader/IDENTIFIER2 = ('3232','1435', '707')] then Publish to [ SyncCustomerPartyListOMARProvABCSImpl ] invoking [ SyncCustomerPartyList ] Else (  Do Nothing ) V. SyncCustomerPartyListOMARProvABCSImpl_1 STAGE-1: Get Message Transport Headers Assign fn-bea:inlinedXML(fn:string($inbound/ctx:transport/ctx:request/tp:headers/tp:user-header[@name='MessageHeader']/@value)) to [ MessageHeader ]. Assign $body/ns7:SyncCustomerPartyListEBM/ns7:DataArea//ns7:SyncCustomerPartyList/ns5:Identification/ns5:AlternateObjectKey/ns5:ID[@schemeID=""SALES_CHANNEL""] to [ SALES_CHANNEL ]. STAGE-2: ValidateandMetadata Assign xs:integer(xs:integer($body/v2:SyncCustomerPartyListEBM/v2:DataArea[1]/v2:SyncCustomerPartyList/v21:Identification/v21:AlternateObjectKey/v21:ID[@schemeID=""BUSINESS_UNIT_ID""])) to [ Buid ]. Assign data($body/v2:SyncCustomerPartyListEBM/v2:DataArea/v2:SyncCustomerPartyList/v21:Identification/v21:ApplicationObjectKey/v21:ID[@schemeID= ""ORIGINAL_DOMS_CUSTOMER_NUM""] ) to [ DomsCustomerNumber ]. Assign $body/* to [ Customers ]. Assign if (data($MessageHeader/MSG_TYPE) = 'DOMSCustomerMigrationType') then 'OCIMIG' else 'OCI') to [ CreatedByModule ]. Assign if (data($MessageHeader//IDENTIFIER1) !='') then (xs:integer($MessageHeader//IDENTIFIER1) mod 20) else ""0"") to [ CorrelationID ] STAGE-3: OMEGA_API_Callout IF (data($body/v2:SyncCustomerPartyListEBM/v2:DataArea/v2:SyncCustomerPartyList/v21:Note) != '') Replace [ entire node ] of [ * ] in [ body ] with XQuery Resource: RejectionManagement/OrderRejectionManagement/ Variable Names And Bindings: syncCustomerPartyListEBM1 - $body/*[1] MSG_HEADER - $MessageHeader Assign to <ctx:route> <ctx:service isProxy=""true"">RejectionManagement/OrderRejectionManagement/CreateORMMessage</ctx:service> <ctx:operation>SendErrorMessageToORM</ctx:operation> </ctx:route>  to [ Route ]. Dynamic publish to service [ $Route ] , Set Header to [ $MessageHeader ]. Log an event with EventCode - 'MESSAGE_INVOKED_ORM' and PayloadType - 'REJECTION_ABM'. IF  data($MessageHeader/IDENTIFIER7)!='' Assign <sen:InputParameters xmlns:sen="" http://xmlns.oracle.com/pcbpel/adapter/db/sp/SendErrorMessagetoORM_Relatiomship ""> <sen:P_MSG_NAME>OCIOD_CUST_WTM_01</sen:P_MSG_NAME> <sen:P_REQUEST_NO>{data($MessageHeader/IDENTIFIER7)}</sen:P_REQUEST_NO> </sen:InputParameters> to [ Test2 ]. Replace [ entire node ] of [ * ] in [ body ] with [ $Test2 ] Publish to [ SendErrorMessagetoORM_Relatiomship ] invoking [ SendErrorMessagetoORM_Relatiomship ] Assign <sen:InputParameters xmlns:sen="" http://xmlns.oracle.com/pcbpel/adapter/db/sp/SendErrorMessagetoORM_Relatiomship ""> <sen:P_MSG_NAME>OCIOD_CUST_WTM_01</sen:P_MSG_NAME> <sen:P_REQUEST_NO>{data($MessageHeader/IDENTIFIER7)}</sen:P_REQUEST_NO> </sen:InputParameters>  to [ Test3 ]. ELSE Assign [ 'TEST_ELSE' ] to [ Test ]. ELSE IF (data($MessageHeader/IDENTIFIER10)='UPDATE_CONTRACTRELATIONSHIP' and (data($MessageHeader/IDENTIFIER6)!='' or data($MessageHeader/IDENTIFIER4)='PUBSUB') then Replace [ entire node ] of [ * ] in [ body ] with XQuery Resource: OMEGACommonServices/XQ/ Variable Names And Bindings: syncCustomerPartyListEBM1 - $Customers ELSE Replace [ entire node ] of [ * ] in [ body ] with XQuery Resource: OMEGACommonServices/XQ/XformSyncCustomerPartyListEBMToOMARUSCustomerInt12ABM Variable Names And Bindings: syncCustomerPartyListEBM1 - $Customers CreatedbyModule - $CreatedByModule Assign [fn:data(fn-bea:execute-sql('jdbc.OCI.OCIDataSource', 'Rec', fn:concat(""SELECT TARGET_VALUE FROM DVM_DATA WHERE DVM_CODE ='INT1_2_DESTINATION' AND SOURCE_SYSTEM = 'OCI' AND TARGET_SYSTEM = 'OMAR' AND SOURCE_VALUE ='"",data($SALES_CHANNEL),""'""))] to [ Queue_Indicator ]. IF fn:contains($Queue_Indicator,'ABACUS') then Assign [fn:substring-after($Queue_Indicator,'ABACUS_') ] to [ Queue_Indicator ] ELSE Nothing IF data($MessageHeader//IDENTIFIER5) = 'UPDATE_ENABLED' or (data($MessageHeader//ORIGINATOR_SYSTEM) = 'DOMS' and data($MessageHeader//BUSINESS_OBJ_TYPE) = 'Customer' and data($MessageHeader//MSG_TYPE) = 'DOMSCustomerUpdate') then Dynamic publish to service IF (data($Queue_Indicator) ='INT1_US') then ( <ctx:route> <ctx:service isProxy=""false"">OMEGA_Customer/InboundAdapterServices/UpdateCustomerMDMOMARProvQueue</ctx:service> <ctx:operation>Enqueue</ctx:operation> </ctx:route> ) else if (data($Queue_Indicator) ='INT1_US1') then ( <ctx:route> <ctx:service isProxy=""false"">OMEGA_Customer/InboundAdapterServices/UpdateCustomerMDMOMARProvQueue_1</ctx:service> <ctx:operation>Enqueue</ctx:operation> </ctx:route> ) else if (data($Queue_Indicator) ='INT1_US2') then ( <ctx:route> <ctx:service isProxy=""false"">OMEGA_Customer/InboundAdapterServices/UpdateCustomerMDMOMARProvQueue_2</ctx:service> <ctx:operation>Enqueue</ctx:operation> </ctx:route> ) else if (data($Queue_Indicator) ='INT1_CA') then ( <ctx:route> <ctx:service isProxy=""false"">OMEGA_Customer/InboundAdapterServices/UpdateCustomerMDMOMARProvQueue_CA</ctx:service> <ctx:operation>Enqueue</ctx:operation> </ctx:route> ) else ( <ctx:route> <ctx:service isProxy=""false"">OMEGA_Customer/InboundAdapterServices/UpdateCustomerMDMOMARProvQueue_2</ctx:service> <ctx:operation>Enqueue</ctx:operation> </ctx:route> ) Set Header to [ $CorrelationID ] IF (data($MessageHeader/IDENTIFIER10)='UPDATE_CONTRACTRELATIONSHIP') then Set Header to [ 'INT1_REL_IMPORT ] ELSE Nothing. ELSE Dynamic publish to service [ IF (data($Queue_Indicator) ='INT1_US') then ( <ctx:route> <ctx:service isProxy=""false"">OMEGA_Customer/InboundAdapterServices/CreateCustomerMDMOMARProvQueue</ctx:service> <ctx:operation>Enqueue</ctx:operation> </ctx:route> ) else if (data($Queue_Indicator) ='INT1_US1') then ( <ctx:route> <ctx:service isProxy=""false"">OMEGA_Customer/InboundAdapterServices/CreateCustomerMDMOMARProvQueue_1</ctx:service> <ctx:operation>Enqueue</ctx:operation> </ctx:route> ) else if (data($Queue_Indicator) ='INT1_US2') then ( <ctx:route> <ctx:service isProxy=""false"">OMEGA_Customer/InboundAdapterServices/CreateCustomerMDMOMARProvQueue_2</ctx:service> <ctx:operation>Enqueue</ctx:operation> </ctx:route> ) else if (data($Queue_Indicator) ='INT1_CA') then ( <ctx:route> <ctx:service isProxy=""false"">OMEGA_Customer/InboundAdapterServices/UpdateCustomerMDMOMARProvQueue_CA</ctx:service> <ctx:operation>Enqueue</ctx:operation> </ctx:route> ) else ( <ctx:route> <ctx:service isProxy=""false"">OMEGA_Customer/InboundAdapterServices/CreateCustomerMDMOMARProvQueue_2</ctx:service> <ctx:operation>Enqueue</ctx:operation> </ctx:route> )] Set Header to [ $CorrelationID ] IF data($MessageHeader/IDENTIFIER10)='UPDATE_CONTRACTRELATIONSHIP' then Set Header to [ 'INT1_REL_IMPORT ] ELSE Nothing. Log an event with EventCode - 'MESSAGE_DELIVERED_TO_OMEGA(Customer)_APP' and PayloadType - 'PROVIDER_ABM'. --------------------------------------------------------------------------------------------------------------------------------------------------------------------- Reference Modules --------------------------------------------------------------------------------------------------------------------------------------------------------------------- 0.MDMRejectionManagmentAQConsumer STAGE 1: AssignInputfromQueue Assign  response using XQuery Resource: MDM_Customer/InboundAdapterServices/ to [ Req ] Variable Names And Bindings: xXG_FSBO_US_CUSTOMER_TYPE - $body/*[1] 2.  Assign below to [ MessageHeader ] let $msg_id := fn-bea:uuid() return <MSG_HEADER> <IMPL_NAME>FSBO</IMPL_NAME> <IMPL_VERSION>1.0</IMPL_VERSION> <SRC_MSG_ID>{$msg_id}</SRC_MSG_ID> <DERIVED_MSG_ID>{$msg_id}</DERIVED_MSG_ID> <PARENT_MSG_ID>{$msg_id}</PARENT_MSG_ID> <MSG_TYPE>CustomerRejection</MSG_TYPE> <BUSINESS_OBJ_TYPE>Customer</BUSINESS_OBJ_TYPE> <ORIGINATOR_SYSTEM>CRM</ORIGINATOR_SYSTEM> <DESTINATION_SYSTEM>OMEGA</DESTINATION_SYSTEM> <MSG_FLOW_TYPE>ASYNC</MSG_FLOW_TYPE> <MSG_TIMESTAMP>{fn:current-dateTime()}</MSG_TIMESTAMP> <IDENTIFIER1>{data($Req//get:Customer/get:CustomerNum)}</IDENTIFIER1> <IDENTIFIER2>{data($Req//get:Customer/get:Buid)}</IDENTIFIER2> <IDENTIFIER3>{data($Req//get:Customer/get:Address/get:AddressItem/get:AddressType)}</IDENTIFIER3> <IDENTIFIER4>{data($Req//get:Customer/get:Address/get:AddressItem/get:AddressId)}</IDENTIFIER4> <IDENTIFIER5></IDENTIFIER5> <IDENTIFIER6>{data($body/apps:XXG_FSBO_US_CUSTOMER_TYPE/FUNDER)}</IDENTIFIER6> <IDENTIFIER7>{data($body/apps:XXG_FSBO_US_CUSTOMER_TYPE/REQUEST_NO)}</IDENTIFIER7> <IDENTIFIER8></IDENTIFIER8> <IDENTIFIER9>MDM_Customer/OutboundAdapterServices/CustomerMDMRequestAQProducer</IDENTIFIER9> <IDENTIFIER10></IDENTIFIER10> </MSG_HEADER> 3. Log an event with EventCode - 'MESSAGE_SAVED'. 4. Publish to : <ctx:route> <ctx:service isProxy=""false"">MDM_Customer/OutboundAdapterServices/CustomerMDMRequestAQProducer</ctx:service> <ctx:operation>Enqueue</ctx:operation> </ctx:route> Variable Names And Bindings: PAYLOAD_TYPE - 'REQUESTOR_ABM' MSG_BODY - $Req MSG_HEADER - $MessageHeader STAGE 2: PublishEvent Log an event with EventCode - 'Message_Enqued_to_Requestor_Queue(AIA_MDM_CUST_REQ_Q)' 1.SyncCustomerPartyListOMARProvABCSImpl [MDM_Customer/ProviderABCS] STAGE -1: Get Message Transport Headers Assign fn-bea:inlinedXML(fn:string($inbound/ctx:transport/ctx:request/tp:headers/tp:user-header[@name='MessageHeader']/@value)) to [ MessageHeader ]. STAGE-2: ValidateandMetadata Assign data($MessageHeader//IDENTIFIER2) to [ Buid ]. Assign [ $body/* ] to [ Customers ] . Assign [ data(fn-bea:execute-sql('jdbc.DFPR11.DataSource','Rec','SELECT TO_CHAR(VALUE) FROM COHERENCEDVM WHERE APPLICATION_ID=? AND KEY =?','OCI',fn:concat('DVM_TYPE:Global_BU_CODE_TO_ORRACLEAPPS_CONTEXT;ORIG:DOMS;TGT:OMEGA;SV1:',xs:integer($Buid),';'))) ] to [ OracleAppsContextResponsibility ] STAG E-3 : ForEachStage Assign [<xxg:InputParameters xmlns:xxg="" http://xmlns.oracle.com/pcbpel/adapter/db/APPS/XXG_OMEGA_CREATE_UPD_PKG/XXG_OMEGA_CUST_CREATE_UPD/ ""> <xxg:P_CUSTOMER> <xxg:P_CUS_TBL> </xxg:P_CUS_TBL> </xxg:P_CUSTOMER> </xxg:InputParameters>] to [ AllCustomers ]. For Each [ Cust ] in [ .//v21:DataArea ] of [ body ] Indexed by [ i ] with total count in [ j ] Do ( IF ([data($body/v2:SyncCustomerPartyListEBM/v21:DataArea/v21:SyncCustomerPartyList/v21:CustomerPartyAccount/v21:Custom/v21:ActionFlag)='C' ] ) then ( Assign [ 'CREATE' ] to [ CustomerActionFlag ] ) Else ( Assign [ 'UPDATE' ] to [ CustomerActionFlag ] ) IF ([ data($Buid)=('11') ] ) then ( [ No actions are defined ] ) No actions are defined [ No actions are defined ] ) Else IF ([ data($CustomerActionFlag)='UPDATE' ] ) then ( Assign [ <ns0:OutputParameters xmlns:ns0="" http://xmlns.oracle.com/pcbpel/adapter/db/APPS_GLOBAL/XXGET_OMEGA_CUSTOMER_NUMBER/ ""> <ns0:P_OMEGA_CUSTOMER_NUMBER></ns0:P_OMEGA_CUSTOMER_NUMBER> <ns0:X_STATUS>S</ns0:X_STATUS> <ns0:X_MSG_TEXT></ns0:X_MSG_TEXT> </ns0:OutputParameters> ] to [ ResponseVar ] ) Else ( Raise Error using error code [ Error: Invalid BU ID ] with error Message *********ERROR: Invalid BU ID for the Customer EBM , Customer SEQUENCE NUMBER WILL NOT BE GENERATED************* ) IF ([ data($Buid)=('3232','707','1435') ] ) then ( Assign [ XQuery Resource: MDM_Customer/ProviderABCS/XformSyncCustomerPartyListEBMToOMARUSCustomerABM Variable Names And Bindings: syncCustomerPartyListEBM1 - <ns7:SyncCustomerPartyListEBM xmlns:ns7="" http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/CustomerParty/V2 ""> {$Cust} </ns7:SyncCustomerPartyListEBM> CreatedbyModule - 'OCI' ] to [ Customer ] ) Else ( i. Assign [ if(data($MessageHeader/MSG_TYPE) = 'DOMSCustomerMigrationType') then 'OCIMIG' else 'OCI' ] to [ CreatedbyModule ] ii. Assign [ XQuery Resource: MDM_Customer/ProviderABCS/XformSyncCustomerPartyListEBMToOMARUSCustomerABMUpdate Variable Names And Bindings: syncCustomerPartyListEBM1 - <ns7:SyncCustomerPartyListEBM xmlns:ns7="" http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/CustomerParty/V2 ""> {$Cust} </ns7:SyncCustomerPartyListEBM> CreatedbyModule - $CreatedbyModule ] to [ Customer ] ) IF ([ fn:contains(data($Customer),'DVM_NOT_FOUND') ]) then ( Raise Error using error code [ DVM_NOT_FOUND ] with error Message Customer Creation Failed due to DVM NOT FOUND ) Else IF (fn:contains(data($Customer),'CUSTOMER_ACCOUNT_INACTIVE_IN_OMEGA')] ) then ( Raise Error using error code [ CUSTOMER_ACCOUNT_INACTIVE_IN_OMEGA ] with error Message CUSTOMER_ACCOUNT_INACTIVE_IN_OMEGA ) Else IF ([ fn:contains(data($Customer),'PARTY_SITE_INACTIVE_IN_OMEGA') ] ) then ( Raise Error using error code [ PARTY_SITE_INACTIVE_IN_OMEGA ] with error Message PARTY_SITE_INACTIVE_IN_OMEGA ) Else IF ([ fn:contains(data($Customer),'CONTACT_INACTIVATED_IN_OMEGA') ] ) then ( Raise Error using error code [ CONTACT_INACTIVATED_IN_OMEGA ] with error Message CONTACT_INACTIVATED_IN_OMEGA ) Else ( No actions are defined [ No actions are defined ] ) Insert [ $Customer ] [ as last child of ] [ ./xxg:P_CUSTOMER/xxg:P_CUS_TBL ] in [ AllCustomers ]) STAG E - 4: OMEGA_API_Callout Service Callout to [ OMEGACreateUpdateCustomerOracleAppsService ] invoking [ InvokingCreateUpdatePackage ] Request Document Variable: [ AllCustomers ] Response Document Variable: [ CustomerResponse ] Set Transport Headers for[ Outbound Request ] Transport Headers Name                                                       Action jca.apps.Username                                  Set Header to [ 'SERVICE_OCI' ] jca.apps.Responsibility                            Set Header to [$OracleAppsContextResponsibility ] Response Actions: No actions are defined [ No actions are defined ] STAG E-5 : DBEventDeliveredToOMEGAAPP Publish to [ DFPLoggingService ] with EventCode - 'MESSAGE_DELIVERED_TO_OMEGA(Customer)_APP' and PayloadType - 'PROVIDER_ABM'. Replace [ entire node ] of [ * ] in [ body ] with [ $CustomerResponse ] 2. SyncCustomerPartyListOMARProvABCSImpl [OMEGA_Customer/ProviderABCS/SyncCustomerPartyListOMARProvABCS] STAGE 1: Get Message Transport Headers : Assign [ fn-bea:inlinedXML(fn:string($inbound/ctx:transport/ctx:request/tp:headers/tp:user-header[@name='MessageHeader']/@value))] to [ MessageHeader ] STAGE 2: ValidateandMetadata : Assign [xs:integer(xs:integer($body/v2:SyncCustomerPartyListEBM/v2:DataArea[1]/v2:SyncCustomerPartyList/v21:Identification/v21:AlternateObjectKey/v21:ID[@schemeID=""BUSINESS_UNIT_ID""]))] to [ Buid ] Assign [data($body/v2:SyncCustomerPartyListEBM/v2:DataArea/v2:SyncCustomerPartyList/v21:Identification/v21:ApplicationObjectKey/v21:ID[@schemeID=""ORIGINAL_DOMS_CUSTOMER_NUM""])] to [ DomsCustomerNumber ] Assign [data($body/v2:SyncCustomerPartyListEBM/v2:DataArea[1]/v2:SyncCustomerPartyList/v21:Identification/v21:AlternateObjectKey/v21:ID[@schemeID=""COMPANY_NUM""]) ]       to [ company_num ] Assign [data($body/v2:SyncCustomerPartyListEBM/v2:DataArea/v2:SyncCustomerPartyList/v21:Identification/v21:ApplicationObjectKey/v21:ID[@schemeID=""ORIGINAL_DOMS_CUSTOMER_NUM""]) ] to [ DomsCustomerNumber ] Assign [ $body/* ]to [ Customers ] Assign [ let $org := if(data($Buid)=('3232','707','11')) then         xs:integer($body/v2:SyncCustomerPartyListEBM/v2:DataArea[1]/v2:SyncCustomerPartyList/v21:Identification/v21:AlternateObjectKey/v21:ID[@schemeID=""GII_ORGID""]                     else() return $org] to [ OrgId ] Assign [ data($body/v2:SyncCustomerPartyListEBM/v2:DataArea/v2:SyncCustomerPartyList/v2:CustomerPartySellingProfile/v21:Identification/v21:ID[@schemeID=""SALESREP_NUM""]) ] to [ DomsSalesrepNum ] Assign [xs:integer(xs:integer($body/v2:SyncCustomerPartyListEBM/v2:DataArea[1]/v2:SyncCustomerPartyList/v21:Identification/v21:AlternateObjectKey/v21:ID[@schemeID=""TERRITORY_ID""])) ] to [ TerrorityID ] Assign [ data(fn-bea:execute-sql('jdbc.DFPR11.DataSource','Rec','SELECT VALUE FROM COHERENCEDVM WHERE APPLICATION_ID=? AND KEY =?','OCI',fn:concat('DVM_TYPE:Global_BU_CODE_TO_ORRACLEAPPS_CONTEXT;ORIG:DOMS;TGT:OMEGA;SV1:',xs:integer($body/v2:SyncCustomerPartyListEBM/v2:DataArea[1]/v2:SyncCustomerPartyList/v21:Identification/v21:AlternateObjectKey/v21:ID[@schemeID=""BUSINESS_UNIT_ID""]),';'))) ] to [ OracleAppsContextResponsibility ] Assign [ fn:data(fn-bea:execute-sql('jdbc.DFPR11.DataSource','Rec','SELECT VALUE FROM COHERENCEDVM WHERE KEY =?',fn:concat('DVM_TYPE:FSBO_SALES_CHANNEL;ORIG:DOMS;TGT:OMEGA;SV1:',data($Buid),';SV2:',data($company_num),';'))) ] to [ SalesChannel ] STAGE 3: Loop Through Each Customer 1. Assign below  to [ AllCustomers ] <xxg:InputParameters xmlns:xxg="" http://xmlns.oracle.com/pcbpel/adapter/db/APPS/XXG_OMEGA_CREATE_UPD_PKG/XXG_OMEGA_CUST_CREATE_UPD/ ""> <xxg:P_CUSTOMER> <xxg:P_CUS_TBL> </xxg:P_CUS_TBL> </xxg:P_CUSTOMER> </xxg:InputParameters> 2. For Each [ Cust ] in [ .//v2:DataArea ] of [ body ] Indexed by [ i ] with total count in [ j ] Do ( Log fn:concat(""Inside For Loop"", fn:current-date()) at severity level [ Info ] IF (data($MessageHeader//ORIGINATOR_SYSTEM)='BRM'), then DO Nothing ELSE IF (data($body/v2:SyncCustomerPartyListEBM/v2:DataArea/v2:SyncCustomerPartyList/v2:CustomerPartyAccount/v2:Custom/v2:ActionFlag)='C') Then, Assign [ 'CREATE' ] to [ CustomerActionFlag ] ELSE , Assign [ 'UPDATE' ] to [ CustomerActionFlag ] IF (data($MessageHeader//ORIGINATOR_SYSTEM)='BRM'), then DO Nothing ELSE IF (data($Buid)=('11')), then DO Nothing ELSE IF (data($CustomerActionFlag)='UPDATE') Then, Assign below to [ ResponseVar ] <ns0:OutputParameters xmlns:ns0="" http://xmlns.oracle.com/pcbpel/adapter/db/APPS_GLOBAL/XXGET_OMEGA_CUSTOMER_NUMBER/ ""> <ns0:P_OMEGA_CUSTOMER_NUMBER></ns0:P_OMEGA_CUSTOMER_NUMBER> <ns0:X_STATUS>S</ns0:X_STATUS> <ns0:X_MSG_TEXT></ns0:X_MSG_TEXT> </ns0:OutputParameters> ELSE IF (data($CustomerActionFlag)='CREATE' and data($Buid)=('3232','707')) Then, Assign below to [ RequestVar ] <xxg:InputParameters xmlns:xxg="" http://xmlns.oracle.com/pcbpel/adapter/db/APPS_GLOBAL/XXGET_OMEGA_CUSTOMER_NUMBER/ ""> <xxg:P_ORG_ID>{$OrgId}</xxg:P_ORG_ID> </xxg:InputParameters> Service Callout to [ GIICreateOMEGACustomerSeqNumDBService ] invoking [ GenerateOmegaCustomerSeqNumGedisAPI ] , No Response Action. ELSE IF (data($CustomerActionFlag)='CREATE' and data($Buid)=('1435')) Then, Assign (fn:data(fn-bea:execute-sql('jdbc.GEARS.GEDISDataSource','Rec','select to_char(Peru_CustomerNum_seq.nextval) from dual'))) to [ PeruCustomerNumberSequence ] And, Assign below to [ ResponseVar ] <ns0:OutputParameters xmlns:ns0="" http://xmlns.oracle.com/pcbpel/adapter/db/APPS_GLOBAL/XXGET_OMEGA_CUSTOMER_NUMBER/ ""> <ns0:P_OMEGA_CUSTOMER_NUMBER>{xs:integer($PeruCustomerNumberSequence)}</ns0:P_OMEGA_CUSTOMER_NUMBER> <ns0:X_STATUS>S</ns0:X_STATUS> <ns0:X_MSG_TEXT></ns0:X_MSG_TEXT> </ns0:OutputParameters> ELSE , Raise Error using error code [ Error: Invalid BU ID ] ERROR: Invalid BU ID for the Customer EBM , Customer SEQUENCE NUMBER WILL NOT BE GENERATED* IF (data($MessageHeader//ORIGINATOR_SYSTEM)='BRM') Then, Log (""before transform:"",fn:current-date()) at severity level [ Info ] Assign below to [ Customer ] XQuery Resource: OMEGA_Customer/ProviderABCS/SyncCustomerPartyListOMARProvABCS/XformSyncCustPartyListEBMToOMARUSCustomerABM Variable Names And Bindings: syncCustomerPartyListEBM1 - <ns7:SyncCustomerPartyListEBM xmlns:ns7="" http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/CustomerParty/V2 ""> {$Cust} </ns7:SyncCustomerPartyListEBM> Log (""after transform:"",fn:current-date()) at severity level [ Info ] ELSE IF (data($Buid)=('3232','707','1435')) Then, Assign below to [ Customer ] XQuery Resource: OMEGA_Customer/ProviderABCS/SyncCustomerPartyListOMARProvABCS/XformSyncCustomerPartyListEBMToOMARCustomerABM Variable Names And Bindings: syncCustomerPartyListEBM1 - <ns7:SyncCustomerPartyListEBM xmlns:ns7="" http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/CustomerParty/V2 ""> {$Cust} </ns7:SyncCustomerPartyListEBM> outputParameters1 - $ResponseVar ELSE , Assign below to [ CreatedbyModule] if(data($MessageHeader/MSG_TYPE) = 'DOMSCustomerMigrationType') then 'OCIMIG' else 'OCI' Assign below to [ Customer ] XQuery Resource: OMEGA_Customer/ProviderABCS/SyncCustomerPartyListOMARProvABCS/XformSyncCustomerPartyListEBMToOMARUSCustomerABM Variable Names And Bindings: syncCustomerPartyListEBM1 - <ns7:SyncCustomerPartyListEBM xmlns:ns7="" http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/CustomerParty/V2 ""> {$Cust} </ns7:SyncCustomerPartyListEBM> CreatedbyModule - $CreatedbyModule IF (fn:contains(data($Customer),'DVM_NOT_FOUND')), Then, Raise Error using error code [ DVM_NOT_FOUND ] with error Message : Customer Creation Failed due to DVM NOT FOUND ELSE IF , (fn:contains(data($Customer),'CUSTOMER_ACCOUNT_INACTIVE_IN_OMEGA')) Then, Raise Error using error code [ CUSTOMER_ACCOUNT_INACTIVE_IN_OMEGA ] with error Message : CUSTOMER_ACCOUNT_INACTIVE_IN_OMEGA ELSE IF, (fn:contains(data($Customer),'PARTY_SITE_INACTIVE_IN_OMEGA')) Then, Raise Error using error code [ PARTY_SITE_INACTIVE_IN_OMEGA ] with error Message : PARTY_SITE_INACTIVE_IN_OMEGA ELSE IF (fn:contains(data($Customer),'CONTACT_INACTIVATED_IN_OMEGA')) Then, Raise Error using error code [ CONTACT_INACTIVATED_IN_OMEGA ] with error Message : CONTACT_INACTIVATED_IN_OMEGA ELSE, Do Nothing Insert [ $Customer ] [ as last child of ] [./xxg:P_CUSTOMER/xxg:P_CUS_TBL ] in [ AllCustomers ] ) STAGE 4: OMEGA_API_Callout Service Callout to [ OMEGACreateUpdateCustomerOracleAppsService ] invoking [ InvokingCreateUpdatePackage ] REQUEST ACTIONS Log ""inside sdrvice callout to omega api:"",fn:current-date() at severity level [ Info ] Log an event with EventCode - 'CUSTOMER(CREATE_UPDATE)_REQUEST_TO_OMEGA' Log ""$AllCustomers"" CustProvide  at severity level [ Info ] RESPONSE ACTIONS Log ""in response of service callout :"",fn:current-date(),$CustomerResponse at severity level [ Info ] IF ($CustomerResponse//cust:X_ERR_MSG_TBL!=''), Then, Log ""inside error flow"", fn:current-date() at severity level [ Info ] IF (data($Buid) != '11'), Then, Assign [ $CustomerResponse//cust:X_ERR_MSG_TBL ] to [ OMARResponse ] Raise Error using error code [ Error:Error Response from OMEGACreateUpdateAPI ] with error Message : ERROR:Received Error Response from Customer CreateUpdate Pkg ELSE, Do nothing ELSE, Log ""no errro from omega"", fn:current-date(),$CustomerResponse at severity level [ Info ] Log an event with EventCode - 'CUSTOMER(CREATE_UPDATE)_SUCCESS_RESPONSE' STAGE 5: UpdateStatusToFTPResponseStage : If ([ data($MessageHeader//ORIGINATOR_SYSTEM)='BRM']) then ( [ No actions are defined ]) Else if ([ data($Buid)!=('11') ]) Assign [ XQuery Resource: OMEGA_Customer/ProviderABCS/SyncCustomerPartyListOMARProvABCS/XformCreateMessageHeaderToFTPResponseABM ] to [ ftpRequestVar ] Variable Names And Bindings: MSG_HEADER - $MessageHeader Service Callout to [ FTPResponseService_db ] invoking [ FTPResponseService ] Request Document Variable: [ ftpRequestVar ] Response Document Variable: [ ftpResponseVar ] Else ([ No actions are defined ]) STAGE 6: PublishIntoCustRespAckTbl : If ([ data($MessageHeader//ORIGINATOR_SYSTEM)='BRM'] ) then ([ No actions are defined ]) Else if ([ data($Buid)!=('11') ]) Assign [ XQuery Resource: OMEGA_Customer/InboundAdapterServices/XformSyncCustomerPartyListEBMToCustRespAckTblABM ] to [ CustRespAckVar ] Variable Names And Bindings: syncCustomerPartyListEBM1 - $body/* Publish to [ InsertIntoCustRespAckTbl ] invoking [ Enqueue ] Replace [ entire node ] of [ * ] in [ body ] with [ XQuery Resource: DFPServices1.1/Messaging/xq/CreateDfpMessageType ] Variable Names And Bindings: PAYLOAD_TYPE - 'CUSTRESPACK_ABM' MSG_BODY - $CustRespAckVar MSG_HEADER - $MessageHeader Else ([ No actions are defined ]) STAGE 7: DBEventDeliveredToOMEGAAPP : Publish to [ DFPLoggingService ] Replace [ entire node ] of [ * ] in [ body ] with [ XQuery Resource: DFPServices1.1/Instrumentation/xq/CreateDfpLogEventType ] Variable Names And Bindings: Destinations - <destns:Destinations/> EventCode - 'MESSAGE_DELIVERED_TO_OMEGA(Customer)_APP' MessageBody - $body/* PayloadType - '' mSG_HEADER1 - $MessageHeader Replace [ entire node ] of [ * ] in [ body ] with [ $CustomerResponse] 3. SyncCustomerPartyList : STAGE-1: Get Message Transport Headers Assign [fn-bea:inlinedXML(fn:string($inbound/ctx:transport/ctx:request/tp:headers/tp:user-header[@name='MessageHeader']/@value))] to [ MessageHeader ] STAGE-2: Enq to Customer OMAR Provider queue Assign [s:integer($body/v2:SyncCustomerPartyListEBM/v2:DataArea[1]/v2:SyncCustomerPartyList/v21:Identification/v21:AlternateObjectKey/v21:ID[@schemeID=""BUSINESS_UNIT_ID""]))] to [ BUID ] If ([ data($BUID) = ('11','707') and data($MessageHeader//ORIGINATOR_SYSTEM) = ('DOMS','CMDM','ILOADER','PUBSUB','CRM')]) then Dynamic publish to service ( <ctx:route> <ctx:service isProxy=""false"">OMEGA_Customer/InboundAdapterServices/ OMEGACustomerProviderAQProducer </ctx:service> <ctx:operation>Enqueue</ctx:operation> </ctx:route> ) Replace [ entire node ] of [ * ] in [ body ] with [ XQuery Resource: DFPServices1.1/Messaging/xq/CreateDfpMessageType] Variable Names And Bindings: PAYLOAD_TYPE - 'EBM' MSG_BODY - $body/* MSG_HEADER - $MessageHeader Else if ([data($MessageHeader//IDENTIFIER5) = 'DC' or data($MessageHeader//IDENTIFIER5) = 'DL'] ) [ Where, DU (DOMS US), DC (DOMS Canada) or DL (DOMS LATAM)) ] then ( Dynamic publish to service) ( <ctx:route> <ctx:service isProxy=""false"">DOMS_Customer/InboundAdapterServices/DOMSCustomerProviderAQProducerService</ctx:service> <ctx:operation>Enqueue</ctx:operation> </ctx:route>) a. Replace [ entire node ] of [ * ] in [ body ] with [XQuery Resource: DFPServices1.1/Messaging/xq/CreateDfpMessageType] Variable Names And Bindings: PAYLOAD_TYPE - 'EBM' MSG_BODY - $body/* MSG_HEADER - $MessageHeader 4. Else (Dynamic publish to service) [<ctx:service isProxy=""false"">NOVORA_Customer/InboundAdapterServices/CustomerNOVORAProviderAQProducer</ctx:service> <ctx:operation>Enqueue</ctx:operation> </ctx:route>] STAGE-3: DBEvent : If (data($BUID) = '11' and data($MessageHeader//ORIGINATOR_SYSTEM) = ('DOMS','CMDM','ILOADER','PUBSUB')) Publish to [ DFPLoggingService ] Replace [ entire node ] of [ * ] in [ body ] with [ XQuery Resource: DFPServices1.1/Instrumentation/xq/CreateDfpLogEventType} Variable Names And Bindings: Destinations - <destns:Destinations/> EventCode - 'MESSAGE_DELIVERED_TO(AIA_OMEGA_CUST_PROV_Q)' PayloadType - 'EBM' MessageBody - $body/* mSG_HEADER1 - $MessageHeader Else if ([data($MessageHeader//IDENTIFIER5) = 'DC' or data($MessageHeader//IDENTIFIER5) = 'DL'] Replace [ entire node ] of [ * ] in [ body ] with [XQuery Resource: DFPServices1.1/Instrumentation/xq/CreateDfpLogEventType Variable Names And Bindings : Destinations - <destns:Destinations/> EventCode - 'MESSAGE_SPLIT_ON_DESTINATIONS_AT_US_FOR_SyncCustomerPartyList' PayloadType - 'EBM' MessageBody - $body/* mSG_HEADER1 - $MessageHeader Else If (data($MessageHeader//IDENTIFIER5) = 'OMAR') Publish to [ DFPLoggingService ] Replace [ entire node ] of [ * ] in [ body ] with [XQuery Resource: DFPServices1.1/Instrumentation/xq/CreateDfpLogEventType] Variable Names And Bindings: Destinations - <destns:Destinations/> EventCode - 'MESSAGE_DELIVERED_TO(AIA_CUST_UPDATE_PROV_Q)' PayloadType - 'EBM' MessageBody - $body/* mSG_HEADER1 - $MessageHeader Else Publish to [ DFPLoggingService ] Replace [ entire node ] of [ * ] in [ body ] with [XQuery Resource: DFPServices1.1/Instrumentation/xq/CreateDfpLogEventType] Variable Names And Bindings : Destinations - <destns:Destinations/> EventCode - 'MESSAGE_DELIVERED_TO(AIA_NOVORA_CUST_PROV_Q)' PayloadType - 'EBM' MessageBody - $body/* mSG_HEADER1 - $MessageHeader OLD_NOTES: ATTRIBUTE1 in P_CUST_ACCT_REC maps to  <ns3:ATTRIBUTE1>{ data($DataArea/ns7:SyncCustomerPartyList/ns7:CustomerPartyAccount/ns5:Identification/ns5:AlternateObjectKey/ns5:ID[@schemeID=""DEFAULT_ORG_PRODUCT_PRICING_STYLE""]) }</ns3:ATTRIBUTE1> . This is hardcoded in XformSyncCustomerMDMPartyABMtoCustomerPartyListEBM on MDM Requestor SyncCustomerMDMRequestorABCS in both Merge and normal Xqueries as S/N. This might need a change.",False
230380436,page,current,/x/lFO7DQ,Gitlab Documentation,250,False
230380439,page,current,/x/l1O7DQ,TFS Documentation,,False
230380442,page,current,/x/mlO7DQ,FlexDeploy Documentation,250 250 250,False
230381403,page,current,/x/W1e7DQ,"Architectural Patterns, Design Patterns, Cloud, DevOps, Security and Block chain - Knowledge bits",,
231016601,page,current,/x/mQjFDQ,OMEGA CFO,,False
231016608,page,current,/x/oAjFDQ,CFO Delivery,,
231016619,page,current,/x/qwjFDQ,Print,"Automated Batch Printing There will be one automated batch printing job for each BU. This concurrent request set will deliver to the designated printer, all pending printing CFOs for the BU, regardless of its source system. The concurrent request set will be scheduled to run daily, before the start of business in the particular BU. Manual Printing The user will have the ability to manually print the CFO PDF with the Dell logo, by retrieving and printing the documents from the Dell CFO Search Screen. The Signed Transaction File can also be retrieved and printed from this screen. The user will have the ability to manually print the CFO PDF without the Dell logo, by submitting the XXEOM CFO DELIVERY concurrent program. Both the Dell CFO Search Screen and XXEOM CFO Delivery concurrent program can be accessed by the user via the CFO Print Manager, CFO Re-Print Manager and any other CFO Inquiry profile, for the particular country. Default printers The generic printers are used for any automated job run. The delivery job runs will occur at night-time following an auto invoice run. Once complete, the auto invoice run will generate a business event for the created batch or invoice. The information on this business event is defined within the TA.100 Architecture Subsystems Proposal. The automated job run will also pick up any manually entered transactions which have flagged as complete and ready for delivery by the relevant business events used in manual transaction processing. The information on these business events is defined within the TA.100 Architecture Subsystems Proposal. No transaction should be processed for delivery unless at the time of the scheduled evening processing it is in complete status. Note : Business process allows the user the ability to complete and incomplete transactions (several times sometimes) during the day up until the point of document creation/delivery. Note to development: If the 11i seeded Receivable complete/incomplete events will be used by the development team to achieve the triggering of CFO processing (transactions will be extracted, converted to XML format and sent as a message to the CFO server for processing) . Special attention must be paid to ensure manual transactions are only processed if they are in complete status at the time of the scheduled evening processing. Set Up Default printers will be stored in the applications as a profile ( e.g. DELL_CFO_CREDIT_PRINTER1 and DELL_CFO_CREDIT_PRINTER2 ) for the responsibility. Selectable printers These are the printers that will be used to print the CFO when a user runs a selected print. The printers will be stored within a value set DELL_CFO_PRINTERS_ALL specific to the Organisation. These printers will have to be set up on CUPS and will also in parallel be set up as application printers so that any business user has the ability to print copies of PDFs on the printer next to them, which will not be a dedicated printer. Multiple Print Delivery for BU’s – CR 651 Today CFO is not capable of delivery invoices to more than one location (either for a sharefolder, an external account or a printer). We need to ensure that Business is aware that this change request is applicable to the normal CFO Delivery process. If suppression/email is used, than multiple delivery will be replaced by suppression/email. Invoices to Logistic are for custom clearance purposes and to be attached with goods. Invoices printed in Finance will be sent directly to the distributor/customer for goods clearance at local custom and payment process. Change: Generate multiple print of original CFO (Invoice) Generate CFO to multiple print locations Multiple Delivery for BUs There are different Delivery methods used for CFO delivery. Here are the three different Business cases below. Business Cases Case 1 Delivery C 1 to n sharefolder(s) (WebDAV) And/or 1 to n DTX Case 2 Delivery P 1 to 2 printers Note: The user must specify DELIVERY_METHOD = P and as long as PRINTER_NAME2 is filled, CFO will be sent to 2 printers. The included number of copies will be determined at customer level and is common to both printers. Case 3 Delivery C + P 1 to n sharefolder(s) (WebDAV) And/or 1 to n DTX And 1 Printer Note: Currently, C and P delivery methods are allowed to be mixed. If you set Printer2 parameter while the delivery method=C, then the delivery will be done to both C and Printer2. Issues on Multiple Deliveries: We may have partial success (at least one delivery is successful) Or Complete failure (all deliveries failed). If either case occurs, then the business must be prepared to regenerate the new original invoices. Removing “COPY” Watermark from Printer 2 To ensure that CFOs are printed without the “COPY” watermark, CFO must include a new parameter in BU Config files called Printer2_ORIGINAL= Y. It will be used along with existing parameter Printer2_copies and it will be entered at BU level. Parameters for New Delivery Field When New Delivery = Y & Delivery Method can be C or P For new requirements, a new config parameter may be introduced as Printer2.ORIGINAL=Y which will allow to disable the COPY watermark for document copies which are sent to printer2. When New Delivery = F & Delivery Method can be C or P The new config parameter (Printer2.ORIGINAL=Y) should be taken into account when executing the delivery job in this mode i.e. output on both printer 1 and printer 2 should come out as original. When New Delivery = N & Delivery Method can be C or P In this mode all documents are considered as copies and will be watermarked with COPY word. And Printer2.ORIGINAL=Y should not affect this mode. Invoice printing sequence – CR 633 Currently CFO is not printed by sorting in accordance to sub-channel and payment term. As a result resources need to be allocated to manually sort the invoices by sub-channel and payment term to determine next course of action. Manual separation will result in error hence delay in delivery of CFO / lost in transit. Thus impacting AR collectivity and liquidity result. Therefore, CFO must have the ability in Omega to sort the Invoice CFO printout by sub-channel and payment term. Setup Add new parameter in config_file for specific BU. Invoice.BATCH_GROUP_BY_PAY_TERMS=Y It can be configured by BU specific level. The required business units are as below MY SG HK XM AU NZ KR If Invoice.BATCH_GROUP_BY_PAY_TERMS=Y Then The invoice will be grouped by payment term before printing Else The invoice will be printed as per current logic. To have any specific sub channel to be printed first the printing job can be scheduled with that particular sub channel. Multi batches (different sub-channel) or single batch (not specific sub-channel) will be ordered by payment term. Data Extraction Payment term will be extracted from transaction level. Report Sub- channel, payment term and number of copies of the invoices will be added into a new report type= (Delivery_by_Pay_term). The new report is similar with the existing report as below. Pay_term and sub-channel will be added into the report. The transactions will be grouped by pay_term. Assumptions (Features explicitly not handled by CFO) The sequence of sub-channel and the sequence of payment term are not in the scope. CUPS - Overview CUPS (an acronym for C ommon U nix P rinting S ystem) is a modular printing system for Unix-like computer operating systems which allows a computer to act as a print server . A computer running CUPS is a host that can accept print jobs from client computers, process them, and send them to the appropriate printer. The print job follows the following process: Application (ausomegaprdap05, ausomegaprdap06, ausomegaprdap07, ausomegaprdap08) CUPS print queue on ausomegaprdap05, ausomegaprdap06, ausomegaprdap07 or ausomegaprdap08 TCP/IP Print Service (running on Windows print server, usually at printer location, e.g. \\mtp2k3print or \\brkasprint02 ) Windows print queue (e.g. \\mtp2k3print\brkga04 ) The printer! If the Windows print server or TCP/IP Print Service is down the print job should stay in the CUPS queue until they become available. If the printer itself is down the print job should stay in the Windows print queue until it is available. In theory, no print jobs should get lost. CUPS - How to view the printers on CUPS You can view the printers on CUPS by accessing the following links: http://ausomegaprdap05.us.dell.com:631/printers/ http://ausomegaprdap06.us.dell.com:631/printers/ http://ausomegaprdap07.us.dell.com:631/printers/ http://ausomegaprdap08.us.dell.com:631/printers/ You will see something like this.   Here is a screenshot of one of the printers on CUPS: Individual transactions can be seen on CUPS by clicking on the printer. Here you can see an example of a MX invoice on the printer queue. CUPS - How to setup a printer on CUPS When requesting a printer to be set up on CUPS, you should provide information as follows: CUPS(Linux) Print Server: http://ausqcdevap03.us.dell.com:631/printers/ CUPS Printer Name: PENIT10_Tray1 Windows Print Server: \\ m1vmprint01.pen.apac.dell.com Windows Print Queue Name: <REQUIRED> PENIT10 on \\ m1vmprint01.pen.apac.dell.com IP Address: 10.99.10.184 Printer Location: <REQUIRED> APCC - PENANG - IT (as in Printer Properties) The printer is physically located in Penang Dell 1st Floor, near to the cabinets in IT area Additional information: <NOT REQUIRED> We would use Tray 1 as Printer 1 as in Document printing feature A4 for Q2C R2.X release If a second tray exists and is required for printing, a separate request should be submitted to set this up also. Here is an example of a request to setup tray 2: CUPS(linux) Print Server: http://ausqcdevap03.us.dell.com:631/printers/ CUPS Printer Name: PENIT10_Tray2 Windows Print Server: \\ m1vmprint01.pen.apac.dell.com Windows Print Queue Name: <REQUIRED> PENIT10 on \\ m1vmprint01.pen.apac.dell.com IP Address: 10.99.10.184 Printer Location: <REQUIRED> APCC - PENANG - IT (as in Printer Properties) The printer is physically located in Penang Dell 1st Floor, near to the cabinets in IT area Additional information: <NOT REQUIRED> We would use Tray 2 as Printer 2 as in Document printing feature A4 for Q2C R2.X release In addition to the above information, once the printer is setup, you should confirm that the printer driver is set up as follows. See example mail attached of a printer issue that occurred when the printer driver was not setup correctly: CUPS - Support CUPS in the production environment is supported by Novora Support Admins <NovoraSupport Admins@Dell.com > (unless it’s an OS or server hardware issue, in which case, Server Support should be contacted.) Attached are two training documents created to aid Support: Note: CUPS in the test environment is supported by the Omega Environment team and the non-production DBA team. Printing Strategy - INC000016728272 - TAS000000610005 Background : For PL CFO Credit Memo, ONE set of ORIGINAL copy and TWO set of WATERMARK copies will be required. However, incident was raised due to only ONE set of WATERMARK has been printed. Profile Setups : Dell CFO Credit Printer1 Copies = 1 (ORIGINAL copy) Dell CFO Credit Printer2 Copies = 2 (WATERMARK copy) Outputs: ONE set ORIGINAL copy ONE set WATERMARK copy [Expected: TWO set WATERMARK copy as per Profile Setups] This issue is intermittent, and being found out from CFO log that it is working properly when the CFO is being printed using Local Printing strategy. Not Working (printed using CUPS) Working (printed using Local Printing) Printing Strategy can be setup in BU CFO config file: #PRINTING_STRATEGY= C, X PRINTING_STRATEGY=L where L, C, X means printing strategy, not the printer location/type L - local printing (which use Java API for printing). C - uses Linux CUPS to perform the printing.. X- uses the BI XML publisher functionality to perform the printing (rarely used) * By default in CFO, if not specified in CFO config, Local printing (L) strategy will be used * However, the printing strategy used in system is dynamically changed between Local Printing & CUPS Resolution : In this incident for Poland, PRINTING_STRATEGY=L has been specified in PL_CFO.conf file, and the WATERMARK copy for Printer2 has been printed accordingly as per Profile Setup (Dell CFO Credit Printer2 Copies)",False
231021313,page,current,/x/ARvFDQ,OMEGA - GitLab Project List with FlexDeploy Project Mapping,GITLAB PROJECT(s) S.No. ID Name Project Path FlexDeploy Project Path 1 35645 XX_CFO https://gitlab.dell.com/gcbs/omega/XX-CFO.git FlexDeploy / Omega / CFO / CFO_EBS_GIT 2 34966 OMEGA_TOP https://gitlab.dell.com/gcbs/omega/OMEGA-TOP.git For Reference Only 3 34965 SEAL https://gitlab.dell.com/gcbs/omega/SEAL.git FlexDeploy / Omega / SEAL_DEP 4 34962 CCE https://gitlab.dell.com/gcbs/omega/CCE.git FlexDeploy / CCE_GIT 5 34961 EBI_Finance https://gitlab.dell.com/gcbs/omega/EBI-Finance.git FlexDeploy / Omega / Common Modules / Common Modules EBS _GIT 6 34960 STAT https://gitlab.dell.com/gcbs/omega/STAT.git For Reference Only 7 34958 ITG_TOP https://gitlab.dell.com/gcbs/omega/ITG-TOP.git For Reference Only 8 31449 POC https://gitlab.dell.com/gcbs/omega/poc.git For SCM Team Usage Only 9 30539 XXSA https://gitlab.dell.com/gcbs/omega/XXSA.git FlexDeploy / Omega / Payments / Payments_EBS_GIT 10 30537 XXG https://gitlab.dell.com/gcbs/omega/XXG.git FlexDeploy / Omega / Common Modules / Common Modules EBS _GIT 11 30534 XXEOM https://gitlab.dell.com/gcbs/omega/XXEOM.git FlexDeploy / Omega / Common Modules / Common Modules EBS _GIT 12 30525 XX_UTL https://gitlab.dell.com/gcbs/omega/XX-UTL.git FlexDeploy / Omega / Common Modules / Common Modules EBS _GIT 13 30508 XX_STD https://gitlab.dell.com/gcbs/omega/XX-STD.git FlexDeploy / Omega / Common Modules / Common Modules EBS _GIT 14 30504 XX_PAYMENTS https://gitlab.dell.com/gcbs/omega/XX-PAYMENTS.git Project yet to be created. 15 30502 XX_ONEAR https://gitlab.dell.com/gcbs/omega/XX-ONEAR.git FlexDeploy / Omega / Account Receivables / AR_EBS_GIT 16 30499 XX_IBY_WL https://gitlab.dell.com/gcbs/omega/XX-IBY-WL.git FlexDeploy / Omega / Payments / Payments_EBS_GIT 17 30496 XX_IBY https://gitlab.dell.com/gcbs/omega/XX-IBY.git FlexDeploy / Omega / Payments / Payments_EBS_GIT 18 30491 XX_GL https://gitlab.dell.com/gcbs/omega/XX-GL.git FlexDeploy / Omega / Accounting / GL_GIT 19 30487 XX_FO https://gitlab.dell.com/gcbs/omega/XX-FO.git This is old repository for OM projects. Please don't use. For Reference Only. 20 30485 XX_COLL https://gitlab.dell.com/gcbs/omega/XX-COLL.git FlexDeploy / Omega / Account Receivables / AR_EBS_GIT 21 30484 XX_CFO_WL https://gitlab.dell.com/gcbs/omega/XX-CFO-WL.git FlexDeploy / Omega / CFO / CFO_EBS_GIT 22 30462 XX_CASHAPPS https://gitlab.dell.com/gcbs/omega/XX-CASHAPPS.git FlexDeploy / Omega / Payments / Payments_EBS_GIT 23 30461 XX_ARDS https://gitlab.dell.com/gcbs/omega/XX-ARDS.git FlexDeploy / Omega / ARDS / ARDS_GIT 24 30459 XX_ARCH https://gitlab.dell.com/gcbs/omega/XX-ARCH.git FlexDeploy / Omega / Common Modules / Common Modules EBS _GIT 25 30458 MANUAL_SCRIPTS https://gitlab.dell.com/gcbs/omega/MANUAL-SCRIPTS.git FlexDeploy / Omega / Common Modules / Common Modules EBS _GIT 26 30455 JAVA_TOP https://gitlab.dell.com/gcbs/omega/JAVA-TOP.git FlexDeploy / Omega / Common Modules / Common Modules EBS _GIT 27 30341 INTERFACE_TOP https://gitlab.dell.com/gcbs/omega/INTERFACE-TOP.git FlexDeploy / Omega / Reporting / Reporting_GIT 28 30339 XX_AR https://gitlab.dell.com/gcbs/omega/XX-AR.git FlexDeploy / Omega / Account Receivables / AR_EBS_GIT 29 33812 INT17 https://gitlab.dell.com/gcbs/omega/order_management/bo/int17.git FlexDeploy / Omega / Order Management / OM_EBS_GIT 30 30498 XX_OM https://gitlab.dell.com/gcbs/omega/order_management/bo/XX-OM.git FlexDeploy / Omega / Order Management / OM_EBS_GIT 31 33782 INT1_2 https://gitlab.dell.com/gcbs/omega/order_management/fo/int1_2.git FlexDeploy / Omega / Order Management / OM_EBS_GIT 32 33779 INT_APPS_GLOBAL https://gitlab.dell.com/gcbs/omega/order_management/fo/int_apps_global.git FlexDeploy / Omega / Order Management / OM_EBS_GIT 33 33777 INT_Others https://gitlab.dell.com/gcbs/omega/order_management/fo/int_others.git FlexDeploy / Omega / Order Management / OM_EBS_GIT,
231021332,page,current,/x/FBvFDQ,ONEAR - GITLAB Project List,,False
231032327,page,current,/x/B0bFDQ,Order Change,"Order Change – Application Support Document Author: Gayathri Kambhampati [Gayathri_Kambhampati@ Dell.com ] ___________________________________________________________________ Order Change functionality ABACUS will get Order change request from GCM. Order change is allowed until 200 included ABACUS sends the Order change to OMEGA/OFS based on Order change type & status When ABACUS sends Order change to OMEGA, then OMEGA will acknowledge with OC event When ABACUS sends Order change to OFS, then OFS will acknowledge with either 250 accepts/reject. High level Flow: Technical Details: Order Change from GCMP: GCM publishes order change request on IBM MQ. Project name: GCM-ChangeRequestProducer Consumes message from IBMMQ and publishes on RMQ Queue Details: hostname = SOMPRDSU01-cname.us.dell.com port =6701 queueManager =SOMPRDSU01 channel =SOM.OCI.09.TLS qName =CL.GCM.DAO_ORDERCHANGE_REQ.DGT.OCI dqName =QL.GCM.DAO_ORDERCHANGE_REQ_BOQ.DGT.OCI ChangeRequestConsumer : XQueryEngineActor : To transform the request payload to ABACUS intermediate payload format ValidateOrderChangeActor : If the order change request is not valid then we will reject the Order Change request and send the response to GCMP. Else resume the flow. GetOrderStatusDBActor : Call OMEGA proc by passing order number & BUID and get the order current status. OMEGA proc name: APPS.XXG_SALES_ORDER_PKG.XXDELL_GET_ORDER_STATUS GOSSEnrichmentActor: if type name contains SHIPPING_CHARGE then call GOSS service to enrich the order and get FreightSKUDetails. ChangeRequestActor: Process based on order change type & order status. Persist all the details to Reddis (Contact reference we get from Customer Service call, freightSKUDetails we get from Order enrichment from GOSS/OrderStore, Shipping method code we get from int4 look up etc..) If the OrderChange request is eligible to send to OFS, Publish message to OFS RabbitMQPublishActor: Publish int12 message on RMQ abacus.ORDER_IMPORT_INT12 GCMChangeRejectNotifyActor : send rejection message to GCM when Order change request is not valid End user customer number is missing in the request Order status is above 200 OMEGA order hold package returns failure message ABACUS Logging: Identifier1: OrderNumber, Identifier2: BUID, Identifier3: DPID, Identifier4: OrderChange Consuming from IBM MQ & publishing to RMQ Consumer audit logs: Order Change Response from OFS High level Flow: Technical Details: Order Change response from OFS: OFS publishes order change response on IBM MQ. Project name: OFSUS-CHANGERESPONSE-PRODUCER Consumes message from IBMMQ and publishes on RMQ Queue Details: hostname = SOMPRDSU01-cname.us.dell.com port =6701 queueManager =SOMPRDSU01 channel =SOM.OCI.09.TLS qName = CL.OFS.OFS2OCI_RESPONSE.DGT.OCI dqName = QL.OFS.OFS2OCI_RESPONSE_BOQ.DGT.OCI RMQ = abacus.OFSUS_RESPONSE_MQ ABACUS Logging: Identifier1: OrderNumber, Identifier2: BUID, Identifier3: DPID, Identifier4: 250 Identifier6: ACCEPTED/REJECTED 250- ACCEPTED 250- REJECTED Common Endpoints: Rabbit MQ: http://abacus-services.us.dell.com/rabbitmq ABACUS Dashboard: http://abacus-services.us.dell.com/abacus-dashboard/#/ Marathon URL : http://abacus-services.us.dell.com/marathon/ui/#/apps Mesos URL : http://ausplabaap02.us.dell.com:5050/#/ Redis URL: https://abacus-redis-api.ausmpc.pcf.dell.com/getData/625719728_11_OrderChange Git path: https://gitlab.dell.com/gcbs/ordermanagement/om-gateway/gcm/GCM-ChangeRequestProducer https://gitlab.dell.com/gcbs/ordermanagement/om-gateway/gcm/GCM-ChangeRequestConsumer https://gitlab.dell.com/gcbs/ordermanagement/om-gateway/order-import/omegaint12provider https://gitlab.dell.com/gcbs/ordermanagement/om-gateway/order-fulfillment/ofs/us/OFSUS-CHANGERESPONSE-PRODUCER https://gitlab.dell.com/gcbs/ordermanagement/om-gateway/order-fulfillment/ofs/us/OFSUS-RESPONSE-CONSUMER Reddis URL: Old: https://abacus-redis-api.ausmpc.pcf.dell.com/getData/634373756_11_OrderChange New : https://abacus-redis-api.om.pcf.dell.com/getData/914188577_11_OrderChange",
231035413,page,current,/x/FVLFDQ,India E-Invoicing,,False
231041055,page,current,/x/H2jFDQ,AR TDD ATDD UTDD Process,Note that the compliance report can be retrieved from URL say eg. https://wig.p1.pcf.dell.com/report?SP=eDellPrograms\FY21\PI1\SP01-Jan29 by changing the year and sprint in the URL. TDD story: Manual tested as automation is either not done or cannot be automated due to various reasons: Story 9021049 : [COLL_UI] Invoice View - Closed Receipts Retrieving - AR Service and Test UTDD Story: Automated story Story 8946759 : [COLL_UI] Invoice View - Invoice Mail To - Angular Component-prompt message on UI,False
231413507,page,current,/x/AxfLDQ,Omega CI/CD Processes,,
231413511,page,current,/x/BxfLDQ,Partial Build Creation Process,250 This video contains the steps on how to create FlexDeploy partial build along with how to select required GIT commit version & how to sequence the files. Please use the below subtitle file with the video. 250,False
231413580,page,current,/x/TBfLDQ,Assigning Workitem for Deployment,,
231413584,page,current,/x/UBfLDQ,Raising Merge Request on Gitlab,250,False
231413587,page,current,/x/UxfLDQ,Git Push via Command Line,,
231413590,page,current,/x/VhfLDQ,How to get Gitlab Project Access,,False
231413594,page,current,/x/WhfLDQ,GIT Branch vs TFS Branch,,
231413597,page,current,/x/XRfLDQ,TFS Workitem Association while doing a GIT Commit,"250 Please use the below format in your commit message while committing your code to GitLab. This will reflect your commits as ""Hyperlinks"" under TFS work items. Format: TFS#WorkItemID; Example: TFS#12345; >> git commit -m "" TFS#1234567 - Initial Commit"" This webhook is added to all projects in Gitlab ( https://gitlab.dell.com/gcbs ) for TFS workitem (Story/Defect) association. For multiple TFS workitem association please add the commit message as - >> git commit -m "" TFS#1234567 TFS#5678987 TFS#1233211 - Initial Commit""",False
231413606,page,current,/x/ZhfLDQ,Security Scan,,
231413632,page,current,/x/gBfLDQ,FORTIFY PORTAL ACCESS,250 Updated JIRA Link - https://jira.sro.dell.com:8443/servicedesk/customer/portal/19/create/181,False
231413638,page,current,/x/hhfLDQ,TFS Privileged Access Control (PAC) Request,,
231413645,page,current,/x/jRfLDQ,How to Check Logs on FlexDeploy,250,False
231416828,page,current,/x/-CPLDQ,Gitlab CI/CD - Project Pipelines,S.No. Application Condition Pipeline Link 1 OMEGA PL/SQL Projects https://gitlab.dell.com/gcbs/omega/scm/devops/-/blob/9d1973cba6d1e0e003f195d3edb051d20c4b1ba4/Gitlab_CICD_YML/omega.yml 2 Settlement VM Projects https://gitlab.dell.com/gcbs/accountreceivables/settlement/settlement/-/blob/23f3af04466425ce2291c5fdc8f5bc0ee4564a59/.gitlab-ci.yml 3 Settlement PCF Projects https://gitlab.dell.com/gcbs/accountreceivables/settlement/v3resttemplate/-/blob/055f9fe81c27dae7f77257d2c0c7b5aa30a0ca3f/.gitlab-ci.yml 4 ARSTORE/ ARGTWAY VM Projects With Source Folder (Source/src) https://gitlab.dell.com/gcbs/accountreceivables/arstore/onearservicelayer/feedbackform/restservices/-/blob/5b75b8d51d33733abc083a99a0a84930496b0f4e/.gitlab-ci.yml 5 ARSTORE/ ARGTWAY VM Projects With-out Source Folder (src) https://gitlab.dell.com/gcbs/accountreceivables/arstore/onearservicelayer/customerservices/osbpubsubcustomerflow/mdmkafkarejectionmanagmentaqproducer/-/blob/10284e276dd198892a6de328cd7105f83abdab92/.gitlab-ci.yml 6 ARSTORE/ ARGTWAY PCF Deployment Projects with Deploy & Source Folder https://gitlab.dell.com/gcbs/accountreceivables/ar-gateway/gopcustomerupdateservice/-/blob/aae32447b73869b4711f038e91c4d2620b0ebb67/.gitlab-ci.yml 7 ARSTORE/ ARGTWAY PCF Deployment Projects with-out Deploy & Source Folder https://gitlab.dell.com/gcbs/accountreceivables/billingui/portalbillinguiservices/-/blob/28276161fe9e00b609b8d65b8b68cbfb69172af6/.gitlab-ci.yml 8 Collections UI PCF Projects https://gitlab.dell.com/gcbs/accountreceivables/ar-collections/ar-collections-invoice-service/-/blob/master/.gitlab-ci.yml 9 MFM PCF Projects https://gitlab.dell.com/gcbs/accountreceivables/myfinancials/myfinancials-invoice-service/-/blob/master/.gitlab-ci.yml VM https://gitlab.dell.com/gcbs/accountreceivables/arstore/onearservicelayer/selfservices/ar-myfinancials-omega-service/-/blob/master/.gitlab-ci.yml 10 GIV PCF Projects https://gitlab.dell.com/gcbs/accountreceivables/giv/giv-core-service/-/blob/giv-core-service-release-fy22-1202-blueprint/.gitlab-ci.yml 11 VERITAS PCF Projects https://gitlab.dell.com/om/veritas/veritas_services_web_java/-/blob/master/.gitlab-ci.yml,
231421387,page,current,/x/yzXLDQ,Creating Adhoc Deployment Request,,False
231423828,page,current,/x/VD-LDQ,Release Setup Retrofit,,
231433360,page,current,/x/kGTLDQ,Products Space - ATM,,False
231435183,page,current,/x/r2vLDQ,Team Resources,,
231435185,page,current,/x/sWvLDQ,Team Meetings & Collaborations,,False
231435187,page,current,/x/s2vLDQ,Artifacts,Executive/VP level presentation of ATM value proposition: 250,False
231435264,page,current,/x/AGzLDQ,Collections UI,,False
242321844,page,current,/x/tIlxDg,Product Debrief - PCF Migration,,
242330050,page,current,/x/wqlxDg,Order Import Transition,,False
242812038,page,current,/x/hgR5Dg,Decisions,,False
243052465,page,current,/x/sa98Dg,Smoke flows Ownership Framework and Description,,False
247400211,page,current,/x/Ewe-Dg,DB Details for Collections UI,,
248613157,page,current,/x/JYnRDg,Problem Workspaces,This is meant as a workspace to document current experiments that are in progress by the Application Transformation & Modernization team.,False
251956939,page,current,/x/y44EDw,Custom Vault API,,
251958030,page,current,/x/DpMEDw,PRE-COGS Architecture,"PRE-COGS is a product ,created to do Blue/Green comparison and Legacy/Modern stack data comparison with live production orders. As most of the corner cases cannot be catch in NON Prod environments , parallel prod testing is must. Legacy Architecture Limitations: 1) Only certain limit of orders can be compared. 2) You need to define the time range for orders to compare, it will pull the orders of that time range from salup, and es do comparison and then log in table, hence this is poller which has to be keep on running. 3) Also in case of live order comparision , we run the query in salup, wait for logs to come in elasticsearch and then run comparision. Current Architecture To implement the change Below points need to be done from developer perscpective Each consumer /producer application irrespective the starting point of it have a standard endpoint -> this will be used by pre cogs for old order comparision. Each producer code publish to exchange now. Each application will have manifest Precogs ,file which will point to this queue, and new container be spinned up from this. Once the testing is over , restart the application changing the manifest file and destroy the old container. Add condition in code i.e. if queue name is Precogs don't send message to endpoint only do logging. .",False
252810149,page,current,/x/pZMRDw,RDD Response,,
253200756,page,current,/x/dIkXDw,DOMS Order Import,"Architecture We get DOMS WIP Order/Services order in OMEGA from 3 sources today 1) OMEGA ILOADER 2) AXIS/DOMS- via Astra 3) ARDS AXIS/DOMS via Astra : As mentioned in above diagram ASTRA sends multiple events coming from AXIS to abacus.GOSS_DOMS_EVENT_QUEUE from which abacus app- ABACUSDOMSEventConsumer , consumes the same and on the basis of status i.e MN and HeldCode IO the same event is send to abacus.DOMS_ORDER_IMPORT queue. doms-order-import components take the data from queue and call INT4 Lookup(to get lookup details), Customer Component(Get Customer Service), OMEGA(to fetch funder customer details in case of DFS payment term), AXIS Order detail API and do certain validation. If all validations are succeded we send the transform data to abacus.ORDER_IMPORT_INT12_DOMS queue ,else its send to abacus.ORDER_IMPORT_ORM queue. In case of success scenario OmegaINT12Provider get the info from queue, call axis api and form the INT12 object and send the same to INT12 US queues on the basis of sales channel. OMEGA ILOADER All the order coming from OMEGA DOMS Iloader gets in XXG.ONDEMAND_ORD_QUEUE in omega.ABACUS consumes same in application dome-ondemand-order-import and insert the same in abacus.DOMS_ORDER_IMPORT . Rest the flow is same mentioned in point 2,3,4 above ARDS Services  DOMS order from ARDS need to be imported in OMEGA coming ClaimsAdjustmentMaestroReqConsumer gets inserted into abacus.DOMS_ORDER_IMPORT , Rest is same mention in 2,3,4 Below are the important queues and apps deployed in marathon Source Queue Name Consumer XXG.XXG_ONDEMAND_ORD_QUEUE dome-ondemand-order-import OMEGA ILOADER abacus.DOMS_ORDER_IMPORT doms-order-import ABACUS abacus.ORDER_IMPORT_INT12_DOMS omegaint12provider-doms ABACUS abacus.ORDER_IMPORT_ORM order-import-orm ABACUS Important URL Name URL Request Comments AXIS OrderDetail API https://eis-aia.us.dell.com/api/axis/oci/servicehandler {""bu_id"": ""11"",""order_number"": ""542895844""} Int4Lookup https://int4-om-cache-lookup-json.om.pcf.dell.com/data/int4 { ""P_LOOKUP_TYPE"":""XXG_ORDER_TYPE_ITEM_MAPPING"", ""P_BU_ID"":""11"" } List of Lookup Types: DELL_CFO_PRODUCT_PRICE_STYLE , DELL_FSBO_PAYTERM_MAP , XXG_FAKE_ORDER_STATUS_TO_CLOSE , XXG_ORDER_CHARGES_SKU_MAP , PROMOTION_CODE , ORDER_TYPE , XXG_ORDER_TYPE_ITEM_MAPPING , XXG_ORDER_TYPE_DPS_MAPPING , DELL_CFO_LINE_PRICE_ROLLUP , XXG_CATALOG_ID_ORG_MAPPING , TAX_REASON , MWD_CODE , XXG_ORDER_TYPE_FLAG , DELL_MULTI_PAYMENT_TERM , DELL_BUSINESS_MIX_CODE Customer Service : https://abacus-services.us.dell.com/GetCustomer { ""OrigSystem"": ""DOMS"", ""GetCustomer"": { ""CustomerList"": [{ ""CustomerNumber"": 72847108, ""BUID"": 11, ""AddressItem"": { ""AddressType"": ""Billing"", ""AddressId"": ""0"" } }, { ""CustomerNumber"": 72847108, ""BUID"": 11, ""AddressItem"": { ""AddressType"": ""Shipping"", ""AddressId"": ""0"" } }] } } LOGGING Sample order Number AXIS: 257055522 Sample order Number ILOADER: 254556399 GITLAB PATH https://gitlab.dell.com/gcbs/ordermanagement/om-gateway/order-import/doms-order-import",False
253202364,page,current,/x/vI8XDw,Veritas technical flow,,
253202799,page,current,/x/b5EXDw,ABACUS Servers,,False
253202801,page,current,/x/cZEXDw,Non-PROD,,
257493221,page,current,/x/5QhZDw,Design Patterns,"Design patterns are solutions to recurring problems; guidelines on how to tackle certain problems. Types of Design Patterns Creational Structural Behavioral Creation Design Pattern: Creational patterns are focused towards how to instantiate an object or group of related objects. Simple Factory Real world example Consider, you are building a house and you need doors. You can either put on your carpenter clothes, bring some wood, glue, nails and all the tools required to build the door and start building it in your house or you can simply call the factory and get the built door delivered to you so that you don't need to learn anything about the door making or to deal with the mess that comes with making it. In plain words Simple factory simply generates an instance for client without exposing any instantiation logic to the client Programmatically: Define interface → Create class, implement the interface methods, Create a factory class and call the class created before. First of all we have a door interface and the implementation interface Door { public function getWidth (): float ; public function getHeight (): float ;
} class WoodenDoor implements Door { protected $width ; protected $height ; public function __construct ( float $ width , float $ height )
    { $ this -> width = $ width ; $ this -> height = $ height ;
    } public function getWidth (): float { return $ this -> width ;
    } public function getHeight (): float { return $ this -> height ;
    }
} Then we have our door factory that makes the door and returns it class DoorFactory { public static function makeDoor ( $ width , $ height ): Door { return new WoodenDoor ( $ width , $ height );
    }
} And then it can be used as // Make me a door of 100x200 $ door = DoorFactory :: makeDoor ( 100 , 200 ); echo 'Width: ' . $ door -> getWidth (); echo 'Height: ' . $ door -> getHeight (); // Make me a door of 50x100 $ door2 = DoorFactory :: makeDoor ( 50 , 100 ); When to Use? When creating an object is not just a few assignments and involves some logic, it makes sense to put it in a dedicated factory instead of repeating the same code everywhere. Factory Method Real world example Consider the case of a hiring manager. It is impossible for one person to interview for each of the positions. Based on the job opening, she has to decide and delegate the interview steps to different people. In plain words It provides a way to delegate the instantiation logic to child classes. Programmatic Example Taking our hiring manager example above. First of all we have an interviewer interface and some implementations for it interface Interviewer { public function askQuestions ();
} class Developer implements Interviewer { public function askQuestions ()
    { echo 'Asking about design patterns!' ;
    }
} class CommunityExecutive implements Interviewer { public function askQuestions ()
    { echo 'Asking about community building' ;
    }
} Now let us create our HiringManager abstract class HiringManager { // Factory method abstract protected function makeInterviewer (): Interviewer ; public function takeInterview ()
    { $ interviewer = $ this -> makeInterviewer (); $ interviewer -> askQuestions ();
    }
} Now any child can extend it and provide the required interviewer class DevelopmentManager extends HiringManager { protected function makeInterviewer (): Interviewer { return new Developer ();
    }
} class MarketingManager extends HiringManager { protected function makeInterviewer (): Interviewer { return new CommunityExecutive ();
    }
} and then it can be used as $ devManager = new DevelopmentManager (); $ devManager -> takeInterview (); // Output: Asking about design patterns $ marketingManager = new MarketingManager (); $ marketingManager -> takeInterview (); // Output: Asking about community building. When to use? Useful when there is some generic processing in a class but the required sub-class is dynamically decided at runtime. Or putting it in other words, when the client doesn't know what exact sub-class it might need. Abstract Factory Builder Prototype Singleton",False
257688187,page,current,/x/ewJcDw,Onboarding DAIS for continuing to use ARGateway services,,
257690764,page,current,/x/jAxcDw,AR Poller Jobs and Server Components,JOB Server Location PROD GEARS Pollers (CA & LA) 1arplplargw01.us.dell.com /u01/ftpgears_prod/ Green Active MX Customer Backflow 1arplparsrvc07.us.dell.com /u01/app/MXCustomerBckFlow Green Active US Customer Backflow 1arplparsrvc07.us.dell.com /u01/app/PROD/rest_services/omega/ARInvoice/customerbackflow-us/ Green Active GEARS Pollers (CA & LA) DR ausflarap04.us.dell.com MX Customer Backflow DR ausflarap04.us.dell.com US Customer Backflow DR ausflarap04.us.dell.com Astra Engines PROD AUSPLONEARSRV06.us.dell.com /u01/app/arstore/astra/[omega/abacus]/publisher Astra Engines DR AUSFLONEARSRV06.us.dell.com /u01/app/arstore/astra/[omega/abacus]/publisher Astra Subscriber PROD AUSPLONEARSRV06.us.dell.com /u01/app/arstore/astra/[omega/abacus]/subscriber Astra Subscriber DR AUSFLONEARSRV06.us.dell.com /u01/app/arstore/astra/[omega/abacus]/subscriber Astra Subscriber PROD (PC1 Rem) ausflpoesdb11.us.dell.com /u01/app/arstore/astra/[omega/abacus]/subscriber Astra Subscriber DR (S3B Rem) ausplpoesdb11.us.dell.com /u01/app/arstore/astra/[omega/abacus]/subscriber Currently Running: Green PROD,False
263529352,page,current,/x/iCO1Dw,Docker Container Best Practices,,
263547405,page,current,/x/DWq1Dw,AXIS,,False
263547968,page,current,/x/QGy1Dw,SUPPORT,,False
263852229,page,current,/x/xRC6Dw,Collections UI FY21-Roadmap,250,
264496582,page,current,/x/xuXDDw,ARStore DTC Migration,,False
267781119,page,current,/x/-wP2Dw,AR Gateway Invoicing (Digital OM),,
267781669,page,current,/x/JQb2Dw,Application Architecture,"A distributed service used to process the order into the Order store. This service is used to receive order information from several sources and process the data into the data store. The recommended model for processing this data is event-based but can also be extended to other data ingestion models like batching based on time slicing, polling, ETL, etc. Order Processor Unit Features: Runtime profiling as configuration Order sequence and throttling based distributed processing Event models supported: Real-time event processing Data set based event model and processing Polling based event processing NATS Server Integration",False
267783799,page,current,/x/dw72Dw,Event Processing Overview,,
267783846,page,current,/x/pg72Dw,Event Source,,False
267783848,page,current,/x/qA72Dw,Order Management Source,,
267805346,page,current,/x/omL2Dw,MX Flow,MX Flow Event processing has been implemented as part of GEARS retirement for Mexico Orders. Two Queues have been Created one for Customer Creation & Order Invoicing in OMEGA. CUSTOMER MX FLOW Event Will be consumed and processed to AR GATEWAY directly without any persistence / Data transformation. Queue: REPORTING_BASE.MXPO_CUST_QUEUE ORDER MX FLOW The event Will be consumed and processed to AR GATEWAY only if the Order is available in Order Store. (Internal Event Persistence Layer to maintain Event Activity). Queue: REPORTING_BASE.MXPO_ORDER_QUEUE,False
267805403,page,current,/x/22L2Dw,ALERTS,,
268204907,page,current,/x/a3v8Dw,AR Micro Services by BT2,,False
268206072,page,current,/x/_H-8Dw,Knowledge Pool,"In case of any backlog at the Order source like AQ Or MQ.  The following steps need to be followed. Check the backlog at Source System (Need to understand if is it due to sudden surge or Backlog due to process) If it's due to the sudden surge of events, we need to monitor the process. If it's due to slowness or any other connection or n/w failure Then check if the processing backlog is due to any internal error/network latency issues (high response time from external API's) Verify the Service & API performance. Please Raise the PAC group request for server access. All the servers have been set up and maintained by GCBS_PLATFORM_SUPPORT <GCBS_PL ATFORM_SUPPORT@Dell.com > In case of any queries or issues, please reach to Dev/L4 Team from . All the Cloud Native environment will be handled by Dell Pivotal Team. ASTRA_DARP_DOC Document ASTRA will be decommissioned from TROUX and all the ASTRA relates components will be merged along with ABACUS & GOSS Application. (ASTRA DECOMMISSIONED) GLOSSARY PAGE for DELL https://solutions.one.dell.com/sites/CSO/Programs/TT/turbo/glossary.htm",False
271133535,page,current,/x/XyspE,TDD - Cucumber,"Getting started with Cucumber: https://www.hindsightsoftware.com/blog/cucumber-jvm-intellij 1. Install cucumber plugin 2. Create new project 3. Edit configurations, add cucumber parameters 4. Create & run feature file 5. Copy console output to StepDef java class 6. Run feature file again to get Exception (Test case failure) 7. Keep adding code to pass test cases 8. Run feature file again to see count of failed vs passed test cases Generating code coverage report: Add jacoco plugin to pom.xml <plugin> <groupId> org.jacoco </groupId> <artifactId> jacoco-maven-plugin </artifactId> <version> 0.8.5 </version> </plugin> Run → Show Code Coverage data OR click on the following button on your test class 3. Run → Generate coverage report to generate .html file (for better visualisation) Sample Code: https://gitlab.dell.com/gcbs/ordermanagement/platform-services/abacus/common-components/redis-api/-/tree/CUCUMBER_TEST Troubleshooting: When you run feature, if you get error: java.lang.ClassNotFoundException: org.springframework.transaction.TransactionDefinition Edit configurations, remove the Glue & Program arguments Could not find or load class cucumber.cli.Main Edit configurations, change main class to cucumber.api.cli.Main Useful links : https://cucumber.io/docs/cucumber/api/ 250",
271134862,page,current,/x/jjApE,Pairing with Austin,,False
271136051,page,current,/x/MzUpE,FY21-0502 May Release,Project/CR/Description BR100 Link BT# Remarks GE2 (Priority 0) 4-15 May GE3 (Priority 1) 18-22 May GE1 (Priority 2) 18-27 May BRM Spain Invoicing http://intranet.dell.com/it/OrderToCash/MD50s/Setup/BR%20100s%20and%20Templates/SPRINT%20BR100s/Invoicing%20BR100/BR100%20Global%20BRM_ES.DOCX BT3 WIP WIP WIP BRM Global Invoicing http://intranet.dell.com/it/OrderToCash/MD50s/Setup/BR%20100s%20and%20Templates/SPRINT%20BR100s/Invoicing%20BR100/Invoicing%20BR100%20-%20BRM.docx BT3 Done Done Done ARBT2 BR100 – FY21-0502 May Release https://it.one.dell.com/sites/Omega/Shared%20Documents/Roadmap%20FY21/Releases/FY21-0602/BR100/AR_BT2%20BR100/ARBT2%20BR100%20-%20FY21-0502%20May%20Release.docx?Web=1 BT2 Done Done Done BRM Balance feed for Spain http://intranet.dell.com/it/OrderToCash/MD50s/Setup/BR%20100s%20and%20Templates/SPRINT%20BR100s/cash%20BR100/BRM%20EMEA%20Balance%20Feed%20BR100.docx BT4 WIP Done WIP Paypal For Australia http://intranet.dell.com/it/OrderToCash/MD50s/Setup/BR%20100s%20and%20Templates/SPRINT%20BR100s/cash%20BR100/FD%20BR100_AUPP.docx BT4 WIP Done WIP UPI for India http://intranet.dell.com/it/OrderToCash/MD50s/Setup/BR%20100s%20and%20Templates/SPRINT%20BR100s/cash%20BR100/UPI.docx BT4 WIP Done WIP ARBT1 BR100 – FY21-0502 May Release http://intranet.dell.com/it/OrderToCash/MD50s/Setup/BR%20100s%20and%20Templates/SPRINT%20BR100s/Invoicing%20CR%20BR100/FY21%20May%20Release%20BR100.docx BT1 Done Done Done,False
272175200,page,current,/x/YBA5E,AR Self Service FY Roadmap,AR Self Service FY21 Roadmap true,False
272178818,page,current,/x/gh45E,Deleted Pages,"Since I do not have the ability to delete pages, I will put pages that I would delete as subpages to this page.",
272178841,page,current,/x/mR45E,SIR Current State Q2FY21,,False
274961801,page,current,/x/iZVjE,LATAM - CONSTAB Replacement,,False
274961805,page,current,/x/jZVjE,Process Flow Diagram,,
276017120,page,current,/x/4K9zE,India - TCS Tax Solution,"Introduction Tax collected at source (TCS) is the tax payable by a seller which he collects from the buyer at the time of sale and it is provided under  Section 206C of Income Tax Act governs effective from 1st October 2020. TCS Tax Eligibility: Seller  to collect 0.1% TCS from Buyer on the sale of goods in excess of 5 Million in INR in aggregate in the current financial year. In cases  the buyer doesn’t have a Permanent Account Number (PAN) or Aadhaar — the rate will be 1% Particulars PAN available No PAN 1 Oct 2020 to 31 March 2021 0.075%** 1% 1 April 2021 and onwards 0.1% 1% India TCS Tax Solution diagram Sabrix is the Global tax engine Application integrated with all Dell upstream and downstream applications like   GII (EMEA & APJ Orders system Online and Offline orders) , Omega (Orders & Receivables) & DSA etc for correct tax treatment. Omega Application tightly coupled with Sabrix application for tax creation and Omega made Tax call during .1. Order is booked 2. Invoice created 3. Invoice complete TCS Exempt Scenarios: i. Transaction Type that are marked to exclude (XXG_RA_CUST_TRX_TYPES_EXT.attribute2='Y') ii. Customer PAN numbers  mentioned in the Exempt list are exclude  from YTD Calculation and TCS Tax iii. Transactions with Bill to Country out side of India iv. Credit Memo with Reason Code Maintain in Lookup Feature Reference for TCS Tax Solution: Feature 8617104: [OMEGA AR India TCS] : Ability to Create Manual Invoices and Credit Memos for Retrospective TCS Feature 8618123: [OMEGA AR India TCS] : Sabrix Integration Changes Feature 8294597: [OMEGA AR India TCS] : TCS API to return YTD Amount for Sabrix TCS Tax Solution 1. Setup i. Tax code --New TCS Tax code and Tax Rate setup in Omega for India BU's (I1,I2 & I3) Tax Regime        : SBX_REGIME_IN ERP Ta Code      : TCS Tax Direction     : O Install O2C        : Yes Install P2P         : No Start Date          : 01-Jan-1980 UUID                  : 2144ad36-5627-456a-a8ec-66aa7768e960 Recoverable/Liability Account: --TCS Tax Sequence in CFO Document CFO Tax Sequence for Tax Collected at Source(TCS),So that the TCS tax in the CFO is  display according to the define sequence ( TCS Tax to show after IGST Tax) Navigation: Tax Managerà Tax ConfigurationàTax RatesàSearch with tax rate code and click on Update Rate Detailsà ->Update DFF attributes ATTRIBUTE6 ATTRIBUTE8 BASIC_CUSTOMS_DUTY 20 INSWS 30 COUNTER_VAILING_DUTY 40 CVD 40 CVD_EDUCATION_CESS 60 IGST 60 Krishi_Kalyan_Cess 70 CGST 80 CVD_SHE_CESS 80 CUSTOMS_EDUCATION_CESS 100 SGST 100 TCS 105 UTGST 105 110 INCEC 110 115 CUSTOMS_SHE_CESS 120 INCSC 120 CC 130 SPECIAL_ADDITIONAL_DUTY 140 SERVICE_TAX 160 SERVICE_TAX_EDUCATION_CESS 180 SWACHH_BHARAT_CESS 180 SERVICE_TAX_SHE_CESS 200 REBATE_DISCOUNT 220 VAT 240 CST 260 KERALA_SOCIAL_SEC_CESS 280 KERALA_CST_SOCIAL_SEC_CESS 285 GUJARAT_ADDITIONAL_CESS 300 UP_ADDITIONAL_TAX 320 HARYANA_ADDITIONAL_TAX 340 OCTROI 360 ENTRY_TAX 380 ii.  New TCS Transaction Type & Document Sequence New  Invoice and Credit Transaction Type to maintain Manual TCS  Transaction/Adjustment and Charge customer. The manual TCS Transactions/Adjustment will not have have tax call to Sabrix – Need to Identify the attribute field to mark the transaction to exclude from YTD calculation – The Same attribute to add the  AR store Changes require for Manual Transactions as follows, -- Suppress the Transaction Type derivation based on LE/BU/CC combination -- Bill_From Column is Mandatory at invoice header DFF -- Order Category is Mandatory at Invoice Line DFF -- SKU is Mandatory Note: Spike Task created in Current sprint (Sprint-10) to Analyse the above iii.  Exclude Transaction Type Setup for YTD Amount Calculation Transaction Type that are to be excluded  from YTD Calculation to be identified and Marked, so that we will not consider for YTD calculation Transaction Type like Dormant prepaid, Exclude Transaction Type from TCS YTD –  Reserved XXG_RA_CUST_TRX_TYPES_EXT.attribute2 to mark the transaction Type to exclude from TCS YTD amount calculation –  Added the above filed to Transaction Type DFF (Title : 'Transaction Type Ext Information') Transaction screen with the DFF will be shown as follows IV.  Attribute field to Reserve YTD amount for the Transaction –Reserved XXG_RA_CUSTOMER_TRX_EXT.Attribute69 to maintain  YTD amount for the transaction V. Profile Option  Setup New Profile option to control TCS Tax charges for India BU's (I1,I2 & I3) only. 2. New TCS Tax Service A new Service to be build  to provide the YTD amount (Goods Sales revenue) for the current Financial Year for a customer. This Service API is to be used for the upstream application like GII & DCP Pricing , as these application will have Sales order information only and not  Transactions   information. The Service will accept parameter as follows, 1. Billing Customer Number (Mandatory) 2. Billing PAN Number 3. Payment Term (Mandatory) Note: – This Service  will be used for Indian BU's (I1, I2 & I3)  only – Sabrix Tax Service layer will call the new Service API to get YTD amount for GII Application sales order's tax calculation. – Based on Service Response with YTD amount , Sabrix will applied the TCS tax to the orders. The Service will derive the YTD Value  using Elastic Search (Receivable transaction information) & Open Orders API (Open order YTD amount) . YTD Calculation logic/Rules: Input Parameter Validation PAN Number Validation – With Parameters Billing Customer Number and  Valid PAN Number  combination, All current financial Transactions  with the PAN Number on Billing Address in all 3 India Organizations (I1, I2 & I3)  to be consider regardless of the Account Number – With Parameters  Billing Customer Number and  PAN Number as  'UNREG%' or Null, All current financial transactions  for billing  Customer Account Number to be considered Payment Term Validation – With the Payment Term parameter  (Transaction / Order Payment Term) passed value as 'Prepaid' then all eligible Completed Transaction (Invoices , Credits) and open orders in Omega OM that have not invoiced yet  with a Order Date (oe_order_headers_all.ordered_date) to be considered within the current Financial Year. Note: Open orders can be on prepaid hold, or released and pending shipping but yet to Invoice – With the Payment Term parameter  (Transaction / Order Payment Term) passed value as 'Account' then take eligible Completed Invoices & Credits with the Transaction Date within the current Financial Year. (Need to cross check on Open Invoices and Balances from Previous Financial Year ) Transaction  Validation – Manual Transactions created specifically for TCS Invoices or Credits – Transactions to be excluded from YTD calculation  e.g. Non-Invoiceable , Deliv Challan etc – Eligible Transaction to be considered as follows  ( Goods lines + Tax lines  excluding any TCS tax lines if they exist) . – The service line in the Transaction will be exclude and the sevice line can be identified with HSN code starting 99 – In case of Re-bill Transactions, The Original invoice YTD amount to be passed (Need to cross check again with Business) – In case of consolidation invoice , it will calculate YTD value fresh (Need to cross check again with Business) – In case of complete a manual Incomplete Transaction after over a period  , then fresh YTD calculation for Re-bill Invoice 3. Omega Sabrix call (Outbound) Omega uses a common Input XML format across BU's  while Tax call to Sabrix. Options Analyse for TCS Solution for Omega Tax call: Option-1:  Sending YTD amount on payload to existing global Sabrix URL Option-2:  New URL for India BU's (I1,I2 & I3) for Tax Calculation Evaluate and finalize with  Option-1  to call Sabrix as usual with YTD Amount and Omega Will call TCS Tax Service to get the YTD Value. Existing USER_ELEMENT.ATTRIBUTE30 identified  by Sabrix to pass the YTD amount. Note: 1. USER_ELEMENT.ATTRIBUTE30 field is used for Sales Rep id and is being send to Sabrix for all BU's  but Sabrix use this filed for US only. 2. USER_ELEMENT.ATTRIBUTE30 will be used for pass the YTD value only for I1,I2 and I3 Technical Change: Sabrix Package (XXG_SABRIX_USER_EXISTS.PRE_CALC) will change are as follows, – It will check for TCS Tax Profile (Profile will be enabled for India BU's) – It calls the TCS Tax service to get the YTD value – It will calculate the final YTD Values as (sum the current Transaction/Order Goods Line Amount) * GST 18% + (YTD value from TCS Tax Service) – The YTD amount to be stored in Invoice header extension table attributes ( Not Yet Finalized on the attribute columns) 4. Sabrix Response Response XML with new TCS Tax lines – It has already been handled in Sabrix Package (XXG_SABRIX_USER_EXISTS.POST_CALC) to accept the additional new  Tax line. – No Additional changes required. 5. AR store Change New Attributes to be added to AR store and the fields are as follows – YTD Amount to be stored in Invoice header extension table attributes – Invoice Amount (Goods Lines amount + Tax lines excluding Sevice Lines (HSN code start with 99) & TCS Tax line) – Attribute to Identify the transactions eligible for YTD calculation – Attribute to identify TCS line applied to the transaction Field Name Table Column Field Mapping Field Type AR store Query Bill To Customer Number invoice_data.invoice_customer.bill_to_cust_details[0].customer_number Existing PAN Number XXG_CUST_ACCT_SITE_EXT.ATTRIBUTE6 invoice_data.invoice_customer.bill_to_cust_details[0].cust_store[0].address_details[0].pan_number New GET_CUSTOMER_ADDRESS_DATA Goods Amount invoice_data.invoice_hdr.goods_amount_in_inr New GET_INVOICE_HDR_DATA TCS Transaction invoice_data.invoice_hdr.tcs_trx New GET_INVOICE_HDR_DATA Order Date invoice_data.invoice_hdr.hdr_store[0].order_details[0].ordered_date Existing Transaction Date invoice_data.invoice_hdr.trx_date Existing Payment Term invoice_data.invoice_hdr.hdr_store[0].payment_term_details[0].payment_term_name Existing exclude_from_tcs_ytd XXG_RA_CUST_TRX_TYPES_EXT.ATTRIBUTE2 New GET_INVOICE_HDR_DATA YTD_AMOUNT XXG_RA_CUSTOMER_TRX_EXT. ATTRIBUTE69 New GET_INV_EXT_DATA 6. Maintain the TCS Exemption List To View the PAN exemption list URL: https://arcustomer-tcsytdapi-ge4.ausvtc01.pcf.dell.com/refreshCache To add new PAN(s) to the Exemption List PAN numbers can be added to the  Exemption list by calling the below URL. Note: It accepts single PAN or multiple PAN Numbers  with comma-separated  as mentioned below In the case of a single PAN  Number https://arcustomer-tcsytdapi-ge4.ausvtc01.pcf.dell.com/addPANToExemption?panNumber=panNumber In the case of multiple PAN Numbers to add https://arcustomer-tcsytdapi-ge4.ausvtc01.pcf.dell.com/addPANToExemption?panNumber=panNumber1,panNumber2 After adding a new PAN to the Exemption list,  call  the below service for the change to reflect https://arcustomer-tcsytdapi-ge4.ausvtc01.pcf.dell.com/refreshCache To remove the existing PAN(s) from the Exemption List PAN numbers can be removed from the Exemption list by calling the below URL. Note: It accepts single PAN or multiple PAN Numbers  with comma-separated  as mentioned below In the case of a single PAN  Number https://arcustomer-tcsytdapi-ge4.ausvtc01.pcf.dell.com/removePANFromExemption?panNumber=panNumber In the case of Multiple  PAN  Numbers to remove https://arcustomer-tcsytdapi-ge4.ausvtc01.pcf.dell.com/removePANFromExemption?panNumber=panNumber1,panNumber2 After removing  the PAN numbers from the Exemption list,  call the below service for the change to reflect https://arcustomer-tcsytdapi-ge4.ausvtc01.pcf.dell.com/refreshCache 7. Query to retrieve YTD amounts for a given Customer/PAN Number SELECT hou.attribute2 BU_Code, hca.account_number, hca.account_name, xcas.attribute6 Pan_Number, rctt.TYPE, rctt.name transaction_type, NVL ((SELECT attribute2 FROM xxg_ra_cust_trx_types_ext xrctt WHERE xrctt.cust_trx_type_id = rctt.cust_trx_type_id), 'N') exclude_from_tcs_ytd, rtt.name term_name, CASE WHEN rtb.attribute2 = 'Y' THEN 'Prepaid' ELSE 'Account' END Payment_term, rct.trx_number, TO_CHAR (rct.trx_date, 'DD-MON-YYYY HH24:MI:SS') trx_date, TO_CHAR (rct.creation_date, 'DD-MON-YYYY HH24:MI:SS') Creation_Date, rct.Invoice_currency_code, aps.amount_due_original Invoice_Amount, (SELECT SUM (zl.tax_amt) FROM zx_lines zl WHERE 1 = 1 AND rct.customer_Trx_id = zl.trx_id AND zl.tax_rate_code NOT LIKE 'TCS%') GST_TAX, (SELECT SUM (zl.tax_amt) FROM zx_lines zl WHERE 1 = 1 AND rct.customer_Trx_id = zl.trx_id AND zl.tax_rate_code LIKE 'TCS%') TCS_TAX, xx.attribute69 Ytd_Amount, rct.interface_header_attribute1 order_number, rct.interface_header_attribute2 Order_Type, ooha.ordered_date, rct.interface_header_context FROM apps.ra_customer_trx_all rct, apps.xxg_ra_customer_trx_ext xx, apps.ar_payment_schedules_all aps, apps.hr_all_organization_units hou, apps.ra_batch_sources_all rbs, apps.ra_cust_trx_types_all rctt, apps.hz_cust_accounts hca, apps.hz_cust_site_uses_all hcsu, xxg.xxg_cust_acct_site_ext xcas, apps.ra_terms_tl rtt, apps.ra_terms_b rtb, apps.oe_order_headers_all ooha WHERE rct.customer_trx_id = xx.customer_trx_id(+) AND rct.complete_flag = 'Y' AND rct.org_id = hou.organization_id AND rct.batch_source_id = rbs.batch_source_id AND rct.customer_trx_id = aps.customer_trx_id(+) AND rct.cust_trx_type_id = rctt.cust_trx_type_id AND rct.org_id = rct.org_id AND hca.cust_account_id = rct.bill_to_customer_id AND hcsu.site_use_id = rct.bill_to_site_use_id AND xcas.cust_acct_site_id(+) = hcsu.cust_acct_site_id AND rct.term_id = rtt.term_id(+) AND rtt.term_id = rtb.term_id(+) AND rct.interface_header_attribute1 = TO_CHAR (ooha.order_number(+)) AND rct.creation_date > TO_DATE ('01.04.2021', ' dd.mm .yyyy') AND hou.attribute2 IN ('I1', 'I2', 'I3') AND xcas.attribute6 = NVL ( :p_pan_number, xcas.attribute6) AND hca.account_number = NVL ( :p_acct_num, hca.account_number) --and rct.trx_number = :P_trx_Number ORDER BY rct.creation_date DESC; --1228",False
278856393,page,current,/x/yQKfE,Elog Response Consumer,,
278856940,page,current,/x/7ASfE,Discovery Template,"The Problem Questions What problems are we solving? Who are we solving it for? What are we intentionally not doing/solving for? (not now, not ever) What does success look like? When do we need to deliver / solve this by? Checklist internal ask the experts session review enhancement/defects data/technical debt review pertinent metrics NPS/pSAT adoption target The Solution Questions What is the estimated scope/timing of this work? How do you mitigate risk? How does this break down into iterations (skateboard, scooter, etc)? Does this replace/enhance an existing product/feature? How will that transition be managed? Does how we sell / GTM affect solution design? Open Questions Checklist UX/UI Design solution validated by customers / users Technical design solution validated by R&D Risks identified and mitigated Assumptions identified and mitigated Dependencies identified and alignment gained Delivery & GTM Questions How are we going to deliver this to customers? When do we start selling this? Is this going to be a campaign (x-sell, upsell, etc)? Does this make another product / feature obsolete? Checklist Line up early adopters Align with marketing on pricing and packaging before development begins Resources: 250 250 250 250",False
278858870,page,current,/x/dgyfE,Where to host ARIES/DIS???,,False
278858974,page,current,/x/3gyfE,Internship Expectations,,
278860119,page,current,/x/VxGfE,Settlement Eureka and ZUUL Integration,"SETTLEMENT ZUUL AND EUREKA INTEGRATION: Feature: SETTLEMENT ZULL INTEGRATION ID Title Work Item Type 8533855 SETTLEMENT ZUUL INTEGRATION Feature Why ZUUL instead of HAPROXY? This is a feature to register ZUUL and EUREKA in settlement apps and that WILL NOT cause any changes on the functionality of the application. 1.Register settlement services in ZUUL. Log files are centralized at Eureka Service Monitor available in Eureka. Settlementapp.us.dell.com 3DNS URL will be decommissioned after 0602 and replace by ZUUL. URL’s: Endpoint: Eureka: https://eureka-sa-ge2.ausvtc01.pcf.dell.com/admin - (only for GE2.) https://eureka-sa-prod.ausmpc.pcf.dell.com/admin - Prod (PR Node) https://eureka-sa-s3b.ausmsc01.pcf.dell.com/admin - prod (DR Node) Zuul https://saapigateway-ge2.ausvtc01.pcf.dell.com/actuator/routes ( Change the url from ge2 to the expected env.) https://saapigateway-prod.ausmpc.pcf.dell.com/actuator/rotues - Prod (PR Node) https://saapigateway-dr.ausmsc01.pcf.dell.com/actuator/routes - Prod (DR Node) WHO are all the clients for SETTLEMENT: CCE Client ID - d9bafb83-6d96-4f0e-88ad-de3edeca8422 CCE accepted to make the changes as apart of 0602 release. OMGateway: Client ID - d378b0e4-9cfe-4183-8143-5610b72a8049 ( this might can change ) OM gateway is going with 0803 release. Omega CFO : OMEGA CFO will be calling the direct URL AUSPLSA02.us.dell.com (If settlement servers are moving to MDC nodes there is a possibility of asking them to change). Why OMEGA CFO is not calling ZUUL URL? OMEGA CFO has challenges to access PCF URL from Omega DB.  Hence, we are giving the direct endpoint for accessing our resource. NOTE: DAIS validation is not mandatory till 0802 release, if the client passes the auth token then SETTLEMENT will be validating else not. But the Auth token will be made mandatory after 0802 release.",False
278860143,page,current,/x/bxGfE,Feedback FORM:,,
278860147,page,current,/x/cxGfE,Feed Back FORM,"This feature is to add feedback form feature in Credit Card Screen. Key Function: –Feedback form will display at every 15th of the month when user open Credit Card Screen. –Feedback form will show maximum 3 times per month if user select Not to provide feedback. –Collection User will not seen auto display of the feedback form, only manual feedback available. –Manual feedback form link available in top right corner of Credit Card Screen. –Collect feedback from user and store in database, system will map icon to numeric value as provided by user. (Double byte character is support. EG: Chinese, Japanese character and etc. ) –Feedback question is configurable through script. –A report contained the statistic of the feedback will send to specific user in Monthly basis through email. TECHNICAL DETAILS: Database Object Details: Object Name Schema Object Type SCHEMAXXSA_XXSA_SA_FEEDBACK_CONFIG_TAB.sql XXSA Config Table to store all Feedback questions w.r.t to application SCHEMAXXSA_XXSA_SA_FEEDBACK_USER_RESP_TAB.sql XXSA Table to store first UI of feedback form SCHEMAXXSA_XXSA_SA_FEEDBACK_DET_TAB.sql XXSA Table to store user provided feedbacks XXSA_SA_FEEDBACK_GRANTS.sql APPS Grant script to APPS schema XXSA_SA_FEEDBACK_UTIL_PKGS.sql APPS Util Package which has complete feedback form functionality XXSA_SA_FEEDBACK_UTIL_PKGB.sql APPS Util Package which has complete feedback form functionality XXSA_SA_FEEDBACK_CONFIG_S.sql APPS Sequence on XXSA_SA_FEEDBACK_CONFIG_TAB Service DETAILS : GE2 - https://arapigateway-ge2.ausvdc02.pcf.dell.com/feedbackuiservice/swagger-ui.html PROD - https://arapigateway-prod.ausmpc.pcf.dell.com/ feedbackuiservice/swagger-ui.html TO check the logs: https://eureka-prod.ausmpc.pcf.dell.com/admin#/applications Search for Feedback Service. HOW to insert script in DB? SET DEFINE OFF; Insert into XXSA.XXSA_SA_FEEDBACK_CONFIG_TAB (QUESTION_ID, DESCRIPTION, APPL_NAME, RESPONSE_TYPE, ENABLED, START_DATE, END_DATE, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY, ATTRIBUTE1) Values (1, 'Please rate your overall experience with this screen.', 'SA', 'R', 'Y', TO_DATE('4/26/2020 5:15:53 PM', 'MM/DD/YYYY HH:MI:SS AM'), TO_DATE('8/4/2020 5:15:53 PM', 'MM/DD/YYYY HH:MI:SS AM'), TO_DATE('4/26/2020 5:15:53 PM', 'MM/DD/YYYY HH:MI:SS AM'), -1, TO_DATE('4/26/2020 5:15:53 PM', 'MM/DD/YYYY HH:MI:SS AM'), -1, 'M'); Insert into XXSA.XXSA_SA_FEEDBACK_CONFIG_TAB (QUESTION_ID, DESCRIPTION, APPL_NAME, RESPONSE_TYPE, ENABLED, START_DATE, END_DATE, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY, ATTRIBUTE1) Values (2, 'Based on your experience, how would you rate this screen on performance?', 'SA', 'R', 'Y', TO_DATE('4/26/2020 5:22:00 PM', 'MM/DD/YYYY HH:MI:SS AM'), TO_DATE('8/4/2020 5:22:00 PM', 'MM/DD/YYYY HH:MI:SS AM'), TO_DATE('4/26/2020 5:22:00 PM', 'MM/DD/YYYY HH:MI:SS AM'), -1, TO_DATE('4/26/2020 5:22:00 PM', 'MM/DD/YYYY HH:MI:SS AM'), -1, 'M'); Insert into XXSA.XXSA_SA_FEEDBACK_CONFIG_TAB (QUESTION_ID, DESCRIPTION, APPL_NAME, RESPONSE_TYPE, ENABLED, START_DATE, END_DATE, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY, ATTRIBUTE1) Values (3, 'How do you rate the accuracy of the data displayed on the screen?', 'SA', 'R', 'Y', TO_DATE('4/26/2020 5:22:41 PM', 'MM/DD/YYYY HH:MI:SS AM'), TO_DATE('8/4/2020 5:22:41 PM', 'MM/DD/YYYY HH:MI:SS AM'), TO_DATE('4/26/2020 5:22:41 PM', 'MM/DD/YYYY HH:MI:SS AM'), -1, TO_DATE('4/26/2020 5:22:41 PM', 'MM/DD/YYYY HH:MI:SS AM'), -1, 'M'); Insert into XXSA.XXSA_SA_FEEDBACK_CONFIG_TAB (QUESTION_ID, DESCRIPTION, APPL_NAME, RESPONSE_TYPE, ENABLED, START_DATE, END_DATE, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY, ATTRIBUTE1) Values (4, 'How do you rate the ease of use for the screen?', 'SA', 'R', 'Y', TO_DATE('4/26/2020 5:23:36 PM', 'MM/DD/YYYY HH:MI:SS AM'), TO_DATE('8/4/2020 5:23:36 PM', 'MM/DD/YYYY HH:MI:SS AM'), TO_DATE('4/26/2020 5:23:36 PM', 'MM/DD/YYYY HH:MI:SS AM'), -1, TO_DATE('4/26/2020 5:23:36 PM', 'MM/DD/YYYY HH:MI:SS AM'), -1, 'M'); Insert into XXSA.XXSA_SA_FEEDBACK_CONFIG_TAB (QUESTION_ID, DESCRIPTION, APPL_NAME, RESPONSE_TYPE, ENABLED, START_DATE, END_DATE, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY, ATTRIBUTE1) Values (5, 'What are the top 2 features you would like to add or fix in the screen?', 'SA', 'T', 'Y', TO_DATE('4/26/2020 5:24:44 PM', 'MM/DD/YYYY HH:MI:SS AM'), TO_DATE('8/4/2020 5:24:44 PM', 'MM/DD/YYYY HH:MI:SS AM'), TO_DATE('4/26/2020 5:24:44 PM', 'MM/DD/YYYY HH:MI:SS AM'), -1, TO_DATE('4/26/2020 5:24:44 PM', 'MM/DD/YYYY HH:MI:SS AM'), -1, 'NM'); Insert into XXSA.XXSA_SA_FEEDBACK_CONFIG_TAB (QUESTION_ID, DESCRIPTION, APPL_NAME, RESPONSE_TYPE, ENABLED, START_DATE, END_DATE, CREATION_DATE, CREATED_BY, LAST_UPDATE_DATE, LAST_UPDATED_BY, ATTRIBUTE1) Values (6, 'Comments.', 'SA', 'T', 'Y', TO_DATE('4/27/2020 9:48:33 AM', 'MM/DD/YYYY HH:MI:SS AM'), TO_DATE('8/4/2020 5:24:44 PM', 'MM/DD/YYYY HH:MI:SS AM'), TO_DATE('4/27/2020 9:48:33 AM', 'MM/DD/YYYY HH:MI:SS AM'), -1, TO_DATE('4/27/2020 9:48:33 AM', 'MM/DD/YYYY HH:MI:SS AM'), -1, 'NM'); COMMIT;",False
278860291,page,current,/x/AxKfE,"Driving Standards - Dev Guide, Coding standards and Code reviews",,
278860445,page,current,/x/nRKfE,User Interviews 6/8-6/12,What are our goals? (Marcy can you catch me up here?) Determine how user is currently using SIR Determine pain points that user is currently experiencing with SIR Who are we interviewing?  What are their roles? Where is the user interview guide? (Sean to create) What did we learn from the user interviews? Synthesis Affinity Mapping What are our next steps after the user interviews? Do we need more user interviews? 2x2 Who else do we need to setup user interviews with? 1 complete Dana Ford Dana.Ford@dell.com 2 complete Genaro Alvarez Genaro.Quiroz2@dell.com 3 complete Michael Whelan Michael.Whelan@dell.com 4 complete Vipin Sing Vipin.Singh@dell.com (India) 5 incomplete,False
278862994,page,current,/x/khyfE,Discussion in APJ enablement for DA,,
278863356,page,current,/x/-B2fE,6.5.20,"Kathryn Casey 2x Jeremy ""finish and deliver"" submission what does ""finish and deliver"" mean past team finish => non-prod deliver => prod",False
278863839,page,current,/x/3x_fE,US GCM Order Import,,
278871202,page,current,/x/ojyfE,List of Services and Prod Servers,"Currently, the VM's are in DTC Servers PR1- AUSPLSA01.US.DELL.COM PR2- AUSPLSA02.US.DELL.COM DR1- AUSFLSA01.US.DELL.COM DR2- AUSFLSA02.US.DELL.COM For all the projects the max memory allocation is 1024 MB(XmX) and minimum allocation is 512 MB (XmS). Click on the project name to navigate to FLEX Application and Future Plans Application Name 0502Release 0602Release Description CLIENTS Future Plans CBCBR DR2 PR1 Gets CBCBR file from GPG and import it in OMEGA Scheduler PR1 epsettlement PR2 PR1 Gets Refund Request from the CC screen and initiate a Refund to the customer. Internal Rest services PR1, PR2, DR 1, DR2 mainmqUS DR1 PR2 Gets US Batch Response from GPG and record it in SETTLEMENT Scheduler PR2 mqDataRead DR2 PR2 Gets US Batch Response from GPG and record it in SETTLEMENT Scheduler PR1 orderCaptureUS PR1, PR2, DR 1, DR2 PR1, PR2, DR 1, DR2 Initiate Capture/Refund for US Sales Order/BRM. Retrieves first and last 4 digits of CC to CCE and CFO clients CCE/OMEGA CFO PR1, PR2, DR 1, DR2 properties_git PR1, PR2, DR1, DR2 PR1, PR2, DR 1, DR2 Contains all properties and deploy it in a folder u01/settlement/conf Properties Not a JAVA service. PR1, PR2, DR 1, DR2 ReAuth PR1 PR1 Initiates Reauthorization if the auth is about to expire Scheduler PR1 Settlement PR1, PR2, DR1, DR2 PR1, PR2, DR 1, DR2 Services are exposed to the clients for getting the AUTH/CAPTURE/REFUND event OMGateway/AR Gateway PR1, PR2, DR 1, DR2 settlementapi DR1 DR1 UI Search Service and UI System/Manual Refund for terms other than PayPal Internal Rest services PR1, PR2, DR 1, DR2 Utility DR2 DR2 Services which are exposed to the L3 team to process the transactions based on the errors Internal Rest services DR2 localmqread DR2 DR1 Consumes the request from Local MQ and call the service to initiate the event which is belonging to NON-US Scheduler PCF localMQReaderUS DR1 PR2 Consumes the request from Local MQ and call the service to initiate the event which is belonging to the US Scheduler PR2 utilityScheduler DR2 DR2 Scheduled PayPal Batch Creation program. Scheduler DR2 UI DR1 DR1 Settlement UI screen Tomcat service PCF crerefundstatusupdatefromsettlement DR2 DR2 Updates the CRE refund info to CRE RMQ Scheduler DR2 New Services as a part of modernization : paypalbatchcreation Creates Batch in settlement for EMEA,US,CA bu Application server settlementlogservice DR1 DR1 Settlement App logs PCF service PCF Total Number of Service After 0602 release: (Exclude Properties_git as there is no memory allocated to that service.) PR1 – 5 services PR2 – 5 services DR1 – 5 services DR2 – 4 services All servers have 8 GB space which can withstand 5 -6 services without memory constraints. Future Projects: Application Name 0502Release 0802Release Check Points Description customerCreationRMQ ☐ emailnotification ☐ pwmb ☐ Future Plans: 1 incomplete Rabbit MQ for the communication channel between clients 2 incomplete Cloud config on all the Application (Note: new Jars are build in a way to consume the values from the cloud-config)",False
278872185,page,current,/x/eUCfE,Sunil/Kiran Krishna - User Interview Guide,"Goals: understand user's current workflow within SIR understand user's current pain points with the SIR application identify any opportunities to add to the current user experience Introduction: The goal here is set expectations with the interviewee and give them an understanding of why this interview is being conducted. introductions Sean Marcy Ana & Genevieve “Hello, my name is Sean Rowland and I’m on the Application Transformation & Modernization team that oversees the SIR application. Today, we are looking to learn more about how you currently use SIR and any pain points you have with using the application; we may also ask you to show us how you currently use the application and will be recording this interview .  How does that sound?” (Introduce whoever else is on the call/in the room to take notes on the meeting.) We want to gain credibility with the interviewee while also building a “safe space” when the interviewee feels empowered to answer questions accurately and truthfully. Read the interviewee, what sort of tone do you need to bring to the interview? It may be worthwhile to call out that this is a user interview and see if the interviewee has any experience with them. ""Have you taken part in a user interview or given feedback on a software process before?"" Ask follow up questions if so. User Interview: Can you explain to us your role within Dell?  How long have you worked here? How often do you log into the SIR application? What was the most recent time you logged into SIR?  Can you show us what you were working on? When you log into SIR, what are you trying to accomplish?  What is your main goal? Can you show us how you do it? How does you work affect the overall CVE backlog that Dell Digital is focusing on? Does all of the work you do to reduce the CVE count happen within SIR? Where do you experience difficulty with using the SIR application? Thank you for your time today!  Would it be alright if we reached out in the future if we have any other questions or we have a potential solution we wanted to run by you? Items to think through post-interview (30 minutes): What were the major pain points that the user mentioned? Are there any opportunities to enhance the current workflow? Do we need more time with this user? How was our process?  Do we need to change our user interview language at all? Notes from Ana/Genevieve: Main Pain Points: Unable to extract data from SIR and it’s not easy to get the data in general They view the amount of  vulnerabilities that have been solved solely through Kenna Reporting is dependent on asset scores, which isn’t easily available through SIR Background: Sunil Joined less than a year ago (8 months) Security program manager for Global Ops – Program Manager Does not use SIR often, but has knowledge of how to navigate it Kiran Been with Dell for 6 years Team lead of security vulnerability General Notes: Current process: Categorize vulnerabilities by an asset score of 660 and above, who is the app owner, what can be solved & when, category (java issue etc.), and severity (high, medium, low) His team tries to capture vulnerabilities and prioritize the data for the 11 sub domains in global ops on a weekly basis They have a process flow chart for how to address the vulnerabilities that come through Didn’t get to show it to us during the interview though SIR interface needs some upscale for them to actually use it. He’s not using it as much as he’d like to Main goal is to drive down asset score along with the remediation of vulnerabilities Wants SIR tool to identify what the best set of assets is to bring the asset score down Historically Dell has looked at the volume of vulnerabilities whereas now they are looking at asset scores a lot more so we can start making dramatic reductions in the overall kenna score Most teams depend on them to provide the Kenna data to delegate who remedies what. His team just reports the data, and the security champions handle the remediations Some remediations can only happen later in the year so their team has to figure out what group of vulnerabilities can be remediated and cannot be remediated at the time Kenna can’t give the backend needed, but SIR can For all the domains, they have a small team that downloads all the data per domain on Monday mornings. Then they break the data up and distribute to teams in the form of a solution table. The solution table consists of which category (jaca, etc.), which server, numbers in the backlog, and how many remedies that have been closed in a specific domain. The security champions of those domain teams do the remediations and then check back with Sunil’s team. James receives the data and goes over it with them Thursday morning. When they need to see how many vulnerabilities have been solved, they look at Kenna. It’s a manual process through Kenna to see what has been resolved and what still needs to be fixed Follow Ups: Need to grab time to see Sunil run through the Selenium tool Possibly Monday (6/15) morning Vipin Singh ( Vipin.Singh@Dell.com ) The member on the team who actually runs the queries on the SIR database We are able to reach out to Sunil in the future for clarifying questions",False
278873679,page,current,/x/T0afE,Containerization,,
278873724,page,current,/x/fEafE,John P - User Interview Guide,"Goals: understand user's current workflow within SIR understand user's current pain points with the SIR application identify any opportunities to add to the current user experience Introduction: The goal here is set expectations with the interviewee and give them an understanding of why this interview is being conducted. introductions Sean Marcy Ana & Genevieve “Hello, my name is Sean Rowland and I’m on the Application Transformation & Modernization team that oversees the SIR application. Today, we are looking to learn more about how you currently use SIR and any pain points you have with using the application; we may also ask you to show us how you currently use the application and will be recording this interview .  How does that sound?” (Introduce whoever else is on the call/in the room to take notes on the meeting.) We want to gain credibility with the interviewee while also building a “safe space” when the interviewee feels empowered to answer questions accurately and truthfully. Read the interviewee, what sort of tone do you need to bring to the interview? It may be worthwhile to call out that this is a user interview and see if the interviewee has any experience with them. ""Have you taken part in a user interview or given feedback on a software process before?"" Ask follow up questions if so. User Interview: Can you explain to us your role within Dell?  How long have you worked here? How often do you log into the SIR application? What was the most recent time you logged into SIR?  Can you show us what you were working on? When you log into SIR, what are you trying to accomplish?  What is your main goal? Can you show us how you do it? How does you work affect the overall CVE backlog that Dell Digital is focusing on? Does all of the work you do to reduce the CVE count happen within SIR? Where do you experience difficulty with using the SIR application? Thank you for your time today!  Would it be alright if we reached out in the future if we have any other questions or we have a potential solution we wanted to run by you? Items to think through post-interview (30 minutes): What were the major pain points that the user mentioned? Are there any opportunities to enhance the current workflow? Do we need more time with this user? How was our process?  Do we need to change our user interview language at all? Notes from Ana/Genevieve: Main Pain Points: Timestamps: Wants indicator for when the last data load from Kenna was Building and storing objects. Don’t want to keep writing long queries Confidence in the data General Notes: Bundling queries within the SIR website could be extremely valuable Team initially started with using the web app but then shifted to using just the database His team felt like Kenna didn’t tabulate the data well for them, but SQL queries does Vipin and Genaro have created queries they build and display all the data into TFS Team wants an indicator, perhaps a report, to indicate when data was loaded into SIR from kenna Doesn’t know that there’s a huge impact of not having an indicator, but it would certainly increase his team’s efficiency if there were an indicator because they wouldn’t have to dig for the data themselves Access to build and store objects with reduce the complexities dramatically of their current queries Possible solution: building out forms in SIR, so that teams can pull out exact data they need His team is doing the analytics and lining up the TFS stories and doing the remediations. They’re positioning the people who do the remediation to do the remediation. His team doesn’t have access to some of the production servers. Builds the backlog in TFS. Duplicate definition - in John’s words “ 2 rows of data that are pretty much the same with the exception of the vulnerability ID and the date it was found” Looked exhaustively with the SRO team and no answers Enhancement to SIR could be a visual mapping of how the data flows from Kenna to SIR In general, he’s very thrilled with SIR and doesn’t see any problems with it. He just thinks there can be some improvements/enhancements Wants someone from ATM to explain or give a walk through of the extract process with Kenna. It would be very valuable for his team to see how data is being scraped from Kenna Recommendations for Follow-Up: Vipin Singh Genaro Alvarez (genaro.quiroz2@ dell.com ) We are able to reach out to John in the future for clarifying questions",False
278876904,page,current,/x/6FKfE,PM documents,,
278881646,page,current,/x/bmWfE,User Interviews 6/15-6/19,What did we learn last week that is influencing how we approach this week? the initial user interviews were setup with only one direct user of the SIR tool (John Polutchko) we need to ask What questions are we trying to answer with these user interviews?? How often does the user interact with the SIR DB? How does the user interact with the SIR DB? What are they trying to accomplish by querying the SIR DB? what are the DB queries they use to accomplish this goal? What are the other DB queries they use? why are they using these queries if they do not help them achieve their main goal? Where is the user interview guide?,False
278881688,page,current,/x/mGWfE,User Interview Guide 6/15-6/19,,
278881902,page,current,/x/bmafE,Dana Ford - User Interview Guide 6/15-6/19,"Recording: Share recording with viewers: https://Dell.zoom.us/rec/share/y_dxCY7SqT1LaaPuq3jPf7wwM5vcaaa81ydK_6YOzEr5VbGS9KYjXR27B7NZcpGo Password: 9R%3%?*h Introduction: The goal here is set expectations with the interviewee and give them an understanding of why this interview is being conducted. introductions Sean Ana & Genevieve “Hello, my name is Sean Rowland and I’m on the Application Transformation & Modernization team that oversees the SIR application. Today, we are looking to learn more about how you currently use SIR and any pain points you have with using the application; we may also ask you to show us how you currently use the application and will be recording this interview .  How does that sound?” (Introduce whoever else is on the call/in the room to take notes on the meeting.) We want to gain credibility with the interviewee while also building a “safe space” when the interviewee feels empowered to answer questions accurately and truthfully. Read the interviewee, what sort of tone do you need to bring to the interview? It may be worthwhile to call out that this is a user interview and see if the interviewee has any experience with them. ""Have you taken part in a user interview or given feedback on a software process before?"" Ask follow up questions if so. Questions: How often are you querying the SIR DB? a couple times a week How often are you logging into the SIR web application? What is the overall goal you are trying to complete by querying the SIR DB? trying to understand the duplicates under John P using as a checksum against what they're seeing in Kenna log as when SIR was last loaded ""net change since the last load"" WHY => can't track progress for 40DX ""can't be solved in SIR but there is the opportunity for efficiency gains"" Wei has a really good point on how to get away from having to query ""what we should be going after"" using SIR as a cross-functional check how might we eliminate the number of queries they're using to check the data? Can you show us the queries you are using to achieve these goals? What other queries are you using? What are you trying to accomplish by using them? Anything else we should know? data timing brought up again Confidence in data? Notes from Ana/Genevieve: Main Pain Points: Confidence in the data, seeing duplicates Data timing unclear Complex, manual queries General Notes: Dana spends most of her time looking at Kenna then goes to the SIR database to confirm what she sees in Kenna - verifying validity “There’s a web application?!” - Dana Wants to be sure the SIR data had been run that day. The worst thing is when things don’t match up between Kenna and SIR and she doesn’t know who’s right She’s querying the database probably a few times per week She actually prefers writing the queries because she likes to know what’s going on under the hood Wants to know when SIR was last uploaded, and how many records were loaded and offloaded (net change) She thinks the SIR database data is a little old sometimes. Having a timestamp that shows when the data was last loaded would be good Need to give John insight into the CVE counts but it’s hard for them to be confident in the data due to the duplicates they see Duplicates are causing Kenna score to be inaccurate, which is the only score senior executives see",False
278887220,page,current,/x/NHufE,Abacus Dashboard - EMC,,
279452637,page,current,/x/3RuoE,Abacus Implementation SB Apps,"Implementation steps of Vault Implementation for SpringBoot Applications Steps < Refer the commits for the example > Add following dependencies for : abacusspringvault Gradle : implementation 'com.abacus:abacusspringvault:3.0' Maven : <dependency> <groupId>com.abacus</groupId> <artifactId>abacusspringvault</artifactId> <version>3.0</version> </dependency> Add getProps() method either in a separate class or in Main class file VaultCache.initCache(flowArray)              → pass the configs required in the array Properties properties = new Properties();   → Create Properties object Set all the properties used in application.properties into properties object , taking the values from VaultCache. public static Properties getProps() { String[] flowArray = new String[]{""rmqconfig"", ""cancelresubmit""}; VaultCache.initCache(flowArray); Map<String, String> rmqMap = PropsUtil.trimProperties(VaultCache.get(""rmqconfig""), ""RabbitMQ""); Properties properties = new Properties(); properties.put(""spring.rabbitmq.username"", rmqMap.get(""username"")); properties.put(""app.version"", VaultCache.get(""cancelresubmit"").get(""version"")); return properties; } Modify the main method in the main Application class : Call the getProps method from the following line to load the properties into context. public static void main(String[] args){ new SpringApplicationBuilder(OmegaCancelResubmitConsumerApplication.class).properties(PropsConfig.getProps()).build().run(args); } Remove all the application.properties files from the src/main/resources folder (Having properties in application.properties will take precedence over the properties set using Vault) For Projects having test classes, application.properties have to be created under src/test/resources folder (Have dummy/ invalid values for credentials etc in this properties file thus adhering to Vault purpose) Remove devtools dependency from the application as it causes to restart main context and hence vault API is called twice. For CICD Pipelines, if there is a need in test cases to call Vault method, add the env variables under project git path –> Settings → CI/CD → Variables Reference Commit : https://gitlab.dell.com/gcbs/ordermanagement/om-gateway/omega/omega-cancelresubmit-consumer/-/commit/e9b3eef4786a0c0b5d4fad4f33e79e4409c33c3a Related articles Related articles appear here based on the labels you select. Click to edit the macro and add or change labels. false 5 OMF false modified true page label = ""kb-how-to-article"" and type = ""page"" and space = ""OMF"" kb-how-to-article true Related issues",
279459365,page,current,/x/JTaoE,Intern Roadmap,,False
279460722,page,current,/x/cjuoE,CheckMarx Vulnerability Suppression Process,"MAIN PROCESS: PAST EXAMPLES ON VULNERABILITIES, RECOMMENDATIONS, IMPACT for reference: 250 250",False
279461124,page,current,/x/BD2oE,Collection UI Engg. Details,,
279461126,page,current,/x/Bj2oE,Software Development Resources,"Dell Digital Guide to Software Development: This resource is a lot of reading documents, but it's what our organization has developed to spread knowledge throughout Dell Digital on the practices of a Software Engineer on a balanced team. https://learningstudio.dell.com/journey/ECL-aa11eeb5-25cf-4ce5-8d7d-116586aacf00 Helpful YouTube Videos: Topic Time Link What is Extreme Programming? 3min https://www.youtube.com/watch?v=kFM2Vcu-BRo How to Pair Program 9min https://www.youtube.com/watch?v=YhV4TaZaB84 Pair Programming defined by Agile 3min https://www.youtube.com/watch?v=ET3Q6zNK3Io TDD defined by Agile 3min https://www.youtube.com/watch?v=uGaNkTahrIw",False
279461129,page,current,/x/CT2oE,Collection UI Tech Architecture,,
279461155,page,current,/x/Iz2oE,Infra Details(Apps in PCF),"Angular Node Webapp UI and Java Restful service layer are deployed in PCF. Below are the details from from DIT, GE2, GE4, PROD PC1, PROD S3B DIT: https://apps.sausvtc01.pcf.dell.com/organizations/3a99531f-1400-4b44-9956-fba8af20dadf/spaces/f2e422ad-6721-44df-8e12-a66db187e9b1 GE1: https://apps.sausvtc01.pcf.dell.com/organizations/3a99531f-1400-4b44-9956-fba8af20dadf/spaces/fbd2c147-37c8-4f55-9bb6-21b5dd106069 GE2: https://apps.sausvtc01.pcf.dell.com/organizations/3a99531f-1400-4b44-9956-fba8af20dadf/spaces/68c459a9-7614-4224-b89d-01b71e46d4f0 GE3: https://apps.sausvtc01.pcf.dell.com/organizations/3a99531f-1400-4b44-9956-fba8af20dadf/spaces/389ccbd1-e7d7-475b-9aea-f73c562a61a5 GE4: https://apps.sausvtc01.pcf.dell.com/organizations/3a99531f-1400-4b44-9956-fba8af20dadf/spaces/f01c1601-2105-41eb-a7bb-dd75c6a8dadd PROD PC1: https://apps.sausmpc01.pcf.dell.com/organizations/0ebcd562-b042-4c55-a4c3-c8599ee025ed/spaces/fbb57a4a-7e57-4bf4-8803-a0dbe3aa3a0b PROD S3B: https://apps.sausmsc01.pcf.dell.com/organizations/6fc34aa2-2663-4579-8a3c-54ff91e85fe0/spaces/6b081188-9bea-46db-86b3-dfc5d558c7f7",False
279461157,page,current,/x/JT2oE,Oracle DB Details,Oracle DB contains the user access management config which will be replaced with API from Omega which will give User and his/her responsibility details DIT HOST = arsrvsidb-cname.us.dell.com PORT = 1521 SERVICE_NAME = arsvrs.sit.amer.dell.com Username: AR_COLLECTIONS_DIT SIT HOST = arsrvsidb-cname.us.dell.com PORT = 1521 SERVICE_NAME = arsvrs.sit.amer.dell.com Username:  AR_COLLECTIONS_SIT PROD Connection String:   jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST= arsrvpr1db-cname.us.dell.com )(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST= arsrvpr2db-cname.us.dell.com )(PORT=1521))(CONNECT_DATA=(SERVICE_NAME= arsrvp_rw.prd.amer.dell.com ))) USERNAME=AR_COLLECTIONS,False
279461159,page,current,/x/Jz2oE,Redis Details,Environment Database Name Endpoint port Password Non-Prod Collection-UI redis-10008.dcfredispaas02-np.us.dell.com 10008 Provided by email Prod Collection-UI redis-12358.dcfredispaas02-prd.us.dell.com 12358 Provided by email DR Collection-UI redis-12358.dcfredispaas02-dr.us.dell.com 12358 Provided by email,False
279461162,page,current,/x/Kj2oE,Service Accounts,,
279461164,page,current,/x/LD2oE,Repository Details,https://gitlab.dell.com/gcbs/accountreceivables/ar-collections/ar-collections-app.git https://gitlab.dell.com/gcbs/accountreceivables/ar-collections/ar-collections-account-service.git https://gitlab.dell.com/gcbs/accountreceivables/ar-collections/ar-collections-gateway-service.git https://gitlab.dell.com/gcbs/accountreceivables/ar-collections/ar-collections-site-service.git https://gitlab.dell.com/gcbs/accountreceivables/ar-collections/ar-collections-invoice-service.git https://gitlab.dell.com/gcbs/accountreceivables/ar-collections/ar-collections-config.git,False
279461167,page,current,/x/Lz2oE,DAIS SSO Details,,False
279461170,page,current,/x/Mj2oE,DAIS API Security Details,Non Prod: Client Id/Subscriber ID: 7cd59126-6f3f-47e3-a43b-3d497a279c3a Client Secret: nBNvlioo Prod Client Id/Subscriber ID: 492fed1b-073e-4dbe-97a8-14d5a44c386e Client Secret: CIKKkDaW,
279461172,page,current,/x/ND2oE,Service Endpoints,,False
279461176,page,current,/x/OD2oE,Links to access Collections UI,UI URLS: DIT - https://ar-collections-app-dit.ausvtc01.pcf.dell.com/ GE1 - https://ar-collections-app-ge1.ausvtc01.pcf.dell.com/ GE2 - https://ar-collections-app-ge2.ausvtc01.pcf.dell.com/ GE3 - https://ar-collections-app-ge3.ausvtc01.pcf.dell.com/ GE4 - https://ar-collections-app-ge4.ausvtc01.pcf.dell.com/ PROD - https://ar-collections.ausmpc.pcf.dell.com/,
279461181,page,current,/x/PT2oE,How to add a User in Collections UI,"Execute scripts in DB to create a new User. Going forward, omega will provide a service which will give user details and this DB users will get obsoleted. Any new user addition request now has to happen via executing sql scripts like below. INSERT INTO CUI_USER (USER_ID, CREATE_BY, CREATE_DT, EMAIL, ENABLED, FIRST_NAME, LAST_NAME, MODIFY_BY, MODIFY_DT, USERNAME, REG_LANGUAGE, REG_REGION) VALUES (32, 0, TO_DATE('13-MAY-20','DD-MON-RR'), 'chaitha_sagar@ dell.com ', 1, 'Chaitha', 'Sagar', 0, TO_DATE('13-MAY-20','DD-MON-RR'),  'Chaitha_Sagar', 'EN', 'IN'); INSERT INTO CUI_USER_ROLE_MAP (ROLE_ID,USER_ID) values (1, 32); INSERT INTO CUI_USER_RESPONSIBILITY_MAP (RESPONSIBILITY_ID, USER_ID) VALUES ('1', '32'); INSERT INTO CUI_USER_RESPONSIBILITY_MAP (RESPONSIBILITY_ID, USER_ID) VALUES ('2', '32');",False
279461184,page,current,/x/QD2oE,Collections UI Automation Testing,,
279461186,page,current,/x/Qj2oE,UX Design Links,"Collection UI Mockup (update - 19 Oct. 2022) : Collector Work List, Parent Party, Account, ToDo List tabs https://xd.adobe.com/view/86845028-2302-4774-85a1-c0ab517221cf-d3d7/ Collection UI Latest Mockup: Contains Party Tab, Notes and Attachments https://xd.adobe.com/view/a5c7a6ef-cb1a-43ca-47c7-ba7dd0113c68-d3f6/ Collection UI first mock up: Contains Landing page, Search Page with accounts Tab https://xd.adobe.com/view/ce72ee89-5c25-4f5f-4e2c-7e7aef77a0c5-b843/?fullscreen",False
279461230,page,current,/x/bj2oE,EMC,,
279461251,page,current,/x/gz2oE,Shipment Notification,"FOOE sends 330 Shipment Notification to OCI/Abacus similar to 100, 200, 300 from OFS This message is sent directly and ONLY to SupplyNet to indicate that the order is Shipped (It is not sent to OMEGA) This interface is exclusively for the Legacy EMC orders created via SupplyNet/MyQuotes When we get a 330 message, we enrich order details from order store, call FSL service to get tracking details and send to SupplyNet OFS UI: ABACUS UI: Technical Aid: IBM MQ where we get the 330 message: Region Queue Name (FOOE side) Queue Name (OCI side) MQ Config (OCI) US QA.FOOE.RESPONSE_DAO.OCI CL.OFS.OFS2OCI_RESPONSE.OCI Queue Manager: SOMPRDSU01 Host: SOMPRDSU01- cname.us.dell.com Port: 6701 APJ QA.FOOE.RESPONSE_APJ.OCI OCI.QL.OFS2OCI_MSG EMEA QA.FOOE.RESPONSE_EMEA.OCI OCI.QL.OFS_ORDER_STATUS Producer code listening to these MQs: http://abacus-services.us.dell.com/marathon/ui/#/apps/%2Fprod-application-group%2Foci%2Forder-response-applications%2Ffooe-response-producer-us http://abacus-services.us.dell.com/marathon/ui/#/apps/%2Fprod-application-group%2Foci%2Forder-response-applications%2Ffooe-response-producer-apj http://abacus-services.us.dell.com/marathon/ui/#/apps/%2Fprod-application-group%2Foci%2Forder-response-applications%2Ffooe-response-producer-emea Internal RabbitMQ: abacus.SUPPLYNETMQ FSL service invoked: https://fsl.us.dell.com/FSL/SIPPAsBuiltService/SIPPAsBuiltService/SIPPAsBuiltService.svc/rest/GetSalesOrderData",False
279461690,page,current,/x/Oj_oE,OMEGA-GCM SalesRep Update,250,
279461716,page,current,/x/VD_oE,MNA,,False
279461736,page,current,/x/aD_oE,FED To Direct,250,False
279469258,page,current,/x/ylyoE,Vipin Singh - User Interview Guide 6/15-6/19,,
279469385,page,current,/x/SV2oE,Meeting minutes,,False
279469390,page,current,/x/Tl2oE,IT Support handover,,
279469392,page,current,/x/UF2oE,Risks & Issues,250,False
279470833,page,current,/x/8WKoE,Genaro Alvarez - User Interview Guide 6/15-6/19,,False
279472930,page,current,/x/ImuoE,6.19,"J Cole 1x Mark 1x Keith 1x Brian 1x Sean 3x Integrate Vault story, Checkmarx & Sauce Labs must be delivered prior => J Cole why is the Vault story dependent? to showcase the entire value of Vault password change for the service account (non-prod) => Mark whatever pipelines use this account, need to update the password Mark coordinates on the tool template => yearly Sean works with Mark on template list of apps n Vaults external dependencies => Keith engagement with PKS folks was adversarial time and effort to demonstrate faulty functionality ""stay patient and apply heavy pressure"" -Austin brainstorm with Austin???... ""become user experts"" LEAD WITH OPTIMISM!!!!!! audio is awful in discord => Brian is there a better option?",False
279478187,page,current,/x/q3_oE,SIR Handoff,,False
279645239,page,current,/x/NwyrE,GFX Partial Cancellation,"GFX Partial Cancellation – Application Support Document Author: Gayathri Kambhampati [Gayathri_Kambhampati@ Dell.com ] ___________________________________________________________________ GFX Partial cancellation functionality: GFX/DF will trigger partial cancellation to ABACUS on IBMMQ ABACUS will consume the message from IBMMQ and publish on RMQ OFSUS-Response-consumer will consume message from RMQ and call OMEGA package. OMEGA package response will be routed back to GFX/OFS. Partial cancellation can be trigger one or more SKU(s). When ABACUS receive Partial Cancellation for few lines then OMEGA should acknowledge back with OC event When ABACUS receive Partial Cancellation for all the lines except freight SKU then OMEGA should acknowledge back with CNL event. OFS MQ details: ""channel"": ""SOM.OCI.04.TLS"", ""cipherSuite"": ""TLS_RSA_WITH_AES_128_CBC_SHA256"", ""hostname"": "" SOMPRDSU01-cname.us.dell.com "", ""port"": ""6701"", ""queueManager"": ""SOMPRDSU01"" ""OFSUS.dqName"": ""QL.OFS.OFS2OCI_RESPONSE_BOQ.DGT.OCI"", ""OFSUS.qName"": ""CL.OFS.OFS2OCI_RESPONSE.DGT.OCI"", OMEGA package details: APPS.XXEOM_CANCELLATION_PKG.PARTIAL_LINE_CANCELLATION OFS response MQ details: ""channel"": ""SOM.OCI.04.TLS"", ""cipherSuite"": ""TLS_RSA_WITH_AES_128_CBC_SHA256"", ""hostname"": "" SOMPRDSU01-cname.us.dell.com "", ""port"": ""6701"", ""queueManager"": ""SOMPRDSU01"" “OFSUS_PartialCancel.qName"": ""QA.OCI.OCI2OFS_STATUS.OFS ABACUS Logging: Identifier1: OrderNumber, Identifier2: BUID, Identifier3: DPID, Identifier4: 350 Identifier5: Source System (GFX/DF) Request payload from GFX has only one SKU Response payload to GFX Sku details in GOSS JSON Order has only one SKU, So OMEGA triggered CNL Cancelled_flag will get changed to Y for that particular SKU in Order Details. Common Endpoints: Rabbit MQ: http://abacus-services.us.dell.com/rabbitmq ABACUS Dashboard: http://abacus-services.us.dell.com/abacus-dashboard/#/ Marathon URL : http://abacus-services.us.dell.com/marathon/ui/#/apps Mesos URL : http://ausplabaap02.us.dell.com:5050/#/ Git path: https://gitlab.dell.com/gcbs/ordermanagement/om-gateway/order-fulfillment/ofs/us/OFSUS-RESPONSE-CONSUMER https://gitlab.dell.com/gcbs/ordermanagement/om-gateway/order-fulfillment/ofs/us/OFSUS-CHANGERESPONSE-PRODUCER",
279650846,page,current,/x/HiKrE,Veritas Useful Links-DB Connection/PCF/Application URL's,,False
279652610,page,current,/x/AimrE,User Interview Guide,"Goals: understand user's current workflow within SIR understand user's current pain points with the SIR application identify any opportunities to add to the current user experience Introduction: The goal here is set expectations with the interviewee and give them an understanding of why this interview is being conducted. introductions Sean Marcy Ana & Genevieve “Hello, my name is Sean Rowland and I’m on the Application Transformation & Modernization team that oversees the SIR application. Today, we are looking to learn more about how you currently use SIR and any pain points you have with using the application; we may also ask you to show us how you currently use the application and will be recording this interview .  How does that sound?” (Introduce whoever else is on the call/in the room to take notes on the meeting.) We want to gain credibility with the interviewee while also building a “safe space” when the interviewee feels empowered to answer questions accurately and truthfully. Read the interviewee, what sort of tone do you need to bring to the interview? It may be worthwhile to call out that this is a user interview and see if the interviewee has any experience with them. ""Have you taken part in a user interview or given feedback on a software process before?"" Ask follow up questions if so. User Interview: Can you explain to us your role within Dell?  How long have you worked here? How often do you log into the SIR application? What was the most recent time you logged into SIR?  Can you show us what you were working on? When you log into SIR, what are you trying to accomplish?  What is your main goal? Can you show us how you do it? How does you work affect the overall CVE backlog that Dell Digital is focusing on? Does all of the work you do to reduce the CVE count happen within SIR? Where do you experience difficulty with using the SIR application? Thank you for your time today!  Would it be alright if we reached out in the future if we have any other questions or we have a potential solution we wanted to run by you? Items to think through post-interview (30 minutes): What were the major pain points that the user mentioned? Are there any opportunities to enhance the current workflow? Do we need more time with this user? How was our process?  Do we need to change our user interview language at all?",False
279652745,page,current,/x/iSmrE,Tim Vanecek - User Interview Guide,,False
279652837,page,current,/x/5SmrE,Health check for applications,What is the goal of the health check? What is the solution? What is stopping us from building that solution?,False
279655653,page,current,/x/5TSrE,Rajesh Sriramdas - User Interview Guide,"Goals: understand user's current workflow within SIR understand user's current pain points with the SIR application identify any opportunities to add to the current user experience Introduction: The goal here is set expectations with the interviewee and give them an understanding of why this interview is being conducted. introductions Sean Marcy Ana & Genevieve “Hello, my name is Sean Rowland and I’m on the Application Transformation & Modernization team that oversees the SIR application. Today, we are looking to learn more about how you currently use SIR and any pain points you have with using the application; we may also ask you to show us how you currently use the application and will be recording this interview .  How does that sound?” (Introduce whoever else is on the call/in the room to take notes on the meeting.) We want to gain credibility with the interviewee while also building a “safe space” when the interviewee feels empowered to answer questions accurately and truthfully. Read the interviewee, what sort of tone do you need to bring to the interview? It may be worthwhile to call out that this is a user interview and see if the interviewee has any experience with them. ""Have you taken part in a user interview or given feedback on a software process before?"" Ask follow up questions if so. User Interview: Can you explain to us your role within Dell?  How long have you worked here? How often do you log into the SIR application? What was the most recent time you logged into SIR?  Can you show us what you were working on? When you log into SIR, what are you trying to accomplish?  What is your main goal? Can you show us how you do it? How does you work affect the overall CVE backlog that Dell Digital is focusing on? Does all of the work you do to reduce the CVE count happen within SIR? Where do you experience difficulty with using the SIR application? Thank you for your time today!  Would it be alright if we reached out in the future if we have any other questions or we have a potential solution we wanted to run by you? Items to think through post-interview (30 minutes): What were the major pain points that the user mentioned? Are there any opportunities to enhance the current workflow? Do we need more time with this user? How was our process?  Do we need to change our user interview language at all?",False
279655738,page,current,/x/OjWrE,Performance Testing,,False
279659271,page,current,/x/B0OrE,Internal plan for org,"What to do? Who to help? ETA Status New Joinee Onboarding plan We have to come up with a confluence pages like some I have with me for our space. Will share with Ashwini Ashwini June WIP Org chart I have some content will share with Shivam and then we can put up in a sharepoint or confluence so as we update regularly and can be shared to anybody if required Shivam June First cut ready Virtual offsite As offsite are now not possible, we can see if we can plan something in 2-3 hours virtually similar to fun with some performances etc Shivam July Goal setting in inspire For now send a reminder to all AR eng team members to complete their goals setting in inspire and then follow up in next steps Ashwini June Reminder Mail Sent Process to recognize team members Lets create  a document in share point of what all anchors/managers to do in tools available to recognize like inspire. Ashwini, Shivam, Amit – To define the process when to do and how to do etc July",False
279660635,page,current,/x/W0irE,Sean's notes,"Tim V ""Double Work"" problem that James Z already outline ""Showing the data '[ data = the progress team's have made closing CVE ] ""How do we make sure these vulnerabilities don't come back"" Sunil and Kiran Team's are reliant on Sunil and Kiran aggregating the data for them in order to go start remediating CVEs Can't easily get the data they need from the web app => they are using SQL queries constructed by Vipin Cannot easily see how many CVEs have been solved against time are required to read out on this on a weekly basis John P ""usability and managability"" of data from SIR queries are long and hard to maintain stored procedures objects having to manually run queries team is going down rabbit hole determining when the last successful data load was team does not have 100% confidence in the data data flow artifact extract flow artifact",False
279660959,page,current,/x/n0mrE,OFS CSS Cancellation,"CSS-CancellationService – Application Support Document Author: Ayanangsha Bharadwaj [ Ayanangsha_Bharadwaj@dell.com ] CSS-CancellationService functionality: The service is invoked by OFS to cancel an invalid Order. OFS hits service with the json request with the cancel reason. Service invokes OMEGA procedure with the request for cancellation. The event is marked as INVALID and OCI sends HLD event to GOV with the same cancel reason sent by OFS. It’s a Synchronous service. Received request from OFS is sent to OMEGA and after cancellation, the response from OMEGA is sent back to OFS. OCI REQUEST BODY: { ""CNLReason"": ""string"", ""EmailFormat"": ""string"", ""EnteredByBadge"": ""string"", ""OrderNum"": ""string"", ""OriginID"": ""string"" } RESPONSE BODY: { ""RETURN_CODE"": ""S"", ""RESPONSE_MSG"": ""Data inserted/updated successfully"" } SERVICE URL (ENDPOINT): https://abacus-services.us.dell.com/ofscsscancellation OMEGA package details: PackageName : XXEOM_CANCELLATION_PKG ProcedureName : P_UPLOAD_INV_ORDERS_OFS INVALID EVENT REQUEST PAYLOAD FROM OFS END RESPONSE SENT TO OFS FROM OMEGA HLD EVENT SENT TO GOV WITH THE CANCEL REASON SENT FROM OFS. <ns2:PublishOrderStatus
    xmlns:ns2=""http://xmlns.dell.com/CustomerCare/GOV/PublishOrderStatus/V1"">
    <ns2:OrderStatus>
        <ns0:OrderStatusHeader
            xmlns:ns0=""http://xmlns.dell.com/CustomerCare/GOV/OrderStatus/V1"">
            <ns0:BusinessUnitId>11</ns0:BusinessUnitId>
            <ns0:OrderNumber>636000993</ns0:OrderNumber>
            <ns0:OrderStatus>P</ns0:OrderStatus>
        </ns0:OrderStatusHeader>
        <ns0:CSSOrderCancellation
            xmlns:ns0=""http://xmlns.dell.com/CustomerCare/GOV/OrderStatus/V1"">
            <ns0:Channel></ns0:Channel>
            <ns0:ExchangeOrderNumber></ns0:ExchangeOrderNumber>
            <ns0:CancelReason>77625 | Rebook with VALS Delivery shipping method; </ns0:CancelReason>
            <ns0:CancelComment></ns0:CancelComment>
            <ns0:CreationDate>2020-05-30T04:28:24</ns0:CreationDate>
            <ns0:CreatedBy>-1</ns0:CreatedBy>
        </ns0:CSSOrderCancellation>
    </ns2:OrderStatus>
</ns2:PublishOrderStatus>",False
279661494,page,current,/x/tkurE,6.12,,False
282984735,page,current,/x/HwHeE,Sunil/Kiran User Interview Follow-Up,"Recording: Share recording with viewers: https://Dell.zoom.us/rec/share/v95cJr_g32JOfNaU81mAY6I-L5jOaaa81XRLq6UOnkvX9qjbKggjahQePOFWTfvi Password: 3T!oE33! Notes from Ana/Genevieve: When SIR tool is being used, we need more capability in there in that breaking up the data per domain and being able to track the remediations with some type of tool Downloading into excel and distributing to the teams is not ideal This tool they use properly breaks up the data per domain how they need it They’re concerned there are too many CVE downloads from Kenna Limit downloads but still use the front end tool from Kenna Wants SIR tool to give all the data without any downloads. Payal Asuri implemented their tool. Runs in visual studio. Uses Selenium. Column B you input a query that directly hits the Kenna DB. Column C is the total count from that query. Link in column E is the link with the actual CVE data. They wait max of 30 minutes for email from Kenna with the csv Asset score still isn't embedded into their tool yet. Risk score of an asset is between 0-100. How they assign risk score for an asset - it's based primarily on breach velocity, age of vulnerability, its exposure to the outside world (external vs internal assets) Only solve asset risk scores above 660. Main process flow they follow: their tool runs query, picks up data, passes to teams, inputs to TFS, engineers go work them and close them out in TFS, and once the vulnerability is gone, they’ll no longer appear in the queries The asset risk score is pulled from Kenna - do not use SIR at all",False
282985140,page,current,/x/tALeE,Presentations,,False
282985331,page,current,/x/cwPeE,Account Receivables Release View,250,False
282985792,page,current,/x/QAXeE,Volatility,Problem statement: ATM's volatility is too large to accurately estimate work Supporting facts: volatility is currently (6/16/20) at 62% in pivotaltracker Other information: what points are best for how could we break up the what are the different buckets of stories that influence the volatility?,False
282985903,page,current,/x/rwXeE,Michael Whelan - User Interview Guide 6/15-6/19,,False
282989204,page,current,/x/lBLeE,Rules based communication,Problem statement: ATM has internal deliverables elongated by Solution: Steps to interact with a,False
282989214,page,current,/x/nhLeE,TwistLock,,
282989234,page,current,/x/shLeE,VDC vs VTC,"Problem: VTC is the Dell sanctioned solution for non-prod. We have applications' non-prod in VDC. Do we need to migrate prior apps from VDC to VTC?  Where do we put them moving forward? Solution: J Wheeler's org is going to be in VTC confirmed by Casey Sledge with conversation with PCF team on 6/24/20 Next steps: Casey to confirm when the ""Solution"" goes into effect & what the exact solution is Follow up if they don't clarify with existing apps",False
282989351,page,current,/x/JxPeE,Wei Xia - User Interview Guide 6/15-6/19,,False
282990323,page,current,/x/8xbeE,Sean's notes_user interviews,Dana Vipin Mike Genaro Wei,False
283010339,page,current,/x/I2XeE,IT Support hand over documents,,
283010686,page,current,/x/fmbeE,Regaining Vault Access,Here are there corresponding PAC Groups to regain access Group Privilege Group Domain Group Did I complete the form? hv_cafraudservice_prod yes hv_sir_prod OTCAPPSADMIN App_SNOP_MONITOR_Prod app_snop_monitor rdpvault yes hv_dgpar_prod yes hv_atm_prod yes? completed for HV_ATM_PROD- HASHICORP hv_sir_prod yes hv_ymlMaker_prod yes? completed for HV_SIR_PROD- HASHICORP App_SNOP_MONITOR_Prod APP_SNOP_MONITOR- HASHICORP My tickets: https://dell.service-now.com/sp?id=requests&is_new_order=true&table=sc_request&sys_id=98d1a2311b6dd450206b635bbc4bcb39 Form to request: https://dell.service-now.com/sp?id=sc_cat_item&sys_id=a22b56ab134d660074f3dbf18144b0cd,False
283012378,page,current,/x/Gm3eE,Collection UI - AR and UI Microservices and UI details,,False
283014077,page,current,/x/vXPeE,Escalation Process,,False
283014425,page,current,/x/GXXeE,Glen Skidmore - User Interview Guide 6/15-6/19,,False
283446612,page,current,/x/VA3lE,Tableau Access,250,False
283448218,page,current,/x/mhPlE,Order Management Release View,,False
283449321,page,current,/x/6RflE,OAUTH Implementation Using DIAS,"What is Oauth2.0? OAuth 2.0 is a protocol that allows a user to grant limited access to their resources on one site, to another site, without having to expose their credentials. OAuth works over HTTPS and authorizes devices, APIs, servers, and applications with access tokens rather than credentials. It decouples authentication from authorization and supports multiple use cases addressing different device capabilities. It supports server-to-server apps, browser-based apps, mobile/native apps, and consoles/TVs. Authentication + Authorization Authentication is process in which we validate that someone is who they claim to be. Usually you can authenticate by providing password, certificate/RSA Token/, finger prints etc. Authorization is the process through which we check the permissions that someone has. Like, create, delete, insert or the grants to a mobile application. A Daily life example of OAuth2.0 Many luxury cars today come with a valet key. It is a special key you give the parking attendant and unlike your regular key, will not allow the car to drive more than a mile or two. Some valet keys will not open the trunk, while others will block access to your onboard cell phone address book. Regardless of what restrictions the valet key imposes, the idea is very clever. You give someone limited access to your car with a special key, while using your regular key to unlock everything. Or, now a days, you also see the dialogue box identical to below one along with the so-called typical sign up method Why OAuth2.0? To understand why oauth2.0, we will go through the older approach of server-server authentication HTTP Basic- A developer would send over a server’s unique username and password (often referred to as an ID and secret) on each request. The API service would then validate this username and password on every request by connecting to a user store (database, LDAP, etc.) in order to validate the credentials. Why this is not a good approach- Each application must handle username and password. Another username and password might need to connect to user store Same username & password being used for each request We can understand it with a mobile app downloaded on your mobile and it needs to be authenticated with your Google account, by above approach a user must provide the his/her google account credentials to the application, in order to authorize user application must need the access to Google’s user store. In such scenario application can read your emails and will have access to all other applications linked with Google, which will lead to risk to your private data. OAuth2.0 have four basic flows Authorization Grant Flow - A code is issued and used to obtain the access_token . This code is released to a front-end application (on the browser) after the user logs in. The access_token instead, is issued Server side, authenticating the client with its password and the obtained code . e.g. Third party app sign in with Google, Facebook Server etc. Implicit Grant - after the user logs in, the access_token is issued immediately. Client Credentials - the ’ access_token is issued on the server, authenticating only the client, not the user. e.g. Server-Server communication. Password Grant - the access_token is issued immediately with a single request containing all login information: username, user password, client id, and client secret. It could look easier to implement, but it has some complications. e.g. Login in your Twitter app with Twitter password. The goal remains always the same: to obtain an access_token and use it to access protected resources but we need to be able to choose a flow that best fits your need. Here you can understand more about the different grants by oauth2.0. JWT as OAuth2.0 Token To get access to the protected resources OAuth 2.0 uses Access Tokens. An Access Token is a Base 64 encoded string representing the granted permissions. Oauth2.0 framework does not specify what format access token should be, it is upto developer to integrate the token in their choice of Auth flow. By default, Auth0 generates Access Tokens in JSON Web Token (JWT) format. JWTs contain three parts: a header, a payload, and a signature: The header contains metadata about the type of token and the cryptographic algorithms used to secure its contents. The payload contains a set of claims, which are statements about the permissions that should be allowed, and other information like the intended audience and the expiration time. The signature is used to validate that the token is trustworthy and has not been tampered with. The permissions represented by the Access Token, in OAuth 2.0 terms are known as scopes . When an application authenticates with Auth0, it specifies the scopes it wants. If those scopes are authorized by the user, then the Access Token will represent these authorized scopes. OAuth2.0 Scope OAuth 2.0 scopes provide a way to limit the amount of access that is granted to an access token. For example, an access token issued to a client app may be granted READ and WRITE access to protected resources, or just READ access. You can implement your APIs to enforce any scope or combination of scopes you wish. So, if a client receives a token that has READ scope, and it tries to call an API endpoint that requires WRITE access, the call will fail. OAuth2.0 Client Credentials- While client still uses username and password (ClinetID/Client Secret), instead of sending them to API service on each request they are instead exchanged for token via Authorization Server The authorization server returns a temporary access token (which is used until it expires). The client then uses this access token when communicating with the resource server which means that your client’s most sensitive data (the id and secret) are only shared over the network once every expiration period, dramatically reducing the likelihood of compromise. Once the resource server receives the incoming request with the access token it will then validate the token with by talking to the authorization server. As we see in OAuth2.0 Secure Server-to-server communication takes place in 3 major parts – Authorization Server : is the component that performs the authentication and the authorization, it handles user authentication, token generation, and security validations. Resource Server : it exposes resources, as they could be REST API. After the Client App obtains the access_token , it will use it to call the Resource Server . One of the differences between the Authorization Server and the Resource Server is that the first one “only” handles authentication and authorization, and the second one “only” serves the content (the resources). This division can generate some confusion: it’s important to remember this is a logic difference and not an implementation rule. Client App : In this flow, the client is usually a REST API. The application must only have back-end and it must do any action on behalf of itself. Implementing OAuth2.0 with DAIS Authorization Server DAIS is the on-premise solution for Identity and Access Management and DCI is the cloud native current and future state. Both products are handled by the Identity team. DAIS Wiki - https://confluence.dell.com/display/DCP/Dell+Cloud+Identity DAIS uses Microsoft libraries to generate JWT Token. How to register with DAIS- To secure your API with DAIS V2, both client and resource owner should be registered as tenant to DAIS with your Application Group name and Owner’s ID. ABACUS is registered with DAIS as Application Group Name- ABACUS and Owner- Saon Saha . Owner can create multiple admins under one Application Group, admin can create multiple application under one group and get the client-id and secret. There are 2 different version by DAIS to secure your API- V2 V3 DAIS V2 Version - To secure API with V2 version, resource owner and client should be registered with DAIS. Authorization Server to expose the token and introspect (token validation) APIs for tenant to Authenticate and Authorize, DAIS is an Authorization Server. Client can generate the token by Authenticating with its Base64 encode Client-Id:Secret (Step 1), and access the secured resource by passing the generated access-token in header (Step 2) Resource Owner (Resource Server) can validate the token with Authorization Server by calling the Introspect API (Step 3), and return the requested resource to client if Authorized (Step 4) [Client App] Step 1- [Client App] Step 2- [Resource Server] Step 3- [Resource Server] Step 4- Drawback of DAIS V2- As you see to generate the token client should be registered with DAIS and Authorization Sever will be able to Authenticate . In this case any client who is registered with DAIS can generate a valid token and can be Authorized by any resource server (secured resource). APIs API Endpoint (Resource) Client Is Client Access? API 1 API 2 1 https://abacus-services-ge4.us.dell.com/oauth/api1 A ✔ ✔ B ✔ ✔ C ✔ ✔ 2 https://abacus-services-ge4.us.dell.com/oauth/api2 D ✔ ✔ B ✔ ✔ Not easy to integrate as it’s token and introspect APIs does not follow the OAuth2.0 RFC, need to customize the oauth2.0 libraries available for spring, java, .net Token API does not return the expire_in , to get the token expiry either client must decode the token using JWT library or need to call introspect API, which adds an extra call before calling secured resource. Need to cache the token externally. DAIS V3 Version [Benefits over DAIS V2] – It is improved version of V2 version as it has introduced the scope mapped with the client. Now client can only access the secured resource for which its scope is mapped. APIs API Endpoint (Resource) Client Scope Is Client Access? API 1 API 2 1 https://abacus-services-ge4.us.dell.com/oauth/api1 A scope-a ✔ B scope-a ✔ C scope-a ✔ 2 https://abacus-services-ge4.us.dell.com/oauth/api2 D scope-b ✔ B scope-b ✔ Client would not be able to generate the valid token without valid scope. It’s token and introspect APIs follows the OAuth2.0 RFC, and easy to integrate with the API without much code changes. Introspect APIs returns the expire_in time as per the RFC, no need to make an extra call to get the expiry of token. No need to cache the token, oauth2.0 library cache internally. DAIS V3 process of Authentication and Authorization is like V2, only the request to token and introspect APIs differs. Token Request- Token Response- Introspect Request- Introspect Response- Autoconfigure DAIS OAuth2.0 with Spring API- Autoconfigure V3 Token API- Maven Dependency- <dependency> <groupId>org.springframework.security.oauth.boot</groupId> <artifactId>spring-security-oauth2-autoconfigure</artifactId> <version>2.1.0.RELEASE</version> </dependency> Gradel Dependency – implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.0.RELEASE' Application Properties- security.oauth2.client.access-token-uri= https://oauth2-api-dev-dci.ausvdc02.pcf.dell.com/oauth2/api/v3/token security.oauth2.client.grant-type=client_credentials security.oauth2.client.client-id={Client-id} security.oauth2.client.client-secret={Client-Secret} security.oauth2.client.scope={scope} security.oauth2.client.resource-ids={resource} Add below annotation to SpringBootApplication class @EnableAutoConfiguration(exclude = {org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration.class}) This is to bypass the HTTP Basic Security form-based authentication which gets enabled when we add OAuth2.0 dependency in our classpath. Other way to disable the basic security- https://www.techiedelight.com/disable-spring-boot-security/ Create a Config Class in your application- @Configuration@EnableOAuth2Client public class ResourceConfiguration { @Value(""${security.oauth2.client.access-token-uri}"") private String accessTokenUri; @Value(""${security.oauth2.client.client-id}"") private String clientID; @Value(""${security.oauth2.client.client-secret}"") private String clientSecret; @Value(""$security.oauth2.client.grant-type"") private String grantType; @Value(""$security.oauth2.client.resource-ids"") private String resourceId; @Bean public OAuth2ProtectedResourceDetails oAuth2ProtectedResourceDetails() { ClientCredentialsResourceDetails details = new ClientCredentialsResourceDetails(); details.setClientId(clientID); details.setClientSecret(clientSecret); details.setAccessTokenUri(accessTokenUri); details.setId(resourceId); details.setScope(Arrays.asList(""ad:qc"")); return details; } @Bean public OAuth2RestTemplate oauth2RestTemplate(OAuth2ClientContext clientContext) { OAuth2RestTemplate template = new OAuth2RestTemplate(oAuth2ProtectedResourceDetails(),clientContext); AccessTokenProvider accessTokenProvider = new AccessTokenProviderChain( Arrays.<AccessTokenProvider> asList(new ClientCredentialsAccessTokenProvider())); template.setAccessTokenProvider(accessTokenProvider); return template; } } Autowire the OAuth2RestTemplate in service where you make http call to secure service, and use this template in place of RestTemplate, e.g ResponseEntity<String> response = oauth2RestTemplate.exchange(formatted_URL, HttpMethod.GET, null, String.class); Run your app with debug= true in properties, you will be able to see the logs. Autoconfigure Token V2 API- Since DAIS V2 API is not compatible with the OAuth standards and RFC hence oauth autoconfigure jar does not behave properly with v2 version of token service. To configure the V2 version in spring/scala application- Create a method to get the token while calling the token service. Decode the token using jwt library and load cache (eh cache, git cache etc) with access_token before expiry Override the RestTemplate and set Authorization Header. AutoConfigure Introspect V3 API- Introspect API of DAIS V3 version is compatible to RFC and oauth standards, and easily configurable with your code without making much changes to your existing functionality. To implement it Add Maven/Gradle Depedency to your POM.xml/build.gradle file <dependency> <groupId>org.springframework.security.oauth.boot</groupId> <artifactId>spring-security-oauth2-autoconfigure</artifactId> <version>2.1.0.RELEASE</version> </dependency> OR Implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.0.RELEASE' Add following properties – security.oauth2.client.client-id={Client-id} security.oauth2.client.client-secret={Client-Secret} security.oauth2.resource.tokenInfoUri= https://oauth2-api-dev-dci.ausvdc02.pcf.dell.com/oauth2/api/v3/introspect Create a custom configuration class by extending ResourceServerConfigurerAdapter @Configuration public class CustomResourceServerConfigurer extends ResourceServerConfigurerAdapter { @Autowired private RestAuthenticationEntryPoint restAuthenticationEntryPoint; @Override public void configure(final HttpSecurity http) throws Exception { http.authorizeRequests() .antMatchers(""/login"").permitAll() // to bypass the HTTP basic security form-based login .antMatchers(""/health-check"").permitAll() //to exclude this endpoint from oauth security .antMatchers(""/restricted"").permitAll() .antMatchers(HttpMethod.GET, ""/oauth/restricted"") // scope in token should match with… .access(""#oauth2.hasAnyScope('orderdetails','admin')"") // …to access this endpoint .and() .authorizeRequests() .anyRequest().authenticated() // all other endpoints will be authenticated with oauth .and() .exceptionHandling() .authenticationEntryPoint(restAuthenticationEntryPoint); } @Override public void configure(ResourceServerSecurityConfigurer resources) throws Exception { resources.resourceId(null); } } And finally add @EnableResourceServer annotation to your controller class, this will enable the secured resource as Resource Server. Run your app with debug enabled and you will be able to see the logs- AutoConfigure JWT Key Signing v3 API- Follow the same steps as Introspect API autocinfiguration , in application.propeties instead of Introspect api configs add the following- security.oauth2.resource.jwk.key-set-uri= https://keymanagement-g1.ausvdc02.pcf.dell.com/api/v1/Keys/public/signingkey?purpose=access_token Rest all will remain the same, this will prevent each & every call to introspect API to validate the token. Public Key endpoint would provide the public key that can be used for token validation as well. If the application does not prefer to make an extra network call to the introspect endpoint, it can use the Public Key Validation with KID in JWT Token- Instead of every time validating access token via Introspect API with Authorization server, we can validate its integrity using the public key provided by the Authorization Server. Get the access token from header, from jwt token it will extract the KID value and with this KID resource will call (once in 3months) the jwk key set api to get the public key and will cache it till expire. Every consecutive call to protected resource will be validated with public key. (No need to make a call to introspect API to validate the token) It has benefits to verify Signature, roles, and Scope within the resource itself. https://www.baeldung.com/spring-security-oauth2-jws-jwk",False
283451061,page,current,/x/tR7lE,GPG-AuthorizationStatusUpdate Flow,250,False
283453043,page,current,/x/cyblE,Get Paid replacement,,False
284229647,page,current,/x/DwDxE,Charter & OGSM,,False
284237335,page,current,/x/Fx7xE,ATAM and QAW Process,,False
284237339,page,current,/x/Gx7xE,Types of Architecture diagrams,,False
